// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = call @inputs() : () -> tensor<20x20xcomplex<f32>>
    %1 = call @expected() : () -> tensor<20x20xcomplex<f32>>
    %2 = stablehlo.constant dense<(1.000000e+00,0.000000e+00)> : tensor<20x20xcomplex<f32>>
    %3 = stablehlo.add %0, %2 : tensor<20x20xcomplex<f32>>
    %4 = stablehlo.constant dense<(1.000000e+00,0.000000e+00)> : tensor<20x20xcomplex<f32>>
    %5 = stablehlo.subtract %0, %4 : tensor<20x20xcomplex<f32>>
    %6 = stablehlo.multiply %3, %5 : tensor<20x20xcomplex<f32>>
    %7 = stablehlo.sqrt %6 : tensor<20x20xcomplex<f32>>
    %8 = stablehlo.add %0, %7 : tensor<20x20xcomplex<f32>>
    %9 = stablehlo.log %8 : tensor<20x20xcomplex<f32>>
    %10 = stablehlo.custom_call @check.eq(%9, %1) : (tensor<20x20xcomplex<f32>>, tensor<20x20xcomplex<f32>>) -> tensor<i1>
    return %10 : tensor<i1>
  }
  func.func private @inputs() -> tensor<20x20xcomplex<f32>> {
    %0 = stablehlo.constant dense<"0xtensor<20x20xcomplex<f32>>
    return %0 : tensor<20x20xcomplex<f32>>
  }
  func.func private @expected() -> tensor<20x20xcomplex<f32>> {
    %0 = stablehlo.constant dense<"0xtensor<20x20xcomplex<f32>>
    return %0 : tensor<20x20xcomplex<f32>>
  }
}

