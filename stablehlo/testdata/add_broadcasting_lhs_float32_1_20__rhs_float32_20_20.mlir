// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<1x20xf32>, tensor<20x20xf32>)
    %1 = call @expected() : () -> tensor<20x20xf32>
    %2 = stablehlo.broadcast_in_dim %0#0, dims = [0, 1] : (tensor<1x20xf32>) -> tensor<20x20xf32>
    %3 = stablehlo.add %2, %0#1 : tensor<20x20xf32>
    %4 = stablehlo.custom_call @check.eq(%3, %1) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<1x20xf32>, tensor<20x20xf32>) {
    %0 = stablehlo.constant dense<[[-1.10188031, 0.996330797, 1.92112279, -1.52047563, 3.07587576, -2.57213712, 5.45067644, -5.22263908, 3.13604856, 1.59823442, -1.5512104, 9.507200e-01, 1.95616412, -0.831305325, 3.11688352, -5.12012577, 0.943091392, 4.13716125, -4.63083601, -0.232243434]]> : tensor<1x20xf32>
    %1 = stablehlo.constant dense<"0xADE24840C8F7043FBFC819C0830E8BC03BFD87C016AB67C00F3758C02C077C3FB3698940D24718C07E1E564088B55F4047907440C0CABEBF22421D4059AE34409FB705C0FA7BA9BFC3A1EFBFCDBE204018B6B9403AD79D40D29B57C0FB9DFEBFD1FD6EBC142EC5BBB8D572BE391C013F5343B7C0D73489BEEC3CBE3F4289393EBB6B35C0B3F77B40171CAA3F5B5E4EBFD2C369C09CDAABBED0DA2CC0225ADBBE998940C02946BEBF897217C05A6A554065A3CC3FF0828DC02EF76640E55CF33FDA3B7F3FF9E935C0935216C049F6AAC0941ADDBEB0FCF1BF993909C07B1A46C078F50CC0F7B112C0F314EA40B480F640A0A80C4013C50840E102B1BF3AE2DB3FA895F1BDBF08E4BFB74F9D3FEA16733FC140A43EFF6D4440EED75F404A96583FD5E931C0E78B673F33784CC0533E8D40E8228ABE099DC93F5D95AE3F93C913BE0D7E7D40690B97C0112294BD25BFDF3F835E74407686983FC35B62C06B73FF3FFA2919C0601B2EC0089D80C00768FBBF40A036404A51D8BEC026B73F40C2A2BFAA93DE3DE2107F409565B440D28518C0D2B3AB408EBC3140867FFC40440E2F3EA76CD53F73AEFFBEEC84974054798AC0880975C055C5A33FE72623405384CA3DE69B9E40FFBF75C0D6B0E5BF41E5A7408A66374044C78540A5B31CC0B991A33F95B585C0B2C26D4016233D4075ABE03F9F6A1B405D813B404E0818BF49EABD3F649644C0FF798FC03CC52DBFA4B6064002D568C046C80BC0615933C029E52DC05E1544BF9F12F840F07070408151BABF8F134A40CD05493EB5988E3F59F450BF52D3A83D0C8EFA3EC1C76AC010A72CC0714D08C05E7576C04F1A4CC0EF599EC09E633B3FAE7C2EBF643E3DC016D421BFAE0382BFC30108C0DF346DC0AD9505BF6586FDBEA0366FC027E11240454FE440797BD43FA0D3963F0EB15040886D7340AB21D13EDC321BC0666DBDC06BB40D4049BCF63EF1BC14C0B522B13FFCE8883D6541CEBFB7278B3F960524BF28E2E53FB96857BEB973C43F8F1935409D3DC13F386119BF5A1AAD400022CEBFE68EABC0EB423840397B2F40DDA0CBC00E8447C005F9FC406E49D5BFA974224084D613401F429DBED48696401A131BBF0854853F231B70408F91FBBF692706C0075C88BF8AD98340E470304016C0F63FE0C5253F38CC9B40A92A19C04D1DAB3FF18A8F40F8A87AC095C799C098E867C0D2D7D3BF61B41740CABAA64022C11F3FC50F91BFC14315C02B043DBF7F88A03FC6C84440EF735EC036ADB1C09A76F23F265B8CBFAFC0E6BEA0438E406388773FF8A452BF0D78A340409F55BF9CEA1EBE73D6893FDA58DD3F3FFB484056907CBF8FC63D3EA7480B4018B0853FF7F97A3E091146BFCD034EC0CD067B3F27E18F409FF217C0F63DEF3F349E2A4087A8153EEB611F40C94AA7C0739B32C0C989D8C092F0F93FBE8F97C08E0A9140E75789C013F860BF06354EC098CEB53ED72A31C06BFEF7BFA69B0BC00CBC4140B94E2FC0B17A05C0BC309840E88F33BE5A700240CD0704C0ECBF02C00532BBC0F2711440DFADC540CDB5EDBEE95025C04B92C7BFDCB024C08F6917C0E52836403A9C8C3FADC84BC0A28688BFBA910AC16A01A13FDB8E863FA4CDBBBF181E29BF732D993D5C46013FF28827C0D8A0A1C05A562DC0F5C49A40691AA4BFFBE5A5C0612C9FC0AC028FC01FA663C0B9315AC02B731CC0B168F1BF67BEFAC047CB5EC00BFD5CBFF52E043FBF1810C0DED2A43FE6776140335E743EA9532B40AC5C0A409FF6A93FDB0365C00E8E0E3F3AF944C0145863BFE2437AC09D59D840FBA4E6BFC7F3AFBF4CAAD53F397E3CC060D62EC0F004813FBE2A823FB942C540A35384C01B6DE83C9F7F47C0E3D11940E37A14BF7C2A08BF50441B40274934BD13568040EE7F31C0EA2542C028E910C0B5FA1BBF39E860C0571889BF35A881C0894DC33DD5AB553F640853C09F2C1240181E63406504D5C0705785C0AA58E6BF42AF873E56B626404DAEDE3F109E5BBF0B40A4BFD5E10040955E65C095ADB0BE4FAEBD3F3E0D574070310F40376FBFC038519EC098752140DB4297C0EA2F4FC0A784DE3FA49FA3405F78D23F1BAC213EF69E18BF5D39E4BF039DC73E42B7903EE2E81B4071A04ABF93A28440CA7E803FE41A5240A8D11FC007888CBF3492B6BF9A4483BE64E8BD404EB75B40076394402CC6A63F9732ACBE1F1C2940E90206C045F434C0AE237F407659A1C0AD900F40DAAC47C065E58DC0907548C0"> : tensor<20x20xf32>
    return %0, %1 : tensor<1x20xf32>, tensor<20x20xf32>
  }
  func.func private @expected() -> tensor<20x20xf32> {
    %0 = stablehlo.constant dense<"0xtensor<20x20xf32>
    return %0 : tensor<20x20xf32>
  }
}
