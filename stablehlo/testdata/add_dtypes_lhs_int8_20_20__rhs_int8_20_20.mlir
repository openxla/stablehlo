// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xi8>, tensor<20x20xi8>)
    %1 = call @expected() : () -> tensor<20x20xi8>
    %2 = stablehlo.add %0#0, %0#1 : tensor<20x20xi8>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x20xi8>, tensor<20x20xi8>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xi8>, tensor<20x20xi8>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xi8>
    %1 = stablehlo.constant dense<"0xtensor<20x20xi8>
    return %0, %1 : tensor<20x20xi8>, tensor<20x20xi8>
  }
  func.func private @expected() -> tensor<20x20xi8> {
    %0 = stablehlo.constant dense<"0xFFFAFCF9010501FF0003FFFD0601FB02FEFBFDFE00FC0503FEFFFD03FFFC02010500FC02F9FBFF020503F80000FE0400FDFD0003FE020AFB050002050100FD00FF02FBFF00FE09FB01080204FEFB02FF01040103FBFBFCFA01FFFAFA0507FEFF0000FE01FAFA0100FB02FCFDFD00F6FC0201FDFE02030102020301020402FE02FD0004FDFEFCFBFEFC010304000106FFF8FE030500FCF60201FD0206020401FCFB00FE01010204FCFEFC02FE0803FCFDFE01FCFE02F7FC0102FC01FF020001FE030205FEF8020B01FBFB0104FAFF010601FA040004010102FD01080102FDFEFAFF02FD0401080001FC03FF00FDFF030703FE000001FE030600FE00FE0300FFFC0101050102FC0303030201FF0007FCFB01FFFF0003F900FEFB000001000203FAFFFFFC03FDFD0201FD090301030500FDFEFF010301FEFCF802040200FCFFFFFF00F90101FDFEFFFB0201FD020102010002FD0304FDFC03FCFB04FA00F90306FB02F9030202FC040101010700FF03FC0002FE0102FFFCFCFF05FFFC04030104FEF6FD01FD0401F8FD0304030102F5FCFD"> : tensor<20x20xi8>
    return %0 : tensor<20x20xi8>
  }
}
