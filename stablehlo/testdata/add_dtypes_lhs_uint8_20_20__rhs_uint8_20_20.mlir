// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xui8>, tensor<20x20xui8>)
    %1 = call @expected() : () -> tensor<20x20xui8>
    %2 = stablehlo.add %0#0, %0#1 : tensor<20x20xui8>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x20xui8>, tensor<20x20xui8>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xui8>, tensor<20x20xui8>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xui8>
    %1 = stablehlo.constant dense<"0xtensor<20x20xui8>
    return %0, %1 : tensor<20x20xui8>, tensor<20x20xui8>
  }
  func.func private @expected() -> tensor<20x20xui8> {
    %0 = stablehlo.constant dense<"0x050A06050305030202030A03010801020402060302050B050406010803040500030109020006040300040A040301010207040B0601030302020401010400060406000501020708050200040704010203040E06020903040501020209040407010502040505050306070200050005090106050304020506080305050702010B0403020304030205020103030700010304040409030201010203050604040B0205060402050205040403040502050E050206060901050605020B010303060402010803010403030704040505020205000504020501040705080403040A01020406030A040202020208070101020004020306030B02070904050108030303050105010107010801000908010204030204040303070404010204040502020205030308060A04040802000606030305030307020302030502090507030000050907030A0603040200010400030205080502010302060A000304020201010204020000090505090702040405020908000503020302090405030800020205020103050104060404050504010601070301020401"> : tensor<20x20xui8>
    return %0 : tensor<20x20xui8>
  }
}
