// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xui8>, tensor<20x20xui8>)
    %1 = call @expected() : () -> tensor<20x20xui8>
    %2 = stablehlo.and %0#0, %0#1 : tensor<20x20xui8>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x20xui8>, tensor<20x20xui8>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xui8>, tensor<20x20xui8>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xui8>
    %1 = stablehlo.constant dense<"0x00030500060401020004050101000100010003000103010207060101000002000101000203010200030000020500010006010202040304000201040206000001010401010302050602060502090303040000000101050301050402040501020204010201030305020101000000020402020201020300010704010506020301010300010003000005000301010002000103000401080301000300060101000002040000020405040003020105030601040000040201030505010200060006000004050000060404010204050401010101010005030005060500000000000301000401050702050100040007020100010200040302010102030202030005000101010003030500040304040101000401000202010703020000060001010303000100000303020203020404000500020200010604020203040405010203000300020000030103010101000101010001000000020002030101000105010002040001040201030301000804000403000305020300000002020200000503010001060203000000010202000705000001010302"> : tensor<20x20xui8>
    return %0, %1 : tensor<20x20xui8>, tensor<20x20xui8>
  }
  func.func private @expected() -> tensor<20x20xui8> {
    %0 = stablehlo.constant dense<"0xtensor<20x20xui8>
    return %0 : tensor<20x20xui8>
  }
}
