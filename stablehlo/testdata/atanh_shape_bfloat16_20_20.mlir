// RUN: stablehlo-opt -inline %s | stablehlo-translate --interpret
// RUN: stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt > %t.0
// RUN: stablehlo-opt %s > %t.1
// RUN: diff %t.0 %t.1

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = call @inputs() : () -> tensor<20x20xbf16>
    %1 = call @expected() : () -> tensor<20x20xbf16>
    %2 = stablehlo.abs %0 : tensor<20x20xbf16>
    %3 = stablehlo.constant dense<1.000000e+00> : tensor<20x20xbf16>
    %4 = stablehlo.compare  GT, %2, %3 : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xi1>
    %5 = stablehlo.constant dense<0x7FC0> : tensor<20x20xbf16>
    %6 = stablehlo.log_plus_one %0 : tensor<20x20xbf16>
    %7 = stablehlo.negate %0 : tensor<20x20xbf16>
    %8 = stablehlo.log_plus_one %7 : tensor<20x20xbf16>
    %9 = stablehlo.subtract %6, %8 : tensor<20x20xbf16>
    %10 = stablehlo.constant dense<5.000000e-01> : tensor<20x20xbf16>
    %11 = stablehlo.multiply %9, %10 : tensor<20x20xbf16>
    %12 = stablehlo.select %4, %5, %11 : tensor<20x20xi1>, tensor<20x20xbf16>
    %13 = stablehlo.custom_call @check.eq(%12, %1) : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<i1>
    return %13 : tensor<i1>
  }
  func.func private @inputs() -> tensor<20x20xbf16> {
    %0 = stablehlo.constant dense<"0xtensor<20x20xbf16>
    return %0 : tensor<20x20xbf16>
  }
  func.func private @expected() -> tensor<20x20xbf16> {
    %0 = stablehlo.constant dense<"0x423FC07FC07FC07FBDBE82BFC07F3EBFC07FC07FC07F4A3FC07FB3BBC07FC07FC07FC07FC07FC07FC07F5CBF58BF5A3FC07FC07FC07FC07FC07FC07FC07F8EBE0C3F62BFC07F09BFC07F1DBCC07F7F3B9CBEC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07F803FC07FC07FC07FC07FFABEC07FC07FC07FC07FC07FC07FC07F1C3FBBBEC07FC6BFC07F35BEACBEC07FC07F0CBEC07FC07FC07F1E3EC07FC07FC07FC07FC07FC07FC07FF93DC07FC07FC07FC07FC07FC07FC07FC07F143FC07FC07F913EC07F513FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07F70BFC07FC07FA43EC07FC07F76BFC07FC07FC07FC07FC07FC07FFEBEC07FC07FC07FC07FC07F043FC07FC07FC07F0E40C07F413FC07F933FC07FC07FC07FC07F7CBEC07FC07F893FC07FC07F5E3FAEBEC07FC07FC07F5A3FC07FC07FC07FC07FFF3EC07FC07FC07FC07FC07FC07F2ABFC07FC07FCDBE033FC07FB93FC07FC8BDC07FC07FC07F4D3FB0BCC07FEA3EC07FC07FC07F36BE7BBFC07FC07FC07FC07FC07F5CBEA43EF43E5A3FC07FB8BEAB3FC07F26BEC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FC07FE3BE0EBFC07FC07FC07FC07FC07F423FC07FC07FF83D233FC07FC07FB9BFC07FC07FC07F24C0C07FC07FC07FB73FC07FC07FC07F1D3FC07FC07FC07F44BFC07FA9BEC07FC43FC07FC07FC07FADBFC07F963FC07FC07FC07FC07FC07FC07FC07FDFBCC07FC07FC07FC07FC07FA63EC07FC07FC07FC07FC07FC07FC07FC07FC07F87BEC07FC07FC07FC07FC07F9A3DC07FC07FC07FC07FC07FC07FC07FC07FC07F2C3EC07F543EC07F733FC07FC07FC07FC07FE2BEC07FC07FC07FC07FC07FC07FC07F893FC07FC07FA9BDC07F1A3E39BEC07FC07F1ABFC07FC07FC07FC07FC07FC07FC07FC07FC07FBABEC07FC07FC07FC07FC07FC07FC07FA7BFC07FC07FC07F6ABFC07FC07FC07FC07FC07FF83DC07FC07F0ABFC07FC07FC07FC07FC07FB6BE28BEC07FC07FC07FC07FC07FC07FC07FC07F2CBFC07FC07FC07FC07FC07FC07FC07F323E443EC07FC07FC07F5A3FC07FC07FC07FC07FC07FC07F"> : tensor<20x20xbf16>
    return %0 : tensor<20x20xbf16>
  }
}

