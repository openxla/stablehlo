// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = call @inputs() : () -> tensor<20x20xf16>
    %1 = call @expected() : () -> tensor<20x20xf16>
    %2 = stablehlo.abs %0 : tensor<20x20xf16>
    %3 = stablehlo.constant dense<1.000000e+00> : tensor<20x20xf16>
    %4 = stablehlo.compare  GT, %2, %3 : (tensor<20x20xf16>, tensor<20x20xf16>) -> tensor<20x20xi1>
    %5 = stablehlo.constant dense<0x7E00> : tensor<20x20xf16>
    %6 = stablehlo.log_plus_one %0 : tensor<20x20xf16>
    %7 = stablehlo.negate %0 : tensor<20x20xf16>
    %8 = stablehlo.log_plus_one %7 : tensor<20x20xf16>
    %9 = stablehlo.subtract %6, %8 : tensor<20x20xf16>
    %10 = stablehlo.constant dense<5.000000e-01> : tensor<20x20xf16>
    %11 = stablehlo.multiply %9, %10 : tensor<20x20xf16>
    %12 = stablehlo.select %4, %5, %11 : tensor<20x20xi1>, tensor<20x20xf16>
    %13 = stablehlo.custom_call @check.eq(%12, %1) : (tensor<20x20xf16>, tensor<20x20xf16>) -> tensor<i1>
    return %13 : tensor<i1>
  }
  func.func private @inputs() -> tensor<20x20xf16> {
    %0 = stablehlo.constant dense<"0xtensor<20x20xf16>
    return %0 : tensor<20x20xf16>
  }
  func.func private @expected() -> tensor<20x20xf16> {
    %0 = stablehlo.constant dense<"0x1424007EEC2F007E007E007E007E007E007E1D3B007E6FBE007EFAB0007E4837BBB5007ED62A007E3933007E8EB2007E007EDF3E007EDC26007E007EAA325ABA4CBF007E007EF330007E723844A8007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007ED438007ECBBB007EA224007E007E3239007E96BC007E8930007EFAB4007E007E007E007E007E007ED2B8007E007E9AB1007EFC31007E98BD007E007E007E007E007E007E01BD007EE71E007ED6BE007E007E007E007E007EC0B9007E007EBB3D007E2EA9D2BA007E6A3A007E007E2DBA007E7C2D007E007E007E007E007E007E007E007E007E04AFE63C007E007E007E9A35007E007E007E61B8007E007E007E007E007E007E007E007E007E007E64B4007E007E007E007E007E007EC330463038B696BD007EF73C007E007E007E007E007E2DBA007E007E007E8935203B007E007E007E007E007E007E007E6AB8007E762F007E007ED2354CBBE834007E007E007E007E007E007E007E007E4238007E007E007EEC34C8B8007E007E007E5434007E007E007E007E5FB860B89839223A007E62B1007E007E007E007E007E007E007E007E26B5007EBCBB54B8007E42BF007E007E007E007E007E007E183B007E007E007EDEBA007E007E007E9EBAD1B4007E3434007E007E6CB4007E423560B8A8370638007E1536007E007E007E007E007EC73B23B6007E402C16B7007E007E007E007E007E007E2438EC33007E007E92B916B8007E007E007E007E007E007E20BC007E007E007E007E007E007E007E007E78AA007E24B5007EC7BD007E007E007E42BBDAABACA8007E007E007E007E007E007E062F86AB007E007E007E007E1BBC38302EBD007E007E007E753EB0A3007E64B4007E007E007E007ECBAB007E7935007EB2BEB2A9007E007E007E007E007E007E007E007EF8A9007E007E007E007E007E902E007E007EE2B1007E007E4237B8BA3CBB007E007E007E007E007E007E14B8007E007E007E007E007ED0A9E4BA007E007E007E007E007E007E913C3140007E007E007E007E007E007E007E007E0630007E007E26BD007E007E"> : tensor<20x20xf16>
    return %0 : tensor<20x20xf16>
  }
}

