// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<4x5x3x3xf32>)
    %1 = call @expected() : () -> tensor<2x6x6x3xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[0, 1, i, o]->[b, 0, 1, f], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<4x5x3x3xf32>) -> tensor<2x6x6x3xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x6x6x3xf32>, tensor<2x6x6x3xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<4x5x3x3xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0x39D09BBF636E423F0CEF28BF230FCF3F7EF40BC0D696C5BF36309DBF0CBA53C060D72BC094FF38BFC445864067AE92BD2E1FCA3FE6DB2AC08C28BB3FDAC23740DBAC7AC006AB4540B0A749400A3561BF3610AFBE070C673FD56C2D3F585680C04617C4C09F7E864015F09C40683181BEE69CFBC04CE54DC0FF580040F30DC9BFBBF23DC04035E0BF7C3DBABE39BDB53FEA9FE0BF0DA605C0239E1140CCB709C0C1F03140A337463F28952DC0AE7ADA3EA4564A40005D5BC0B65700BEF8C9EDBD1910623FD2591D40C4C627C0B742243F0051623E5532C03FA8C854BF824B984090F2373D9AFC69BF2DE1E6C0EDF730BF51843ABE4D0731C0697501C09F6A983EDAADF6BEDA37B54079B8DD3F080D07C09C874A3ED99D273F18B53440E3FA9F3E905997BF4A32EF3FFCD57FBFC99EC3BE16224840F1FD56BE26990C40328FBA3F96F020C068B316BFAEF256C0490E3BC031C2C2BF51867FC028D48C3FE44796C0FEDAD73F4BD70DBFEA96A3BF4511404085FE5CBFC53D7D4039709DC0C12103C0A2B3E23F908B1440174A2E3F51F3DABF03F1123FE2EF6EBECA51BD4035D25CBFB8A536C00D287240352F833F2F3F6E40E3AED23F6BDFB73FC4660ABF2FFE1B4034A35740F63AECBF222F40BFECD713C06F5FAEBF4C633E4001599BBFB74A9DC02F66973F688139BE6B4FDABDE433D93F79A812BF889A3A40C365E4BE1A4285C073AA443EE09BA4BF812242BECB787540E8CA32BFD0B6DB3F8EAC4DC0E3E242BFB51FEDBFA7F345C0E2B2B1BFA3F27C3FFBAABEBFC70A014065355C403A80F93F15B265BFCE84C8BF8C3453C034DC76C078BD2240FEEDBCC0EAC984BD703A273F6245CCBFB72EBF3F2F8ACEBFCC503C40CED5F13E3C33BBBFA5DBEBBDD3857B40EFC536C0A085B4BF340F83BF3F32AEC0778AB13ECB18993FB991BCBF18601C407491C03F9AA1FA40D2A20DC0119296C0D945C83F26A401C0FF8D663E676630C06FA0C340A51EDDBFCAB44DC0B0303E40"> : tensor<4x5x3x3xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<4x5x3x3xf32>
  }
  func.func private @expected() -> tensor<2x6x6x3xf32> {
    %0 = stablehlo.constant dense<"0x63B07442276CD3C2B6E400C206ED394199EDB442F45D74C158C581C2B9330442172DA5428801F0C12AC92B4350BF4F40C9B98DC1FA558742D83BFA42EB9353C27F76E4C2069707C15EC343C2D01284424E310EC35F8790C2ECE8E740AE9247426E15FEC264818542E9797042B26106C2FCBBB242A3B61C43C01A0AC2A0172DC24A1D15438917ACC18C1AD7C10E2C4A42C054E7BF3E9AFEC264E31A4120A51241397CBAC221648A411B8192419AC9B5C215D0BA4241D177C24168AE42A20BFCC145E590C244B9E042B8D6764261EAF6C2E8B72243639D50C25DCC0742C8CE1EC17CC9FF41D22652425C1F36C22EAE9241C9C104C3AA77DAC15EDF544268D612C12E8FC5414E53804252FE7BC1940FE5422CCF39C10B2955C21AF66441EC7B1341F39F92C28011F1C14E0876C2B97A97C2896F8FC2FD1B3A42C42BD141CF010FC2B0BDF4426D854442E49404C283F2CDC29D934FC2E07F2743447A0FC3BAB194426B315A4290A22CC29C10BF4019A7E54118CE9F421A9E244230BAFDC1C8088AC1ACA88141575B35429CB9914140D88D42921F2F43DAA691C2C69D09C190C2954206F9FF400B4417C2FE97B4C2FB248C41BA2BE741C7BBA7410EE590C10C628EC03CCDF54130F667C0B37292C200879EBE9076FE42F63507C35A92FF41C41F90C08899F2C2D818FD41FC464842B91470C29DDE1341999C02C25CF47B41833DF2C1586B6D402072DB42CCFA1642A4FA2142CA286642AC29C64228BC4D4002A8CB40CE44184224B51FC39CC016C182731D421A9BAE424F11DF41199624420BFD31427745E141F7496FC2FC058A42B62C9B426061FB420090873D94846D42EDC28E41DCE6174263BB3CC28C8CD44136C86F429A0ECE4234BB3EC20B1B6FC27C1BAE4256407542E8EA9A422926A7C2EC91534270CA7E42E4F82FC2E01299C159645C417BC803421EC99EC182A76DC162FD5C42D1162641138193C0A2CA47C16E9A04C3F9AA8C4050BD9C41E1DFCE42FD0FB5419023C9C2387206420F57274228CE8F41D45A86416B237642E9C25B41B285E842FCEC31C0BF993DC21B7133C23CA6F1425DE592C2E4F381C24F88A442200AED3F240D68C298691B40F6236CC09357C3C04AF0FAC1910379C276C3E74280976C3E9C1892C250027F42EA968B423CC157C0AB8F654138D9A0429EE9ABC12066BA4044866042747CEBC01064C3C0B0B346C2"> : tensor<2x6x6x3xf32>
    return %0 : tensor<2x6x6x3xf32>
  }
}

