// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xcomplex<f32>>, tensor<3x3x4x5xcomplex<f32>>)
    %1 = call @expected() : () -> tensor<2x3x6x6xcomplex<f32>>
    %2 = stablehlo.real %0#0 : (tensor<2x3x9x10xcomplex<f32>>) -> tensor<2x3x9x10xf32>
    %3 = stablehlo.imag %0#0 : (tensor<2x3x9x10xcomplex<f32>>) -> tensor<2x3x9x10xf32>
    %4 = stablehlo.real %0#1 : (tensor<3x3x4x5xcomplex<f32>>) -> tensor<3x3x4x5xf32>
    %5 = stablehlo.imag %0#1 : (tensor<3x3x4x5xcomplex<f32>>) -> tensor<3x3x4x5xf32>
    %6 = stablehlo.add %2, %3 : tensor<2x3x9x10xf32>
    %7 = stablehlo.convolution(%6, %4) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %8 = stablehlo.subtract %5, %4 : tensor<3x3x4x5xf32>
    %9 = stablehlo.convolution(%2, %8) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %10 = stablehlo.add %4, %5 : tensor<3x3x4x5xf32>
    %11 = stablehlo.convolution(%3, %10) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %12 = stablehlo.subtract %7, %11 : tensor<2x3x6x6xf32>
    %13 = stablehlo.add %7, %9 : tensor<2x3x6x6xf32>
    %14 = stablehlo.complex %12, %13 : tensor<2x3x6x6xcomplex<f32>>
    %15 = stablehlo.custom_call @check.eq(%14, %1) : (tensor<2x3x6x6xcomplex<f32>>, tensor<2x3x6x6xcomplex<f32>>) -> tensor<i1>
    return %15 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xcomplex<f32>>, tensor<3x3x4x5xcomplex<f32>>) {
    %0 = stablehlo.constant dense<"tensor<2x3x9x10xcomplex<f32>>
    %1 = stablehlo.constant dense<"0xB23D1BC04B451B3E5389143F474E903FD07EAFBF7081FF3DEA746C3FCC2EAF4069AE38C0B8AF593F9F6E21C0015510BFD5A434C0D24FC2BEBD3BDA3C4DF09E3FD89C1D40B5AA0FC062478FBF3FEF54C03A5783C018EB9E3FF45904BDAB240FC0D6A51240E50464C09B2BBABF943702C1690155BF69032F3F87A4734051B0BE401379EF406D1102C0FF25D93E7FD5DC4087DAF63FE3BBB6BE60AF4D408139FDBF96621A40E91276C047B073BF644C4540178946BF542C14402A0268C057D382C026EF35C0F8FA9140BD35E1403FE21CC084840A3EFE0B19C02AA2D63F88EEC63E34AD004186DE62BF11F371C08440C9BE6ECE3C400997713EF3E8A7BF56FE36BF071E7CC0C4DBC5BFE64EA04056EEB7BE9E791240CFE1D63F3361203F6A939BBC8A1695400246E43F314E9BC0CAF789BFFDD8473FECBBCF40AA15703F94ECFCBF79179C406586A340A19B3A401989B1BD9DAE36C0BF7C9B40EFC888C0582BE03E13F82A40CA4AA8C0FE03A840BDC115C04BCA9F3F18AE8C408CA886C07C3F273F320F80BF519730BF33A9FEBF2802253F036CDCBF0FED0BC07D94EC3F20618040B530ABBF743B51BDABE86DC0A328963F3B0538BCC4988040C14423C0B7D5DFBF1B31EF40E3037740DD6BE9BFB451EF3F94B386BFDFCF86406EB843C06E1500C0BEEB373F2DBF88C0555DB440A164B93FD1818ABB932796BFDA3FAFBFFFD43FBF403CBABFEEBB424062F581BFA6096C405F5446401AC03CBD5C47EE3F1B01DBBDFFC18140E63487BF29068BBFC3A73CC02EF16C3EA6CA853F5CB58540121DBF3FE77FBABEB72262C028093C400022AC40AEB8393EBE3C03C000D964C06B6E3ABF4572453F0B16C940FCCA47BEF2ADD7C0E67D50C0EC019CBE8A2FD83F6EB43A405CA64EC039A1CFBFE680DEBF7C5993BE0F3EA1BF3694833F094BAE3F5F8C15BFF23E24C0F3F23D3EC6D5FE3F31D82240BBA5133F89C3884046CFE0409D12A040585F46C05A649D406AA266C0B310BEBF5000D3C09765993EA6F34DC0C06CA0BF9F129F3EDE73A7BE5CC26240904A4C3F9414773F56292EBF6CFA5340157A1840167DBEBF2C92A7C04A345DC0AC979DC02EE410C0449351C0F8E53FC0095E87C0EEA039C042EAAFBFCDC04F40F16EB83F897F42C05A3B643F799A9FC09017F83EDD6C4AC0AD7667BF0F6E3240ED87F8BFC6971140260BAA3E51655A3F5E965440E6EDC73FF4247CBF0DE3C5C08F01F73F5D75CD3F0B744040DDB00C401317523FD3FC33C02E1EB8409ED77EBE00507E4041D87040DFD0813E6E6824C0188504401F909AC01A1ABEBFC73042BF78F79B404013FD3F87F582C0C0999A405AA64740905428407AF545BE50F005C1CA50ABBE719C34C01801A9BF2AE9C23F868858BEDDCCF23F0BD0FEC01DE5A63F0DC8AC40D83EB03F3C61BC3F85F366404A00A63E1BE093BFC166CF3F9516EA3E3DC38E4096D4DEBFDA6958402A951B405FB722BF9D60433F55CD064026FA8A3F68CBAEBFEBFA933F2BF8243DAC14C0BF10849EC037003840A93774BDF14069BFEA30D23FCDD303411BF435408696E940DA45AC3F42616E408E71F0BFAE60784030D78140DF3FBCBE4DF301407F3D523F3C4B4940B2AF5CBFF05A2AC09676A84071F215C0D67F743F793624C04A5A34C003E64CC0C14A943F941CC43ED4D7213FB01626BF6C4908408DD8F53E25508DBF320F2940AF24824099E478C0CD4ECFBF169B5140B4D6E3BE732299C076293840DC5197401A2F4CC0E11A9040E4CD11405477AB402889B7BE2C838540C366273FB98C8B4022337640347084405CD52BBFD08B5DC01943C3BF203159BEB170D2C03AA30BC007571FBF42FC17C0DB83F23FEFDE44BF2FBCB5C09FEB77BFE9B7973E72963440EC7686BF204F0E40AACAA0407F396CC05E6C1A3FD3BC49C0CAE503C0C4D071C07D59CBBFA2ECB9BF0CE694C0AC6724BFE47DA43FDE192AC063DC9C3F864BA93E7BCB493F0731BB3FEA92B3C038649B3DA28D01BEF76674BDD650C4BEC99B50C0"> : tensor<3x3x4x5xcomplex<f32>>
    return %0, %1 : tensor<2x3x9x10xcomplex<f32>>, tensor<3x3x4x5xcomplex<f32>>
  }
  func.func private @expected() -> tensor<2x3x6x6xcomplex<f32>> {
    %0 = stablehlo.constant dense<"0xADBB65C2C5D209C3049C81C25EB43AC2F43431C3F26DE34220283DC3B300B8424AD2CA41641C12C344340C42F58D2943A680F242261B9E42D01FD4C150FBC040902619C330DA7542EC89E8C2D8910CC2C067A14297961B439E4CDDC2AA47E4425C4494424EA08643804739C21421BB412025D841E0644B40BFF55DC22CE693416A9485C2A2FF7443CAD72143F0B7C7C2A3670D4295A50DC247B95C4250901041FCE90843005F8941C05ABD3F149AEFC20CA7374304A081C1A23E39426C081A42D8278A40C921EAC27615264301D0F6423C9682C23E8613C2E6AF6F42A8B17FC247D99AC24C5979C27AE863C3D85F97C10BC326C38922C4C29E1B914104C4B9C247D043C2B4A93341BCD6A9C1E72AE84250B405C3C88E1842B113B2C2F59717C3D0EA96C0802867412EE65643D3039B41D6E30F427525DAC2BCD87943E0AAB84050CC5BC18E262C43D0EC6F4220005CC32A440343A6F02DC3955E41432E0D4742A14505C35BE115C37400DF41B8052EC188EF80C0AF283AC22D2A2043A27116C33023BAC09C1985C227FD0F436C7DA941401716403027BAC2389B91C23283C4C28DB1B1C2C3B8EEC22C9714C21A07B84223E15542D0B990C2C8C28641404ED942E0E43BC252936342832FB8C2728E4E4254DC58C2B074B8C28895CCC156661F43A093EFC0C82749C176909BC21563B4C2C04B6EC24F9A61C2985D90C1E7488842E80BF5C2F4C93E43DE1BD1C23454D8C110CC74C15EE150C24DC3F542D090A0C25EBB5E433EC0CFC1892D1F41D630BBC2009D94C1E7F873C2015E77C25D1170423935EEC296C808C290DDB4C0F4FC5043D1D00AC355109FC25F067EC380E31A41EBDEEF42609998C240011AC1CC4F4D43C32BA7C2DA88744297370AC396089842642F04C34934F542FA670AC3686C58C288FD65C2C25D2343102D57C23CE05B43A618FEC172D8884280CB0EC166AF5343E29AE9C219231643B6FB814241EBB1C2AB54F5C24F138F420CC613C3106A17C18CC433C22E54F042301ACD408DA9A842FCA7D9C1CCBD3F42DC4A5A42E3F8CDC2F2A6D2C2C02BB1C0C037CC3F5CFDB54154B73942716AF342041603C3718E18431C193FC3EAA5A242FC28764156D9F2C2165E7243CFED2B429776D54285FA2C43C07FDD428E078EC2DB0ECFC26C02C0C14A6BD4C2C66730C2BD703AC398B92BC1108DD9C27C8938421DA99BC200F4A14004D34C42208336C1FC817F42ABC985421ECDB3C20F7E8243DE53DD42FCD38FC337EDC0C209F8B742E81B1DC3B0944CC2762DF2421726FA422112D842D5AAFE42EA993AC222C2A0424856B342EC0F79C32CFCBAC264E3EC41A2D01DC21235BA42A40E364250D02EC1514BB2C2A11DE64234702443F977E5427E61EBC2A22C174216C9FDC231FB8AC284C987C22F20E14220CC21C1E29FA6C1F8400A414614984278C3D84145968142C29E3242D05015C1DEB83EC2046898C2BA2760C3A8BD28C201B572C2CA155EC273B891C2B051C7420476414378C5D341CB0B0C43D254E4C2FF7EC64265CABC42576F244323C2A5C2AAA2CCC27E5A2943BE54FC41A0B7D2C2987F4B43407AB341608E0CC05335AE423A89CF414E9B8AC387410B439D1BDDC237F52E4397A51AC26D129FC21295ADC1C05D57402A74834288E0C8C1A82D66415FB08342A480B3C1018B07C244441BC2123EC141100924C3FD630B43EC92B7C11E954AC34D6B9D422ED6364350449CC12F191E437A508842D45D28C3F01625C124E13FC3BCD630424267C2427CDE44C3A600CAC2C8B9254380B4E2404259E1C28094CC42CFA583C2EC3DFDC2286CB74194BEDA4243761243A09B3243D3F22B43E9330C43707D9D3FE623F4420E7A9BC21CA68C42223155C3F71EF0C28C2E6DC289356CC2140CFA41FB8E0CC3109B8D41EC7D9841E4B52A42461826C360CD3DC0C46BF0C13411EAC152A209429AA91BC2DA2B76C2E748A9C2283345C1046EF941C8741EC3508A2140500495C18E6D6542571CB642368B6742F90BB9C2439A2E43C58A0FC331D922C3DCEFC141D00180C1120DE641FA44B6C2A0A18A425DD2A642B6A980C3F2EBBBC23AC700C32745124330802D4216CF3443685DFCC169ED28431C43244240341543C625F04277FC59C2DFEDFBC24E1DEAC21E0DED42F91560C284308942D28190C256C62FC3A49C2243384090C1C6CFD542481BC8C2157F5742AE7D6BC2CF386CC280F1CC3F304799C1C97CA2C29C5311C3AB00D8C2EBA3824257B098C2EC4932C287E016C324038742AF3E16424DE583424BEDA04116FA2542C49F50C203064643F8E3C142F2F91542F81644C27EFB4B438F2D1643C853AE41804A52BFC0417641BDAF0FC372AB5F42F023A942C8DB3B42D47DA0C168015FC1C5E820C2734DCBC2DDBDEE42D46ECFC18B06AF426E1B80C25C148C411CBF8441"> : tensor<2x3x6x6xcomplex<f32>>
    return %0 : tensor<2x3x6x6xcomplex<f32>>
  }
}

