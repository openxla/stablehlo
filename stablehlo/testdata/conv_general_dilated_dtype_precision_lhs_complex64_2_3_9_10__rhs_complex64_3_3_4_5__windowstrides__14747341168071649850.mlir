// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xcomplex<f32>>, tensor<3x3x4x5xcomplex<f32>>)
    %1 = call @expected() : () -> tensor<2x3x6x6xcomplex<f32>>
    %2 = stablehlo.real %0#0 : (tensor<2x3x9x10xcomplex<f32>>) -> tensor<2x3x9x10xf32>
    %3 = stablehlo.imag %0#0 : (tensor<2x3x9x10xcomplex<f32>>) -> tensor<2x3x9x10xf32>
    %4 = stablehlo.real %0#1 : (tensor<3x3x4x5xcomplex<f32>>) -> tensor<3x3x4x5xf32>
    %5 = stablehlo.imag %0#1 : (tensor<3x3x4x5xcomplex<f32>>) -> tensor<3x3x4x5xf32>
    %6 = stablehlo.add %2, %3 : tensor<2x3x9x10xf32>
    %7 = stablehlo.convolution(%6, %4) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %8 = stablehlo.subtract %5, %4 : tensor<3x3x4x5xf32>
    %9 = stablehlo.convolution(%2, %8) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %10 = stablehlo.add %4, %5 : tensor<3x3x4x5xf32>
    %11 = stablehlo.convolution(%3, %10) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %12 = stablehlo.subtract %7, %11 : tensor<2x3x6x6xf32>
    %13 = stablehlo.add %7, %9 : tensor<2x3x6x6xf32>
    %14 = stablehlo.complex %12, %13 : tensor<2x3x6x6xcomplex<f32>>
    %15 = stablehlo.custom_call @check.eq(%14, %1) : (tensor<2x3x6x6xcomplex<f32>>, tensor<2x3x6x6xcomplex<f32>>) -> tensor<i1>
    return %15 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xcomplex<f32>>, tensor<3x3x4x5xcomplex<f32>>) {
    %0 = stablehlo.constant dense<"tensor<2x3x9x10xcomplex<f32>>
    %1 = stablehlo.constant dense<"0xCC33B7BF24BB6740D400E1404915AC3FE8DC9B401C6C18C0011717C082E19140C2B5BCBF69174F40FAE78BBF1B259240DD09D7BD580B67C0B186B2C09C76DEBF07E92B40BFB7B83F265E053FD532D6BEEA93473F02A57EC0DD63864054689FBFC631AB3EC5EAB03E07FCF2BF7009B13E32F8963F09AE4740573DA640C3263CC07E9E74C0FCAD0FC0059B89BFA643E0BF162D063F0B3C96C0AD74B7BF9FED1E40C4FE48C06B088DC028929140283C95404A9EE8BFD53600C0BEF971BEE0FD454049576D40623609C0B38915C032C513C0FFD70D3FA5A2C43FE946A33FF853ADC0EABE4AC04D9E29C0B3288AC0C69BC6BF3C568EC0C442C9408A92A03FBC22F13FD8925D40870129C016A2A13F2BC81AC0422859BEA83683BFA8260F3FED0F3DBF392CB240D03A854017B7233FDBA872C06AFF9F3FE76CCB3FAD3781405C8FCD3FE5AE0B40A97CB7BEF25E66C02E4E8CBF4FF58FC0769062C029D139BF578C48C062B8ECC06FF1BFBF6479E7BD2D52D0406165EDBF0DB8564007713CBFFC06CCBF009159400F9C98BEF694104028864BC03E9164BDFAF9CEBF51050F3F5F7224BF7B3841C0B16886402AD4524049DBB9C09E1936BE7BE966403D2BD03F80752340C1AAE83EFADC773E9A15503FEAA99BBCD4B6E2C0EE136140C90266C027111840FC43A1C06322953F37AC803F1AB9EB3F84E45F400BE88940115914C12379984011FAE9BF9CD841BF8EB85640EA082D40120E3FC0A91FE93F671CA0C0D2B15740F129E2BE745A9DBF0E21D2BF0C6CD340C17B1D3F9F4C074008D430C0755ECC3D22BB4ABFE5604ABFBB0562BF47B269C0619E844016B02BC0BAAF84C0BEB2B33FE3E859401BB9FFBC6570DDBE872330400F82ABC0502DA7C0A1FD11C08892154066EA9140CCBB24C0BEA29D3D6E204D3F891D7FBF99B14540650E8AC0B3E1234005691740D773C63F90579F3F07DD12C0BF04EABDB87CA2C0F883DCBFDA40DA3EC4BB25BF10B4673FB6AA593F198D19C026D96A406A75F33FA8223CC03ADE2140FC8A4AC09E2737C09A239EBF13D3054002150840A5060C40FC3BE73FD0A8E93F87AB19C00A8384C006CD8AC0FF7E87BFBFD606C09E5A04BE07B64640DA9458C0758AA9BFE27020C0FADBF2BEEADD0ABF169790BFAA6E234014273C3FB55287BF7FF7DE3FF540E3BFB81BD8BFF2C8F54024E97CC0565837C0931AE6BF27940840D71527C04D3E7E3F75B078BEAA1070C0447B683E3D4502BEEBF322C064B0433F0CB79AC0186AD7C0DAC235405EE7AFBF8E33DABF01D4C13FD169223F0C495B4049ABB6BED3B649C0B93F8B3FB08FEFBF8BCFC9BFF8D94140E80B89BFB8F706C1990518C0712FF2405B49C7BF9F7618C08D3F3040EC4283C0F63583BF05BF8F40B1FA75404C110EBF275F993F14C683BFAD1A2EC05C7BB8BE9D97E6C005BB82C070BEC2BF6F51E34083DC37C07E8CFA3FCF5FDEC0A3AA7C3E7954693F9138BF3FD2A129C065D42C404CAA40408C4563C0BAD7B5C08D00DD3F7007623F74FCE23F16B9E1BFBA75F83F65BF013F8D4AE83F374BD2BE4AA045BF695AB4BF7CE76ABF78BBA0BFC06CB43FCD70C93F7432873FDF0B2240E3E199C0FA5D50C082AD55C021651E40E6063A40B20AB13FEBE8B74087AF40C0408527C0ED14F9BF34C79F3FCC110540E3431C40DA2D7840BF2C3CC0B388323D5F8D19C0115FD73F3320D6BE3F8E95400E1116407CB88D400449993FBC2ADC3E97A18BC097CF81BFCE6C82BFC32649C09CD31E40BDD630BF3FB9184091571A3E0F10ACC010059DC087F280BFD9269D3FB9AD98407ED2EB3E65CBF7BE0D5B9C3F56F41A3F676684BF67C116405E4EA8403D4E91C09D6F054053F62DBF9C6A974072247BBFD328A3BF4995B93F6E7439C0A24A51C00FD8B7400E9224BF5238573E9204F6BFF2F022BF9108A63F61508F3F3F7158C0DAEB99BF19DA2E40613BBC4056A437C0AA9D80BE6D3B6CC0CC6477C0C97D68C02BDFFEBEB238D2C0BDECEA3EDD722FC09069BAC0C95F28C0"> : tensor<3x3x4x5xcomplex<f32>>
    return %0, %1 : tensor<2x3x9x10xcomplex<f32>>, tensor<3x3x4x5xcomplex<f32>>
  }
  func.func private @expected() -> tensor<2x3x6x6xcomplex<f32>> {
    %0 = stablehlo.constant dense<"0x5ADBB7C2F84E82412A9B1EC300445AC1BC827BC1472108429CDD1C425CBDDC41A63FF0C211BA1FC320D293412F7CDAC2D0B83D41082C204128FE93419A64614312026B426EB3B8C238800E42FA5D8542995256C2D2B78EC21940A142A3DC9CC18E085942935BE342FE62E842E616BBC2A3AF1D4324CF82429C4687C30CF21642C5BF59C27C1191C1BC266FC3E4E37E42783F1CC27CE7064340710F40381E50C2000BCD40308B3742E6629DC2587CB6C2FED87D4298FDE640564E07433B63E142D0A720C2E014F4405A9553C2801A93C2D00E6A40C76A1442202D4341982139C39A7AC54204FF66C162818942DD51ADC2B345ACC27416D94277493EC22850E642C0C3F9C2C7AD8442928E9BC2260762C2A2B38F42F874F9C276AAD8C26CE62DC3104738C26A254CC263484DC2CC198CC2E42CB442627B8842EFFD9D429B2C70C260ADAAC27F7AD4C26050714128A06440A8EAB3412F5A7DC28C160FC2801FEB4284F33242176C0FC23A48AA4225D41FC388D64A42192D9EC2E4F5CBC2DC6EE34100D23A40C3F29342D553D5C2E7593CC30B193B41E75E4043844D1C43E45F11C200FACC3EB2721FC22801AFC03AFFDF4204FC8EC1DEB5C7C250E0444100BC33C0223458C1A89EDEC2F39F8FC3AC336DC17A13DC42DEAEA8C2C2BAB942A8BFC141F4D1A2412C22FA4239481BC3BCFC02C15D1960422824D842F423D342F04FB742162ED241CC03F142DE10EFC19B7A2BC2FC140DC28A22BCC2C87549C3885C1E4143E0DC4221C14B42BC2381C2801578BE69F39441D00E853F623C8EC100EDE941FB2587C2D0A3AAC2538A2AC29A2A88C14AC4D442282831C3425D314360638842725E57C2509017C217B08942FD009CC251E14D43C883D142B33B88C2600B23C3C4CC88C1384FFB41203603437CEEBB42C2AEFEC17601FE41D979E142CBDAE1C1B20AB44209F9B642A68B3D42912DB2C298F73942A42FECC116328A42944805436A990FC2AA5F9DC268EA45C1D45374C220098A41A6800343322C99C1D06938C3AAACE4C2F44F0042F8FB42C394F2DBC114647D4254E51343B68522C3BCB99141673792C2F0D218BF3CBFBE427D909BC2BE6B8BC2B914CB42D6C068427DB90AC336C12A427B179942F4239342A04CD5C13F002CC3F048ABC24D6BE242DE0AEB42920F5FC2B517D342D05795C278F10EC15EDB4B43CDDF61C2484D2D43686343418ABFEDC26009A8C02005C6C1AAE983422C2618C2B44CCBC256150443204D22439A0A294344F937C218220743CA273C43E080E840AD1A6CC262C17CC376875FC23E93FCC2AEFA82C285B29EC2689400C180635BC120C128422C311E41484B6FC275D27342549478C1C39AF4C290590DC0693522433A7CBAC1E62221C18443CE4200B69EBE587E69C1AA539FC134103F4203A74042C702F842D047BD41C038E342BFDFE1C2BCEABF40C41F37C240984642EA7048C1E40C1F424307B34298555C42C390CF42E8F6CAC062F58FC2CE1DE8C218448542C36D2BC296EB0B43A01114437865C0C1907A54C1A08B0F42C999FC4223E650C3FD15D0C292D3A3C26076B4C020DDE83F6AE8D5412D8E6CC26486A1C247CF28C29B7709C3ECB64141E145154374F3ADC2DCAA23C2784C8BC238ECF540B256EAC18B13414218159942D257AE4128D4F942782995C20C4D63427EB06C42161BDF425656C3C2F80B65417C978841F67CFCC220B8A0C2D06818C298AA5FC2B8DA3D41A0EA5241902E8DC2083D05C357683F42C058AB40230F06424841F6C190F328C19AD5B241789C3E4198A84C410A41AF42C0F6BDC24C9E0FC348B5184254CD44C24007274212231D438836A941108F97C1C5BD10C346B84DC360D7EEC220E82342568F0943580F2EC2AABD4DC298B2ACC1E81E40414CD0C4C1607E72C2407F14425DE6E642A3BEFCC2F191EF42DF5AA6C2F05F6F4108A5D14296524D4234EC2D41CEF3B4C21F6106C25A7FCCC102213743BAC7204250AA9EC1B06AA6C2541C00436EA1EBC2E909E6C2C7F8B5C1D0910EC1F481C8C2060845C2EA3772C2409EC54056D6FEC2848B2FC24A8E5EC36CA00D4324E519C2136143C2F0614F428073AEBFE32B49426769624310E83241A02B5D42537D0B432ADB0343A1C71DC2CEB5A442ED475343C236A0C25C0A0DC20A1B41C3F045144288FCF0C2DBAF19C295A3F1C2058C3242C02DD341B026FC41A25927C368DEA7C1648CE3C2B2C45A4108D7AC41C0A87440B0C0B1C0381119439833D6C224DF11C3D0795DC11E8D16426D7286C10DE81543979ACDC22368E6C24CA2A342C603B0C2D2B5C9C1E89F36C2C0A14641264914432ADCAD41691B2242001BAF3E4065CEBFC4CD1D42270113C272952943C017C44112A960C1CAFCDFC2D4F93A42DE0517433CA29CC2E20621C339611043A3ED15C3B9DCC1426D9CE942"> : tensor<2x3x6x6xcomplex<f32>>
    return %0 : tensor<2x3x6x6xcomplex<f32>>
  }
}

