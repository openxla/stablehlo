// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x6x6xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x3x6x6xf32>, tensor<2x3x6x6xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0x955C0FC0510EDABF3C6FE33F8B715840AD9EB5C03A0FD63FA6AF604051131FC01E9CA940FBEA72C0256C0FC0A614C2402ACA76BE386EE33F6B9B5DC08A7D1BC0377C833F910BE2C0A8658540899E693F03B9973FFB5B86BFDFB778C082207940A7B29CBEFD2CA4BFDA4945BF58D232BF03A83F3FD8524C3F0E20A83F81F501C0D9808AC0CC6FC4BFCC7C38C09940F33F2E44953FD56AFD3F07E91140B41ABBC06548D63F41ED9EBF62BE0BC09FA1AC3FEE60F13F5D4CA93F9212E13FB6ED07C0B568083F60342AC058D10C40667392C0A8F2C3BFDFD0DFBFB2AB5F3F61EC14BF5F4C1340BB0883402A6995BF1AE1CA3FFFA069C075556FC0B8769940E55399C08B638DC0F57A4740C059614035DDA8409A32ACBF6EC1FE3F83B70A40E6103EC031328B3FC64ECA3FAEFF7D401164E7BF3EE47E3F0DC15DC0C48D05C04970953D659983C00C83C83FFD8EB4404CA2CDBFE30D6D3FAF1B54BE9B4118400B42B04046F180BF108FC3C0EEBE363FFD12B74022DADC3B316283C090564840221E1C407533763EE08C08C0246A753F062B12C0DA69423FC2828B40540DB1BF1A370141D296A3C0E2F210C06094ED3E92BC8BBF09DF13C0C6A8D1BDF0E08240E47A78400B44D8BE6C092440572D8ABFA7EDA8409DE6AFBFE30B00C0B174D7BFE480E73F2E7205C0FFBB8140FB46F03FC5B652C0F5EF30C0F8C8CAC0049E9DBFA80931C0B84766402BA0B83EFCF68640513A71407F9587C0B45F0A40472F62C00B104DC0CA67DEBEEB4FA4BEF44312C0A55494C0A8BDEABF837D3C40A64C68BF553EF9BF528087C041A3703FCB031A40B9BA573E03BEADBFF8EC8440A3A043BFA559E9BFD18457C079C1BA4055F80BBF1879953E496B0FC06619034056208D40DAD443C01C517D40AA607EC0E950F73F7503C3C00CB259BF32EEF63CE3D42B4097BC74BF576534BFF91B4A3F05D46CC08D3E17400AEBB3409A41673D750762BF784B9B401949EBBFB12E5AC00F4412C0B67E53C0"> : tensor<3x3x4x5xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>
  }
  func.func private @expected() -> tensor<2x3x6x6xf32> {
    %0 = stablehlo.constant dense<"0x0000603FE02C684012E9E6C174378D425013894209F15C4260CA53C0A83FB840D13230C2F62346C2FEBDE6C136169DC25E02C542B7468642303E40C2C9BE81C2D1B18F4279EAD54074ED1242D466A0C163E592422307EBC29BDC834258C828C1FEE980421B7B1DC1BA6FCE429DA842C2D687D6416D9AABC2C1CD94425DB3CEC230D954C14A642FC256F314C250345DC2974E38C24616D841529F57C0EF1F2BC12053B7428C7C9CC2EB25D4C2784410C1D8FE20C2E41FD9C28C4B26C37005A3BFBEA479C105CDEA422564F641C057EE4100DFE23E75D6AFC2D6296F422A8C0142AB754343909195BFD07F21408B7406C2E8791543042838C2EE9957C2F0006542082CAAC27A1F4AC1DB3AC241307310C2F4F3C541B01494402EBF50C3BC7B51C28AE8D23FA5EC844282273AC1BB6AC5C2DC420AC362671D43C4F1B24117CC764228C483C0F2B32B41C29498C2B429C1C2E86194426AD90CC242A6094302C5C6C24E538C42B82B3042808D69BF2FD6AEC13A8E794270301F42843755410026E8C09B649C4218735DC2DA020EC2AE6599C29350714240055DC1BB61104307FE97427C9AE4C2FA31ECC0F6456642B99290C221BC7B41FA102A42818173C2A79FCDC00F88DD422C6DE1C143203A42B89C2941E1A39C42C21022428868DB4291EDF4411050894082C443C250068EC1DC5B85C218CBDF42B67AA4C15D2E01C22B2CA0C12CA01CC20361AFC1EC8001C3ACB2E3C018C4B6C1CF7AFE42951910428052D940568B04C377E2B842143534C208973E414C167AC17FC90A42BA1A80C2D8D0B3C2B10F7D42059AF8C22CA81FC341FAF7C15A72F4C27A788141361CC242D3099641905D34C1463C50C23A5FA94230B02F4222B09042E07A853FFC9E40C262903D42F38B89425EE3E742DE68A4C2A45810C37CB14841FA82DAC1A205D1C261BA6342E8EE79C2729E1742D545B54277259CC28E1C90C1B03298424C394D414EF11AC298616442680199C21C607941203F1BC21E429CC258696EC2C21A9441E0322AC058286EC1944452C2AEC39241CAE9C941804D8E4173ED08C364486FC2F5A12542C295AD41E4FA93428857B2429F21FDC206A9D5C07E1D05C1B00D9D41597C5EC2EDE371C2B432B0422F179AC2E0D205C2EA44C041DE3DD5C1203351C0A1C88741846C85C2C003C14200ECDEC0A6B0C741AA9DD0C22C2A444121DDB1C27D719F42"> : tensor<2x3x6x6xf32>
    return %0 : tensor<2x3x6x6xf32>
  }
}

