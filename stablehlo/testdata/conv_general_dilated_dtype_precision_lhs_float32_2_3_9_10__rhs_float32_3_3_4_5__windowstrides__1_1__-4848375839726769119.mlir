// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x6x6xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x3x6x6xf32>, tensor<2x3x6x6xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0xF2C811C0ADBBB6BF67BB6F3D4B7D65C03509F53F9EA62A407C5B6540955D26C02AF546BFF64180BF6188B1C04D623CBF4A83A23F880AE63FBB7301C07C9B61403B5AD9BE142D1EC022961F40A7D746C0DC7A3E40C037AFBEF0549DC0CB9884BED539B7BF98D200C069F5694070AF494095C7343F2FA66540D3E8A9BE4524A9C0804D983FB8E64F3E17FE87C0D38720C020509740C54C0F4084092C400B56FD3F088B56BF92D169C06E5A9340F2F9983DE2FF7DC0C37BEBBEBDB39540A0059240F7AC063F8DA86EBF1F8093BFB4CEF83E169FBDBFD21437C0BE28D93FA635F7BFE1A8F7BF574AA53EA62F3C40308276BFCFC0273F0908BF3EC55906400B1967BF368DF4BFF0C02440AB133240AD5AEF40BF1CA9BF854AFDBFAAAC11404461AC3FEE4E38C09045893F13E3AE40C149EE3F9B8FB53E7EC8A240C8FE7DBEC1A7D8BD4E3436C03C701740F993B7BEA60768C0F30637C0CC8E973F2B0313BECEDAA33F9F7FAB3F411E9F3F61BD6B40C1461640262BC2BF3699323F6BD344C0827135BE1617AEBF215FB83FA3EB8CC017FD83C09A12A2C014C604408801F43EBC0B00C00F5BB5BE831C94BF0B1871C0ACA10FBFCD1C443F983BB7C07DA82BC0AF4A78BFCED97BC0C4A7CBBFCC3B99C05AA07E40097BA0BE28D80940A98C95BF71A4D63FF7171DC0D287C43E4D49A7BFD5934D40A0D0053F8608B3BFCBC55DBFF05785BF533E97BF708C2F4082E3543D754707402E5205BF219619C036C501BF1D08BC3FA3569440FBF0E5BFA6960440F3544D3F4E13C13FCA38EA3F91C54140F79BD4C073601CC07BB85B4014E944C02F6C9D4027E70CC0B60A2FC0091B81BFEF2F4A3ED1A61340CB0A37C0B5B9E3C0F432C1BFFC8AAE3EF669834084FE40C0606F953FC1191BC08881EB3F63E0DEC036A35FC0431A6F40251F1540072E02C01079C5405357183FF3AF073FBD551240C148A9BF36F04DBFC62F273F8C3E523F8EAC24401AC1E9C0EFE1B13F65B931C0BC2A94C0"> : tensor<3x3x4x5xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>
  }
  func.func private @expected() -> tensor<2x3x6x6xf32> {
    %0 = stablehlo.constant dense<"0x34365541141C864275438DC18AB8E54214FB3942424FCEC2BA731CC1E4946EC26C98F44277E7A8413A68A3C0A6877FC2386456C148E699416893D5418A404FC27CD41BC3E49C7E42D04A5AC27C27104242B994424A9AAC42101F6E427091C0C1BA27E741E46E474298FC8141285348C2CC0624422B2055411C1FA142019DAFC2C48CDCC2CB03D64185D1AEC27536A4C2F10509C2F64309C23C9FE241369451C1686A8A407804FBC1E1BFD040CE978CC1B41FBA4141413EC2EE0C5942B62646429B490B42E819FCC2686B30C36E85844237A3D741CE310CC2107C4942F89805C1406B064187AAACC153D3484284713B412A82B142800C6E400EF6D241F57D8B42B0DBCD42591406C285D8BAC2F08C86C102FDBC426127BAC1E02FA1C20ADB0B42904AF84183BD0B42708BCB40D5B1C5C16869F541D78769429CF899415B809FC152B46CC246889341627CBFC20EBC4B40437328C162473D42A8CE0CC32CF80A430C117242418C86C290772E426958AFC19695E241A6DEA6420F667A42DD498642C8CCD2C27CB82BC255A436C230662BC0745367406EB12CC19B92B0C111A79EC2F38027C22A7CFC4178588C42EEC56A42971A3D41FB923D423E8150416C3D314265736A41CE3208C2B2E81B42609B38C1402AE03EB03339424BB74E415CDF31C11AA3E241ED088DC100A184425CFC38C2FA9F8BC149C7BE41A0E70140006AF6416F368C40DE64AE40603950C222A4A8C0527F60C18800E64018828DC2F01E1DC07C86B8426836DC41642CDB4080DE01C3CDDD05C2B637C2413714C9C1FBBE39C2E1809CC2555A104282599DC1E5F23EC23C0216C27FC3C2C1F0C90CC2EB50E9C1594E83422B1CBEC1A063FF3FBA7AA24148C529C1455057C111D0A342CEAE1E427AE171C2DD827FC2F94A354375934B42B2A59DC24470A8C1E095304054DA554212815342A28C9D426EDA98422656D1427E397A4262C3C0C2AAC05BC2F46D47C1451A83420C385041531821401A60EBC150A1D94202C07541BE2BA941044F8F422ADA80C21CB5A8C287801242E5A4FDC1D0CB2DC1BC143CC205818DC192CE54C2FDCBA641347D804190E4B5C27B761E43CE8BF3C1EFFFCAC2091B934170C682C2AD18B3C1902DC140A2949B42A359F2C1136F55C29C325442499298C0E0C77CC18020903FDAC4AA423B9028C39E8B30438D5CDFC1A641344220152E41F3A2D5C1"> : tensor<2x3x6x6xf32>
    return %0 : tensor<2x3x6x6xf32>
  }
}

