// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x6x6xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64, precision_config = [#stablehlo<precision HIGH>, #stablehlo<precision HIGH>]} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x3x6x6xf32>, tensor<2x3x6x6xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0xtensor<3x3x4x5xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>
  }
  func.func private @expected() -> tensor<2x3x6x6xf32> {
    %0 = stablehlo.constant dense<"0x959229423BC61E4206DB73C26A589642D4EE31C2A113A9C26D70A5C2C04E08C28A7D56C2CCECE741C7408A42528D7742BBF19A414D9C04C17EE06B42CEDD21C2CCD11D415C37E1412ACB8EC2BC32B2C0B49FB6C0DE97EEC1EE7483C192A8384228849EC0BC3D8441A3291543286B9B42AE8DC4C2B44445C188361743590A51C21B4997C100D501C3AC2CF74219DD884260CA3F426C810FC2625F43C2FCC0AA40BCAC1A43A0D6C2BF13B5B2C2D7CD0342077C6A424A4CB0C254CF21C21701D5421C9B8042F237DFC11C7C82C2CAAF01C286A46CC2E4819C429CD080418A1564C11A84E341CEED1543C8E0EE40A89BA7C2D9310EC32C91BC40F8062BC130E258C22B820643057D0741643ABA4205ECF1411C2BDF421D979FC244B14AC25615A0C27A2682C09D0C2D42FDA769C21A41D641512ECEC0CA931EC2FA8042C254ED19C2CCAE7442B7860242F58A83C1F0F633C0011B0C43645614C226FB5D427041134295887742A3DCBB411000B642E23C6AC1464205C3E5E542C2F2660CC14CEB7A4036614442AC1117C1FE8DC0C2C39355C1160406414AD2BFC226A3214256EBB441228498422E1C63C15C096342F4995EC294EB2D42291782C2380E13C1CA5683C197BF9EC2B7025B42009E83C1C084D0424828E041083BA740EEB72443363897422EE83242806455C3C3844A42007391BF00D08D42DBE8CC41AA9A17436083E741EC2A8B420EB135C24BEFC2C246204AC2968B5AC255E031C21D7B0A42E84EB2C29033AB4226169A4154FFEE42A4AD63C276CE004254887D4225AC80C209F6054118088E4270D9EF427410284255E0FF41929301437DBEFD41ECCB8942C0C689C1FEF0CAC230B1D9C2ABE2A6C2DF860E42F9EBDB42B330D0428C2C2042EA707742023473C20EF659C1AE29BA421055B4422680F5C13D2386428A0919423C5A8E416CA258C190B1B2C0B92AC4C080B9254011DEB441CC275FC1AEC61E43000DAFC1552C75C20CB93B4213F459429FD8C141DE15EA4145AA6442087F64C294B662C29C4927C23114F7C10AFDE7C1E03C43413EB1DEC2F8E0EC419CD53142647D6BC263B51142EC079BC14D4282C2A86FBBC2820AAC40A8E1ACC00E6FFD405898BA42F4D250C2CC3284C23356254209971D40D1D207C2DE45BA428C4D2DC1443DF7C260237142B030DCC2CAC44FC25ABA3D4240C754C04C47FFC2B0142941EFC58841"> : tensor<2x3x6x6xf32>
    return %0 : tensor<2x3x6x6xf32>
  }
}

