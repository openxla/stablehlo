// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x9x6xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {pad = [[1, 2], [0, 0]]} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x9x6xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x3x9x6xf32>, tensor<2x3x9x6xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0xtensor<3x3x4x5xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>
  }
  func.func private @expected() -> tensor<2x3x9x6xf32> {
    %0 = stablehlo.constant dense<"0x1F6DEF410F2639419C1ED441BE72FB411FC89C42267256C20964D5423682A742E9F319C1A517B142AD838842708248403E95BD3F2E5BC041DEB79C42E4603C427545D3C0D0817B3FAA17C042EBDBFCC27AD6A4C1637FB742F32A6641D13BCA4221CF20C14486ED413C402CC1442C4CC2F45B95C2C6AD99C2652F13C2D41C2442426FA542354E95418057023FE42FB942EC9E1AC22C6A85C06C0ABFC08C98AAC19A385FC2BA880EC2DF8553C2CAE59241E28321C2F3AE2842F120324260310F42383AE6C16EC910C2513D20C2CFC9BE4155B8BEC1D811C8C012AC20C1F67868C25E1082429C854BC200E19EC0B481DA4238043A43936CAB4158664E425E076CC2D06997415CDFD74263180742193D7F425A75CE422BF0C742A4324942D08892427C5B1542822957C1D1E8D541015EFC415FDDE541E0366C41699CF2C1F0202C41E0A13DC15835AEC0EA6499C2C8750BC29065BDC20DAE3A42D095FCC120085240C5AD52C2E28E16434E79AE42FA2581C1F6EB9FC260DE08425B3C59C2720851C2E3A629C2E3C3954166B1C2C163B530C298ADDDC18934B1C0FC1B30C2C83E0A41F06BA4C16A8AA2C1608225C2DC81A141550FA5C2B69D554142A32142607528C231EDD2C2FF790AC181FE1943460870C2C6706AC15438D0C093EEAE4268C1A942BD318BC22AD655C2742F414228EB3B4298F30F41A4B187C18345EF4140B451C16C231DC1754015C2A43B4542233A0F438FDE95C1404DBDC25E9974C20254E741273DA741C4C56C423B03BFC28D7656423FA632C2706C9DBF8EBC434207A09FC24ED52B4280D3BE3FFEA3F0C036208842E8F50AC10920C9C1239E0042500E8B3F72ED1D41FB106640470C6AC1AC2A64C1BFD0BEC164D985C2495C96C20B50734227A583C141358FC17A866CC2A601D6C2B9705541A2DC0DC20CB393C2E293B2423949DEC2042B0E42827436C2140354C28D457D42129777C1C3DD1EC28D23C3429254B8422F9B0FC39CF2BA42082B94C14169CDC22D71AE42CA2722C23896D1C004FF5842301B1842604A35416AA139C2109DD3C2492318C251B20843B28917C18D1A6F426CEC9642887CA1C2A5C5B5426ECA2A42201DC2C2C6BA9542606E7B41633899C231FD15C1D25F80C26A4B87C2FF9359426F430EC1736C19C2DA67FCC1884DBB4038AA36C2F3AA5C4296ABCBC1BA945841E46B44418B93D8C1D8296742641A96C1E85314C279D79EC25F3624C2760F364108D55442CB3805C2CA879BC2FA7527C3A8DF9CC2CAF30D4147664CC26BF78A41D5FD0042F600D9C1E7FF11C3F6F55A426AA5ABC1E803B841DC5123C2423FB8C2B1B16BC2E38CBE419A8EE64128E904C2853B1743000DBA409B3D95C181428342E6C892C1DC4DA14119C11542B6B53742E8B56DC1EF320AC229F1C7C2201936C069FA3642402740C01844284140B8DDC13F77BF414C8595426BA650C201798DC20FD533C27C8C8541A8B088427C522641D35B70C240AD66C272065E42BD552141A1276742645852C3BE68B9C120D6C542A9E40A424842BC4040EBC742958137421CF2ABC19F4B154244789642C467684283A78BC2AFBD0CC28D4E5E42B4842A41CEB864C24C3A5E41BA8BAF4290314743A6E296C1A0DFD6C218E45A41F07444C27440F041CE13FEC265AB0E42696E86C2A014E0429C221243AF89ACC269D82D425A8E23C38C5E874254E709C1363470C29023C9413DB720C21FCED142681A6D41D42F51419A0203C2E80571C2CE05604270022E410C2A254160512BC3CAFDBB4247539D429C7286C1F8CA05C15945D0C0BF0F4AC221549542DD801842"> : tensor<2x3x9x6xf32>
    return %0 : tensor<2x3x9x6xf32>
  }
}

