// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x9x9xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {pad = [[1, 2], [2, 1]]} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x9x9xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x3x9x9xf32>, tensor<2x3x9x9xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0xtensor<3x3x4x5xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>
  }
  func.func private @expected() -> tensor<2x3x9x9xf32> {
    %0 = stablehlo.constant dense<"0x5D9DC5C1C0B38DBEAFE4B9C2707864C2776576419E330EC2FAB8D6C11624284223149C428A42BEC152438441930337C2EA7F82C20CB43C412394B24130476C41F0C36842A7F813C2610306428FBAE2C1E202DBC1A03D3342887C8642F15FC84121F00EC3A06E1141A2019A42B3E80EC33E0D4B428390AB42BA17EB41CD540A418BC7A4C286524942D226F2C242E328413CB10042805657C194FCE5427C070041804502BF04B7AD4182C0C3C2104236422C3352C27B650C424C21F5400887A8C1C073FDC0224905C25A17B6C2E76E2642060BA8C2045C544205006CC2A07885BF8E919241488EC64108137642538A67C280F21E3F54B51243123591C2E9648C422C47094208315DC2F6ADEBC27BA427420811BC4248F15ABFF4E891C244BF31C1D4EB2E41607D9442BE79A84243D02BC224F3C3C2632EBD4212D17FC23BBB904136420E420039344292415441F0BD2D42418FF941E0C0434106179242107C8242A93589C2D4CECDC04D7F21C20CA4ACC0A276CCC1F6459AC196380D427A6978428AFB44C149363541CEA283C13875ACBFF087D6C2729FBDC16D8BD8C11093F6414E312342004C37BE86A5884213DFC5C2D82E7540E662D9C164B988418CD08EC00A459341FECDCCC2647CCD41986A1742CB41C742E9965DC26C84F141E087D73F9B2F35C2548FB141F08D06C1DF4953C26B067041CE37FB42165467C07CDB23C2D41E2D41A6751CC2F524B5C22892A2423D132D410E70F1C220AA0A401A25024282C71342C4A56F405EE24442B4DEE5C216E71C41708700433483C6C29451EFC28DC837C280C2B4C11E43D94038EECC4269EB4E42FD638EC2EA31F9417A51BE42805097C2F36C26C14BCC85C2FB5C96C20FCEB3C19D480A436A448F42F7334AC2393009C1268AEEC0473A2441BA9B714188D59D409450C640E18CE8418819EAC07836CD40EA300BC22891E4C19E3FF7C144E751C2209A1E404975A642EE46614263527B41301C8F419AAF58C1F2D60EC162E446C2AD9DD0412B800F42DAC89A424C70F7C04C4B6542A63EB24241558D412CF3D2C2AEBE09C14DB4FE41548FF64245214842D2B1A641E48C8FC1881E0DC230858340866BA641495FB8416283FE41AE52F841C43780404071FDC10E70FD41D2557CC11D0E87418720024224B59AC1FFF657C18D716D424B0A2B42901812426AE62FC2B362F841627864C2D6F11642FEE1C441881D5942440A4842784D33C04ACFA4C231E198C2FA7DCCC18138B2C234ACF4BFB6C882C24C9B7140006D58C2BE89B3422206824242D684C1AE244542E50D7CC2E015AD420A380B40FC7531C27FAF37C24C67B4414457AB41BC31F3C150DA61C0106837C28CFA11C2649A93C25CA165C26A58D8C164D0A2C19B851E42D447EC413BC00C42B6D80AC3C046D5BE56FE26C2B8D5FBC0D2E452C1AFF1D6C2292FE342FFA8E9C1DC5B9EC29E622C4208C1A2C1FD0C2AC2342ECFC1DD4B1E43E16BB242C674BFC23A209BC221B7AF42D531054223BD494128A835C2121706429E2635C2DE891FC270DB874102A2E6C2EC685641B8638B42962B7D42A07496C0DBD99741F7BE75C29EE783414ED348411A7AB6418007AFBF0BC5C9415423584294E15C42E8C966C2B7F2FB4272E42FC2084DA0C228445FC2A56D3D4250FBABC20085214145B63FC22DC08FC20F9294C1D48CE442A41B8CC2201CFE41808AADC1A8176542D22C37C28ED694C296B470C0CE2551428C838CC2658309423E9A9EC2F016FB4090B38F40765B51424B940CC220B12AC14A81A7C1C602A340B1F91EC2A098A83FF079C64263D4874153AE5FC24AEE29428E4AE6C21FC90FC27B582AC2BA168D411050554194FC914255B76A419AA58D4241534242263514C2620D8EC2CA42DCC26D039942501C554023B097C1547430C294F0084052D95D427E9B2EC252F9B3C24EE1AEC22E392342B41F174242CAE1C1BFE89FC282D490C1C7359FC1AE0F2BC14E0C24C23060D03FD420A2C14D6AB1C27646DF422BA29FC2FA2B24C3EE4D98C25D126442664B8CC2057A2CC26FD3EF421B11D6C17654DFC1FA03D5418A476DC240E1D7C1CE479EC1401EA8BE3ADD4CC2A495D0C1D372C54274D6CD41AF81A04208C32343C28F8342D57034C2CFEC5A42F7FF3CC147FB90C1F42A1E4284162EC22F90AEC23FB73A4209E5E0409DD7A9C10C46E4C1FA614FC210441BC1020F7241860F9B4290991342A7ABB5C1B2A4F6C18A0E1E41548EC24111EFB9407C6715C29C3F9CC24A203CC2B21586C22C660C42D914CD40ECAC06C2B6989DC25E55F6417C53E5422AC158423A41A841B439A342010709C032EA6FC1F6A657C2CAB094C2683DB441A661A442EE98EE4206A93D41BE51A6416E9A7BC2B0FE184204E37BC1F60425C2F0B7173F89FC1D4236E2AF422EAD9C42741D5241A272BBC1C04F2DC0485DE9C1F7D3D3C1881B7B4273681243E8F194422869EE4069280AC2361842C23C133FC27C8F07C1B4F4EEC1FA4F7CC24A7A684223018042CDCD21C2AFBE10C2525E0B42C6D039C2BA5459C1A7EBFE4158C6BA42C51189420A95CB4241F505C29B5153429C56C441A91736C2C60DE64228063F42C0045EC296F21E4242523CC1145DFF4269473C4120394CC2AC488BC1CF825842B869B741CF3A84423A0FD4C048257942690B5FC0346919C1EE068B411EBF9EC07B834942527ECEC01C82B93F42D9FCC18E0130C13D2D3C415624FF4012E28542"> : tensor<2x3x9x9xf32>
    return %0 : tensor<2x3x9x9xf32>
  }
}

