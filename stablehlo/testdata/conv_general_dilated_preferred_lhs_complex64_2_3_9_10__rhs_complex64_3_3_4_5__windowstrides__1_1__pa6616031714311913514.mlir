// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xcomplex<f32>>, tensor<3x3x4x5xcomplex<f32>>)
    %1 = call @expected() : () -> tensor<2x3x6x6xcomplex<f32>>
    %2 = stablehlo.real %0#0 : (tensor<2x3x9x10xcomplex<f32>>) -> tensor<2x3x9x10xf32>
    %3 = stablehlo.imag %0#0 : (tensor<2x3x9x10xcomplex<f32>>) -> tensor<2x3x9x10xf32>
    %4 = stablehlo.real %0#1 : (tensor<3x3x4x5xcomplex<f32>>) -> tensor<3x3x4x5xf32>
    %5 = stablehlo.imag %0#1 : (tensor<3x3x4x5xcomplex<f32>>) -> tensor<3x3x4x5xf32>
    %6 = stablehlo.add %2, %3 : tensor<2x3x9x10xf32>
    %7 = stablehlo.convolution(%6, %4) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %8 = stablehlo.subtract %5, %4 : tensor<3x3x4x5xf32>
    %9 = stablehlo.convolution(%2, %8) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %10 = stablehlo.add %4, %5 : tensor<3x3x4x5xf32>
    %11 = stablehlo.convolution(%3, %10) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %12 = stablehlo.subtract %7, %11 : tensor<2x3x6x6xf32>
    %13 = stablehlo.add %7, %9 : tensor<2x3x6x6xf32>
    %14 = stablehlo.complex %12, %13 : tensor<2x3x6x6xcomplex<f32>>
    %15 = stablehlo.custom_call @check.eq(%14, %1) : (tensor<2x3x6x6xcomplex<f32>>, tensor<2x3x6x6xcomplex<f32>>) -> tensor<i1>
    return %15 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xcomplex<f32>>, tensor<3x3x4x5xcomplex<f32>>) {
    %0 = stablehlo.constant dense<"tensor<2x3x9x10xcomplex<f32>>
    %1 = stablehlo.constant dense<"0x68471B4098C243C0B40262C0AFC29CBF7210C2BF773D1940751ED1BFD5F3B23F1F08EDBF481C2C3F098F1C3B4519BEBF46DD5CBF6AE50D4005DDBF3FCC1704C0E4318FC09181D13F82CF2E3F91EBBB3F59EAB3C0877418C057F2563F85CB57C0D0F8273DE97340C09254153EA8F7DFC0AD4F4F401778E2BEA322A1BF16E8FD3FB076E440C1A499BF7D156640D8D7AE3FC3A274BE1A73A13F6854403F58A5A840AEAFD1C07D7DF63EA9D9A4BF4AFA3E404E1F9DC04E32B03FAEBB05419E5A38403882FE400C678D40BF8007C038DE153FDA1060408E247B3FCB67BEBF9CB6A140FB5DA1C05B1C0AC1E73382BF72AF8BBF7F0EA2C0ACBDD4BDD2FDEFBF8AF5F8BF7C99553F66D7653FD5D2C73FB6AFCA3FBDEF13C01120A940C6631FC0772324C030D04BBF29FBFDBFB3265E400AF38540CFC785C0008C72C03EA32CC062A39ABE63FC81BF65D1AFC032BC8A3E38D640C0CA200DBED097B4409ABC05C0147D42BE0EBE23C07C2922BE448F3DC09473A0BF675295404431303FB63871BF3D1457C0F712104070FE35403FE69440A74F97BBD94EA63F49148BC0FCFC7D3F36429340728630408D21D23FF64C7540073C8D403DD1BA40B9F78E3FB51CA7C0F88C823EE0C888C0006CA73FB132534081D3BE40381B8F3F0903903FF88A39C0EC99204029A35F3FDDFF7D406759F5BFAC7C97C01637F93E4C89EBBF505F16C05A4E094031717C3F8AF9D83F88A9AE4059290540B43A64403CFE25C048A25C3FF9158E3F1D8F053FEADA33C0DE270F40F8861440A59EC6BCA33A853F55973DC0AC777B40F2068ABF7BF9ABC06875934085B054BD0E9825C011529E40751403C0D2FFAA403A8ABC3E1A56803F89C286BF5BF598BF4DB10EC09FC19C3E0949E53FFFF5A040A952A4C074D32EC0F52D0440EC2B3540ED9F21C0E2C0E6BE4D409EC0F3F925BF895F30BF8E6469BFD09AF1BFEC136FBFC3C334BFD1BF2C3F6B401CBF98CA08C05A649FC039E01240EDED01C096E32DC045BF45BF3E45C6BF415AA33F7A29DDC0E0838A3F1CFB4440AE5486BFC2F70E3F22358E3FA3CC093F235F5C3F1C29B43D895F8E3F4829EBBFB1682EBFBEEA8FC0E0093CC06A3FCCBF5FCA06C0DBE87D403DD6C8BF685C1FC0ED857DBFE0F7803DE04628C055F01F40F26894C0503DC4BD701480401DEB0341229A0340DA098F3EFCD8114143FCB33FDCC477BF15358D3F4E4C84408DC36C405B4E1F3F271545C01120D440FE0AE7C0930B42C033D89CC06F2ACA40CDF85640617101BF762C1840AA27963FB2085F40FD48B13F332EAC3EA2672FC03DBC3C40AF49AFC0EEEDDB3FA52E4CBFD88D9F3F153B2440366CFC3FBE9C65C03BAD6FBFA5FC4D4000DDB5BF975B2DC0A1D21A40254D07C08FDCAE3F02B01C4064E50B4080B29A408D59A0C0F8751CC0037F8A3E06D284BF6BBCC83F166689BFDC18A5BF7FEFF13FF188643F782708C0B2CF1AC0A8265D405B3B71BFF98BBFBF4661F2BFF1A03CC0FA82B73F03BFA23F818FFDBF6BFB55C027CAEB3FAA54BAC0CB37A23E4C958EBDA3F649C035249540077AB63F92F4BCBF58549140686846BF4845034064585CBF28A0BE3F794462BF5950CB3FB2BEF4BE7CD8393F4A85B33F2DB68C402C3E30C0A2F254C0D0359040F7C36640CBEBDFBFA1B70240EA0217BF0BF09E3F4E54D63FA309163F08690CBF6869ECBFF288D83E716896C078EFFE3FBC0F843F8EF7F9BE2A71B33FB15C0CC06BC376BF2C02D13F88086D408CA533C07952F5BE3565CABD811EC7BF9622B73FFF04454051B0F1BF88CEF6BF00AA813D34DB13C19E3F92BF9F2C953FA596EEBFC962DA40481D37BEF2398EBE1801DF3FE9A473C0FC62B2BFB461BDC05AE2DE3E1D5571BF13556A3FCE9A7B4005D51F40DC9ACE401CB30F40193FFBBE74DE923F13824A40AFF340C0C9D7DD3F5AEBEFBF07ECE5BF02139F3F875919C0D984024003FC4540F20205409EC28CC0BA546D3D8EBA94C081FC4340C5CF8940094A2A3FAAD789400EBB34BF9760593F"> : tensor<3x3x4x5xcomplex<f32>>
    return %0, %1 : tensor<2x3x9x10xcomplex<f32>>, tensor<3x3x4x5xcomplex<f32>>
  }
  func.func private @expected() -> tensor<2x3x6x6xcomplex<f32>> {
    %0 = stablehlo.constant dense<"0x5AFC8B4224818B42F47F9142208877C19DB535C347AA2EC317E60BC3BC5703C38CB4ACC29CD6A4428A88E1C128A506C12F1802C26516844260AA2640546188C29CF3A6C2C3E573C38231F6C1385F8741451517C3965A05C36A9217420EE50FC288487D42A328294328209BC0426DEFC1F69720C30017823F64DC2D43F3E1A842FF2C92C2AA29B242F03D7D41B00333C197E7FD426882B3C102F3B542282ABDC108468CC1C8B74FC1A06AD74080DC5F42988D1AC2AB8EC7C2AC0E4FC10050DF3E948AB6C2000505431603F54251E402C258E904C3EF4629C398CE30C20BC4F1C26A7D2FC30415A44234B760403EA29EC038FB30C1C4D98EC2000C77C027AF784324BDD7C2EAE98042724A0FC36FD80A43C61F9142C0C88D4110689741BDE63A436A3B8A42635682C2E86BE14248CE29C3909B5DC3464CFE42109940C1FBF7CFC297A00443DF22E342F482CEC290B478C1310BD942EA2BACC269EA36424CB046C2B85802C2FC9801C3CC5EB7C1B604A642563E70C3E13472C3D7CD11C360450AC1A0A545C25009D1420C6A8C42E693B2C2285E2841210E17C3E0FCB741120E514233AAAEC2FAD2B6422E08B241261D28C302B0C8C18276A34298D7404366DD3942DAEB5642C4E6B642600AACBF77940EC398CA9DC2826C7FC3FC3C29439E597242A5CC08C3E321A1C2F8C0AA411F74DF42EAAE53C343F8B4421436F6C29EE305C3AD6CC042A436B0C2A3D0EFC104E77DC2D9093C43331A8E42F1EC3CC26EBB1F439C9107C3FE2296C28B73FDC2C8DAB0C11ABB88C29B85C6428CED22C3BB38464246E030C3DCC1BB423D1924428043CB421F69C641471F2BC230A7E63F0B541FC310AAD2C22C3DB941E865B441A0D94EC0ACFD43425192D44120563E42CC55A1C2F010AA4140C280C33898CEC1C87ABD4168658740D0619742018B5842D576CF4270AE9FC0A47F8342C8B1DE406D1F0E42222110434CDA2542EE5A1B4298CA19C21457DEC144C34CC23ACEEFC241350F4242F58DC2B84E0141E63ACBC10082B1C2A63C37C35C1D67C2BCB1C3C209431642D67D154267FAFC4100EA214158F995C1D8C2B0413137C242C6DB394306B2BE42A2C8CE42FAF75AC2A2AE74C22CEBA142213FFAC2E00062C372B6CEC2967929422434CD421A44ED4262F0CB41DF7A35C2008F3EC3D28D09C268496441D18D8042D1415042547E5743A0422AC28028E3C28CD3BFC2B63BDAC2817F3D43A228A9C21FBE2A4378551B43EAF9F441136008425B2F18C32D1D93C23B702943B6A53142305CB5C1D02394C1B8E40DC3E6DD62C36CF63042984E1B422CF8E5C25CB091428E8E2BC3029B1AC34D24CB42F8184FC24E518642D7F86EC23721CDC290804842C85B24411E824EC2769985C26C3583C129E8A342C61734C3116F33434E5B8D4244A90343F7D21843263B17C3AB06244340D47A4118D834C213C73F43E2EC8242DB5D8042749AAB4116573E420EF01442A6098CC22C6C8BC108443842D386C542A6C28442ADD9E7C23EC371C2D4AF3DC3585671C00C3D9AC2E0E7A34217D892C16028FAC080CEE7C22803A54140BFD641781AC742512F39434E448C42F47B57C2340AA1C1A083D342B6D762432DD587C27459F14270CC1BC32F8FF04121430943C24547C242193042E6B5F1C28E80F7424C5998C1B88E0442FCB670419476374100201D41EC451F43D11B2B43CCC0A04198F3BD412BE69F42803CD33FE0932E40DECBF2423C4C28C29E21F041E93BBE4269611C4378E408C3A4CF9BC2FC2F40C3D02813C0B569344225650E425882B3C05DA72F4386FE7AC344DFD74228C983C1D810A44182E78F4210CBC0C1D40EA6C20D8D144260601D424BAF424330626F4280E131C0E08B1841DE421F43CCC8F1418CEB1942C48705436CF4E4C1008A0CC2A49CEB42E0957540B09812C2D08228C2E848A341FEF00443B29764C2B8EA9E42757E06428A699EC1F6BE5F43F6A492C2E24B27C3681A1C4138C185C224DBB842E90E05C2E41F4DC3BFD22B43163C82C2EA9DBCC27256CEC2D16A8042B88FFDC15042AFC27D5CB042AA2CADC211B19542632508C324DFAF4182D416423EB541C21A0CD2C118C926C3B07337C15035BC41643340422C7B6442E24A02C3B5F13AC382603643E8023A4118671C43E81BBB401C2C004300EA6F3F41EC2CC3BC4A5EC2B1B99142B6C62042D7E967433010E0C17A446DC2D05E31C3F45882C2CAC1BE421EE79A417E5C2B43A20E1643A6A52DC33EF990C294BFEBC260DEC2C2E7D3A14242229D42E2A527426C47D042FD5B6A428CF5B9C1AED60FC262869FC20817B8C0D6DD0943B0B99C41E1D6E2C29CDD73428C3877C208A3CEC2BA74444378F067C1DA5368C21C46E6C2F79C0CC301D46942FE8225C2A80D1142CE0B9242B9EB69C2A4270BC0E43791C2065379C28ED7AEC2"> : tensor<2x3x6x6xcomplex<f32>>
    return %0 : tensor<2x3x6x6xcomplex<f32>>
  }
}

