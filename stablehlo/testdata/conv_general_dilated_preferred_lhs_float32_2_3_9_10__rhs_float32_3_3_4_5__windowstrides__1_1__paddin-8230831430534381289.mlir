// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x6x6xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x3x6x6xf32>, tensor<2x3x6x6xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0x20C22DBF44AF31405C87823F1050C640E6B086406B6F46C0EFDDD5405B9BA33FF9BD04C04A67ADBFC4ACC4BF65E816C058F44B3E071A0A3F0DDF0DC013BB13C024BB9EC0DF004E3EB6260541BF6D12BF5914E93ED3A86C40B40FEEBF74FD4EC004505F402F09A34077CC634067E82AC0F40F163FD1978B40001691BF3A93B03E4A618E406BB54640429AE640EF9629403C9D284085D4D63E38CE0C402A30D0BE5F73853E1BDB9F3FD1FFA7C0088BF6BF267105C0656007409D40DBBF721F3C405D81DE40AEF7C8BF92944540020DA1BFED3C8CC05F280AC0ED8512C0072F233FDB890AC03ED888407D53AEBFDA3C393F54B8BBBF085844BF4412BE40610C93BFEB2696BF0154E1BF2881F63F9B38603FA24813400CA61F40DBA46D3F3857AB4023A451401827ABBE8FB419C02053A7BF7BE3FBBF5C82D4BFA4A52DC01BA6B63F1CF90CBF609F2E3FCC1A05C0C41301C066ED943F49ED73BF67E921C0C6BB71C0D865B0BFE335BB404D2F55BF80D894BF8BFE513FFF92CBC0041724C0E0D79BBFF68D4340A565604030123140BB2489BFB344233FCFC6E6C01D94603E4B180C3F0BE48EBFA0E01BBF996AA1BF7CC0EEC06F7E123F81F28DC041F2DAC077F5D03F42802DBFBC8307C199D0A13F06F78EC0FF07F83F568572C0378DE6BF2AFF5B3E389538404F7641BFCB1E893E484C7840C8A8863E4EB06BBF806AE34043D71F401CAD06C1A6C850401DEFE73F1F64B43E59A42EBFAC4B383F6B440D40358C6C4032EC9340D55AB5BFAB8A7FBF2D5359BF1CEC93BEFF3D45408D4006BE254EAAC06AD37F3F43DA36C02BEE914097A75BC00C24DA3E5DBF2840DFB18C3EB83D74BF3940C53F62F98BBF8A19CC3E7CB424406A0FC640CF8922404AEC76BE78DF7A3FC5B451C0C0E107BE661A0B404D1F7240D959413F4489B03E7BAFC3BF2E9CA340AF6FB4C0A0EE0BC0200CBD3FC3FAFE3FD3D51240C7CEC4BF617B1D40927B73BE6A54154010BBF93EE92A14404B0EEF3F"> : tensor<3x3x4x5xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>
  }
  func.func private @expected() -> tensor<2x3x6x6xf32> {
    %0 = stablehlo.constant dense<"0xtensor<2x3x6x6xf32>
    return %0 : tensor<2x3x6x6xf32>
  }
}

