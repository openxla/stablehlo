// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x6x6xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x6x6xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x3x6x6xf32>, tensor<2x3x6x6xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0xtensor<3x3x4x5xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>
  }
  func.func private @expected() -> tensor<2x3x6x6xf32> {
    %0 = stablehlo.constant dense<"0xC0ECE8BF791C9041860008C35722284294A91CC1DAA1124388CA4041E34E0A427EA22442FA921643CC7926C192A2FCC1F4E012410436E541E4C370C18B6BE7C280BD32C287691142BDFAF542864717424A4FF6C1963B8BC156C0B342C625AAC23225C1C20C8E3241C16E17425D1F2843CE610AC3876E8AC2070817C311051A43EBA034426D2B5CC265B6E4C0B23CA8422C5652C136116742BDFB40C238CD8FC054532AC2C4B743415F903141C0CF58417F1DAD4269E33DC22ACA5542B13EAE42D07D5042FF0940C206CF9E4278063941957FE6C21CC175C29C4F2341147BB3429BA59741A37DD4C1050285C249F4B9C079730AC26D5860C2B8B68F411DA2D142AE8B15425E7CBAC130AE7BC0D704EDC256C9ED41D06FA1C27F676542464B5DC161AA78C2BDD915C3C34D8742C43E21C262DCE3414F1C30C114B390429AA119C2FA755C42B5C7214258C10243D4B5CF411956DDC047369D4258EED04158D571C1FA0421C2C02AC8C22EB116C354C528C021CD87C276B205432CF5B44254E867421C70094268949441C0DF58C140737542491B9EC206D59BC28F9E09C2773541C2E268DF4291CAEFC228210AC177486BC2E0272CC16DCF93419A5D3642566C08C3447666C22C1218C2A88BD841A700C0C1F2B30FC3C63580C207E2864257B140C2ABDB67C225A20FC20AE020C11CB04E42B2243FC27AA7EA4270711FC27A229CC01C5BA54258AA05C100415F425C9C49C2EAF3E7416AEB3641FA2EF5C177AECE4215F0FA42B9F099C1C5BDCEC203D7C0C159209C42115BBC42889910C2333797C2188408C200EFEB400B528D41F43E85C220BD8CC14C046CC053C008C310A3C141F077C4C045BE3CC289E08A41B36E42C1C22AAFC2C0B1FE403FB2934180C3E442A0AB164038EB994151A386C216215D42E41A634256024E413E202EC15A8B45C23DD6DC42DE3B2843521051411C556FC1B8F93441C53B1B434BC86EC1DD6BD3C26A87C1C2F4041E410ED8E2412F26B0C21BA808C274D246C187A1F84270392F3F8D44CFC185EC59C2CFAD114279C275414CBF40C3EDDF10C21C5AE9C191E6EE41281F43C1FFB137C2C09295415C5048429444C1C2CCCD2C421A58494219591441CA528D423AF7CD422D2E1242ADDD72411D9B03C12AE4C34256E0BD41608FBAC2BC3FC2412E7FFA4172998742FAE351C20081404296AA8C415EB9E8C1FB9A0A42"> : tensor<2x3x6x6xf32>
    return %0 : tensor<2x3x6x6xf32>
  }
}

