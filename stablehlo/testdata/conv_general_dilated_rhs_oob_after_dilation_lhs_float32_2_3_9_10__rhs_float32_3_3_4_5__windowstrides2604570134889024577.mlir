// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x3x0xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {rhs_dilate = [2, 3]} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x3x0xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x3x3x0xf32>, tensor<2x3x3x0xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0x821CFC3EE8B303C005FA09C07E6EC4BF16DD76C0A880C23F6FE55B3E1B0EADBF7EDBB43F1010D3BFE7AEB8BFCC72ABC00D2C5040AACE75C017094140DB3C613E63FDFABF95821EC029FE43C038FB06C0C6F97F408D2E4C400544E8BF27D3893FDE90213FC81425C095536A3F861D693FF5A6363EA6BE38C0D7DABFBFC144E8BF331D3940791FBA40298D77C09FE2F8BF44A5073F2453B4BFE8ADA63D2B369A3E4B69F6405AF31E40C7F88A3FEC7F1640BC298040E86E25C06A5C9C40F6A09DBF166167C0177FD13F0EC40D3FCEA2993F92207B4068E7ECBF659BEBBFABE889C01152AABFBD4AF5C04F6E28409D2A8CC08689B9BFED724EBF244B1840BA6C9F40B34D5640916BD9BF166B934088495BC0F2E185C0A2451BBF2ED407C02851F4BF55791E4060B5D0BFA7D0134083B80B3FB8CA873F5E687BC04A5B5BC0C3E82E40B75AF940F44F3BC01F0D9AC0644D0641829A403F7C3A523F0A0835C06DE381403EAA40C029F92FBF0B2B3BC022AA6FBF9CE0F63FE5812EC0B68533C0F3F5354081A48640CE1627404A048FC0BEA9A7C0CAA406C095900E3DA5AC004078A42E404F7E2A4015CE12C0CE471CBE453D253F15D3B94096D34B401D83DCBFA62E133F57E98940A5B40B3F189C653FCE818740D98E25C07A12613E88792740E550A6BE65BE89BDE252DB3FDDC009BF481135C0838F1C3F82CB9E402FE3E1C07B3C60BFC7FB0640F4CA6D3FDDB3CE3F8D4A0F3FE30757C00796A7BF944F8A3E372FFFBFA8FDC4BFCE0BEC3E085D96C0EC0F043E5F4E89C0312E1FC09C4B22C0AB2B60C0CC389DBF2745113F8B8170C0234FA1C03E882DC03A5E0E405CCD633E37F3963E1532563F325BF1BEFDA67CC0D570803FF441FB3E69B7A33F2B66F9BD9B69B33F875985C039F68A40655D303F86991EC076EFD33FC2AEAAC0BF196740B13F2B40D751A2BFD16A524015DD9DC0172827BF0B78A9BEC0116D40EE1B223F39F0DDBED617E440327ABC3D57418AC0F9A3C5BD"> : tensor<3x3x4x5xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>
  }
  func.func private @expected() -> tensor<2x3x3x0xf32> {
    %0 = stablehlo.constant dense<> : tensor<2x3x3x0xf32>
    return %0 : tensor<2x3x3x0xf32>
  }
}

