// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<3x3x10x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x0x6xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x10x5xf32>) -> tensor<2x3x0x6xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x3x0x6xf32>, tensor<2x3x0x6xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<3x3x10x5xf32>) {
    %0 = stablehlo.constant dense<"0x1BCA9340FFD36A3FF569B43F45DF843FE1BD2BBF2CFB123F57C502C1B61B1FC00C6795C080C80340E409C53FB7DADDBEB68136404125FE3E003BA6BFC6B9C63F307051BFCF5EA63F343F2ABCBB973DC0ED281DC065131E40D58C363F09FEBD40940EACBFFA4999BF1C651040C115B13F355C90408C1F393F147648C029C6A740D22CA53FECEE18BF88F3623E2C1B4CC04164CC3F8B582340D5EA254092DB0540FB229AC01247333F60813CBFABE2AFBEDA4189C078C53C40AE1DCF3FD3E01DBF4EF29AC0549C7A40356D1C3FADBCAD3F91B541408FC6B03ED08DC9BFB926A5BE6FABB73E419A8EC070F15B402FF8663FE1B3E1BDEAA16EBF52E2A53F48A22EC091ED7FC031B5884077A1FF3FE78A6340069F3EC053960F40192ED9C04311553F924E83C068E5ACC0036875BFF438523F5A7355BE1180A9BF2FE288C0A932CE40691FEDBF8AB3C04036CF3FC025E6093F0497CABF2BA98A40ED0165BF232533BEDCA48140B6F2C6BD77D93E40703DEBBF333F22C0524329404C2B74BE581D89C0CC766F40C3F812C07E5C23407AA9253FEA52243E776E3D40226163C0A6AB4DC0C208CFBE066AFD3E9F715D40CD3D55C0BE73153D830BC7BFE16F4DC0EADA2A40AB9D854065D7B53FDCE74A401C830DBF538417C0A406C63EDF214C40890D7EBFA8DBD0BF6693D73F8BFEBB3F8C8A394001BC26BF4FC8023F310AB240E31599BF3268A8BEFC4330C01AB13EBF2CCA9EC0381A0BC026A203C0494D6B3F707F403F837A283E82A0A93F9530EC40121DCB3CA87DC23FC10863BF315DA4C006949D3F2386973F550816C0FA8CB2BEEAAD874015C357C0B29AE940BE38E73DCCCCD9BF89D792BF6A77F83E883CFCBE36FC054164F8D0BF678453C05FB08D407E6F27C0F5EF323E4906D93C313A39C037F0014096405B4077BD81C07F838BC0A56DA340382B953F7265BFBFD5D1DEBBDD31F53E1C4EA040A4B7533FD99444C02B2EBEBE36FA43C0F95698C094B09EBFF83304BF948FDBBF5887C240D30EEE3FBC28B3C09AB70DBFC66A1DBFDA42C0BEFE2EA43FFD1DDBBEDFD20F40ED89303F7061C63E91147EBF0F232FC015B4323F06815EC0F941083F131A1A3F5D973C40E44F344095672EBFC1E4AABFD48B06404EFFD6BD8799D6BFF27368C073DEF1BE75277B3E30BA8ABE0554FA3F15E27B3FC0D85140ED854CBD0B0EBEBFC0EF3AC005AB913F32E7ED3FE4203C40D1820BC0CD2B82C0E8DCD1BFEDED0EC0D0B6CA403E0413C0603CF140992195402FBE8AC0A6BAA8BF2EF3DB3FC8F273C0F569FCBF83B6A5BE861AC8BF3CEE803E421A93C04C090A3FF57A7CC06D3800404FFF55C04A8CCBBFFCD99140B20BD33F24E5B43FD7EF933E2B1EA6C0EFEBC1C09FFA574097520040F459A64001CA29BD2B389CBF0E7D21C04A15ED3F0ADFF5BDCF49EEBFE2E7FDBFC0C6DAC00E799D4050430440C524CDBF04D70A3F06298CC0846A723FE82CB1BF3AA4C3C0B04EE3409B1A124048891E3F9B67CBBFFB0ED7BF318B254046AAB23F6DCF18C0107B99BF2DA614C019C2EC40FA5DE0BF8D4BBA3F27B512C0E8D290C0BD2DF23F211069BF744172C080E501C0AFCA41C053C91B403D0D25BF4FA6FABF2F50A63F9B39A03FC49432C06274B7C08F345BC0B00504C0A006A7C067D537BC460A83BFA32C903F5A310B4093755A3E68EC82BEDBE3C0C07A48B7C0D618AF40F54605C02842F4BF86A9733F84590D400751353D9111B8BEDEE78C407A4E95407A59D4BE4965B13EA50A433F78FBB6BE0D992240EFA856C03FF0763F84114140027BC8BF7A7F884066C21D3F38D108BF37016440699B874067216C3F6A708BC0C8E0A940C0CC28C0DC9A8D3E8A489140E450C83FC14D94402B3E29C02A39A7BE2181ABC0750748C0489EAFC062DF8FC0794FE43F2BE95B40E8CB7EC0F72257405A0B0E40FD4940BFE25708402A8D593EC72DBF3F27DC4D3FBBABA4C0BC0A663F18B702C0AF6A04C0061CE7BFE5795EC01ED52140679048BF3EFD903FE96A1E4001C55C3FF3C64BC0296E1CC0D0DD3340FDD74ABD438E3D3D41ECAABE23CAD0BFA2F198BFE33BA840DCD41E40DA7506C05711CA40D8EB44C030A429C0C5E004400C9733C0974678C03707E6C0E07D9040570F823F54CB06401A3577C0BD438DC0EE601F3FBA6129BF3CB734C050EA4D403BC721BF63FB6540ECA8A340E92F3DC0B3371940BED786C0F317C33E34E348BF0168EABFB4E2F3BF2AB127C01C271E407BDA9440695ADA3E037DD83F1D61E2BE9747D9BF01F8FF3FE7090740E81D4C40F35EF0BF06D50CC0756083401F7AB2C0F2503F3FD315EF3FCD98D33F0D8AF1BF77508BBFCE6B704006974FBFC9565A4003CDA1BFCF5153BFD96EDD400D5260C00CBC1ABF346E2DC0C82533C01292473CAEBFF6BF0F7621C0EF77833F1BD33DBF630858BFD29FC1C0FAE1343F7FD0783F4D2A6D3FEA35E1BF0AF576C033984CC0360CA7BF6F43A93E29B2A1C0716BE2BF1890913F6F7A9FBE8EA62AC0E4DB3DBE096A443F792940BF314D33C0EE5A24BF511C6A40E797823FA5063F405EB19F401D829940C48B49C06F7FD5C006091AC040B5473FFC9B8AC01CCDA3C0FBBE29C03AA902BF0B147CBF3EED6EC0A2BA633FC3AE6340EF151DBF5A432040BE30143F01DC95BFBBE177BFF18967BFE27CF2C0A2AE6F3F5EE05CC0C183F73D51444A40018ADA3EDFFD6F409A204640EF0EE0BF815304C1F0243B40A5493BBEBFF4A13EF734133FE57323BF46E2C33FB70B6340376286BF9723E53F908174404EE4284013CA904006D5C13F712B1B3F2EAF91BEB9B79E3FFCEBC4BE9BF7C6BF82B6C5BE9BDD843FC5AD64C0839E6A3F7CCD8D3FC25C01C08D2ED4BD6E3BD93F61257440F3313E40523ED5BD01001EC0B31A4DC0D3F52DBF13C49D4014173D3F4B11DEC06C12B9BE795B363F8EB99640330E074073A8B43E61C77ABF5F1B8B3FEA9E4BC04FC4CABF968692BFFFABA93DA8436AC00FFC8F400FF0973FD4E4013E22EED1BD46C893C0456B89BF16E123C0E3554BC0"> : tensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0xtensor<3x3x10x5xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<3x3x10x5xf32>
  }
  func.func private @expected() -> tensor<2x3x0x6xf32> {
    %0 = stablehlo.constant dense<> : tensor<2x3x0x6xf32>
    return %0 : tensor<2x3x0x6xf32>
  }
}

