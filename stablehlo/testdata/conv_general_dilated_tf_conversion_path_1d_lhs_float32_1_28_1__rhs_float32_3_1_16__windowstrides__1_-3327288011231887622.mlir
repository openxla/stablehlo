// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<1x28x1xf32>, tensor<3x1x16xf32>)
    %1 = call @expected() : () -> tensor<1x28x16xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, 0, f]x[0, i, o]->[b, 0, f], window = {pad = [[1, 1]]} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<1x28x1xf32>, tensor<3x1x16xf32>) -> tensor<1x28x16xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<1x28x16xf32>, tensor<1x28x16xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<1x28x1xf32>, tensor<3x1x16xf32>) {
    %0 = stablehlo.constant dense<[[[-0.467909843], [3.0104866], [1.79241717], [-2.66431046], [0.943148195], [0.417969763], [-3.74905968], [3.16968536], [-5.34840393], [0.546826541], [-2.03253365], [0.221049443], [-1.28537452], [-3.92773461], [-3.46224833], [-6.31273508], [-1.36294055], [-0.348805457], [-1.48003304], [-2.109411], [2.18338346], [2.66028404], [-2.67348027], [-4.70081472], [2.17808843], [-4.80057335], [-0.520323932], [-3.46543169]]]> : tensor<1x28x1xf32>
    %1 = stablehlo.constant dense<[[[1.86612034, -2.69200087, 3.64211726, -0.905698835, -0.781734287, 3.59102416, 1.76857328, -0.165421158, 3.81084895, 2.13960075, 1.54851282, 1.18953419, 2.73690462, 1.39771187, 0.182823494, -2.9513216]], [[4.55942965, -3.55209756, 1.15906274, 1.3861196, -2.87826657, -5.87348413, 2.54662919, 4.35670042, 6.92599821, -3.36722088, 0.160179541, 2.87391615, 0.706002235, 0.168740258, -0.562571108, 0.90919727]], [[1.72864258, 0.410824031, 1.69746757, 3.05829334, -1.61078143, -3.05013394, -1.17601025, -0.797711431, -5.79306793, -4.6189518, -1.4868108, 1.63480639, 2.47044754, 0.880895197, -0.240365773, 1.13968313]]]> : tensor<3x1x16xf32>
    return %0, %1 : tensor<1x28x1xf32>, tensor<3x1x16xf32>
  }
  func.func private @expected() -> tensor<1x28x16xf32> {
    %0 = stablehlo.constant dense<"0xtensor<1x28x16xf32>
    return %0 : tensor<1x28x16xf32>
  }
}

