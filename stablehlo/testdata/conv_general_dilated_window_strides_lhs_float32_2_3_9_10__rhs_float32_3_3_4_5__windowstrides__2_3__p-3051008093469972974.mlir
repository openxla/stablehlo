// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>)
    %1 = call @expected() : () -> tensor<2x3x3x2xf32>
    %2 = stablehlo.convolution(%0#0, %0#1) dim_numbers = [b, f, 0, 1]x[o, i, 0, 1]->[b, f, 0, 1], window = {stride = [2, 3]} {batch_group_count = 1 : i64, feature_group_count = 1 : i64} : (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) -> tensor<2x3x3x2xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<2x3x3x2xf32>, tensor<2x3x3x2xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<2x3x9x10xf32>
    %1 = stablehlo.constant dense<"0xtensor<3x3x4x5xf32>
    return %0, %1 : tensor<2x3x9x10xf32>, tensor<3x3x4x5xf32>
  }
  func.func private @expected() -> tensor<2x3x3x2xf32> {
    %0 = stablehlo.constant dense<[[[[-95.5855865, -11.4063683], [-39.9471169, 37.0762024], [14.9044838, 118.892014]], [[-4.32391262, 56.2651291], [88.3947753, -12.7833405], [-156.560715, 98.9454193]], [[106.039658, -106.346199], [17.4612026, 29.0505123], [52.5977631, -5.40521336]]], [[[-40.9302826, 179.686569], [-14.4706345, 52.8698807], [2.86169434, 19.6195393]], [[30.6880188, -141.167252], [-40.575264, -1.05871201], [31.6745529, -79.0460815]], [[69.1415557, 82.6802673], [47.0121803, -44.0802956], [3.722490e+01, 36.657753]]]]> : tensor<2x3x3x2xf32>
    return %0 : tensor<2x3x3x2xf32>
  }
}

