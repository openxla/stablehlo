// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = call @inputs() : () -> tensor<20x20xf32>
    %1 = call @expected() : () -> tensor<20x20xf32>
    %2 = stablehlo.constant dense<5.000000e-01> : tensor<20x20xf32>
    %3 = stablehlo.constant dense<-0.693147182> : tensor<20x20xf32>
    %4 = stablehlo.add %0, %3 : tensor<20x20xf32>
    %5 = stablehlo.exponential %4 : tensor<20x20xf32>
    %6 = stablehlo.subtract %3, %0 : tensor<20x20xf32>
    %7 = stablehlo.exponential %6 : tensor<20x20xf32>
    %8 = stablehlo.add %5, %7 : tensor<20x20xf32>
    %9 = stablehlo.custom_call @check.eq(%8, %1) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<i1>
    return %9 : tensor<i1>
  }
  func.func private @inputs() -> tensor<20x20xf32> {
    %0 = stablehlo.constant dense<"0xtensor<20x20xf32>
    return %0 : tensor<20x20xf32>
  }
  func.func private @expected() -> tensor<20x20xf32> {
    %0 = stablehlo.constant dense<"0x31CC8B3F542A1741F37B6D408444853FA09B864322AE68403907DB41E5A41C41A0F14541494F9D3FB6A8B43F22D20E422CF8873F33FA8D41D4FD0A41F9E4D43F7100E34298AA5B40D08A254281F13540A98E5A410DD15141240B8E3F948B923F2FF16840470707404899823F1FA7AC3FE049813F4D627E41C00F84414AB7DA3FCCDE8A3F32D998408D6CA33FF0638B3FB1BE9B4185C7114081D71A40F617A13F7197A23F04046440AC01823F6312843F905A923F04A5E83FBE7D54421A56AF3F7FD3F541328D4E42E337F93F3BCEA842676EED4090B0E741FE19A0407873963FDCC05640112A2E4140B79F406E8AEB422AE0863F1C0F803F9C75813FFB7DF53F32A64E4009C36740DD889A41F8029D3FECF241430832BA42081D42435108933F15C4D03FAADB84410C6B9A426400803F90295B405F06803FFCCB8E3F403F6741A779BE40E42D2840A2EC943F36275040FE4F3741745A993F0A78D03F9412913F4D868E40C47DBD3F4D48CC423F92CD41CD053C40B8530A4089F23B41BFF79B41AA961341180902406EC39C3F67C3823FACF9E23F5B960A40501DD33FF965F23F96E2F541E146843FFAAD1F40A57F73422448E740546C1F4063733B41A00D024212FE33403AE39E3F3807DF426ABE2A4099240A41B3EE5F404B44CB42B0846540DBCE0544D9F6CB42849C874093D71241099D5940EC6F903F6E58C33FC792C142D5009A4242A0DD3FEEB64943015A484117ADE5420ABE8F3FF51A5F408067AC3FACD5923F20B58440D6428341FBBDA6439FA9E73F7E61CA42427E4B429A6DC23FC4CC6D40F3F15A42FFF18B3F75BE7042C700813FA8B2873FC41C813FA78A5D42FF6E803FBDB41D40EE47A63FB635F63F6BC99D405B55FF427CFB99415FD81440ACAD8F3F130CD93F30E6E040001496410EDD813F146A803F248CA13F9472953FA662A23F28BB2840B142494188392441EEA9813F8DAEB03FC3D380419A2DA43FDC44833FF9021C40721E0B41DB000A406AF4813F45AA0141BD01803FE9778C41346401404E398E3F5027803F030AE744A49F1140BD8A2640E40FBA4183881540DB5DAB41FEA6AE3F03CC1D4238232C40A28ECB40146C5040DD6DF3404BA56441613A833F0C11904143C08D42DBAA903F0048A13F88D08C3FA1C64E41ED14BF418AB0DC4448672E414EC3FA40DBFDF53F11063A426C489440704F823FBF33903F45783D4051F2903FE998863FCA78E8401ADC9C41027AEF3F65E8B840DD301740967583403DAB32418215CF3F9D69DB415CFCBA40CAFA4441D8F2AE4343D3A53F31BA0E44C488943F0E2F49412A01803F71223141CA23C840907B803F28B6EA4027803641B1E1534131348D3F3C4D04427D6EA63FCE93EB422101AE3FFABBC54280549C3FC034344085DC4641C17740402620883FD7B5933F97430E4122B3823F35E21140D463394090AEB9401B66594238D465436C11AC3F2F3F833F4E538C406D32C2421B2183422AE2873F37CE3D4116BCCE3F35B26B411248CB40EB40A640D76C803F1126A744D99BB440FB2DCF42946E13406E18F53FB1109A3F7C14853F1C5CEC40BBF8B53F441CA53FFC4B6C40E5352742DA69164160A9873F09950D42CE54803FE367803F61A085417C3D853F5F464841CBA46C4197A3913F9A1B833F93054C40B8C68C3FFB20B3424592BC41A8EC9F415C983240F97131447BAAB03F47AAA03FC9B50142672D23416028AB4171AEBE3F964CC7415CE0973F1998863F72382641FEDC174070AC93411A2E82427A01803F8467873F745512403D6B12404E8922425CB7D83F4CB22F41C34DA63F6834B73F04E78C3FF0B38F408D77B942B3B4F5404684EE43F031CD3F7793CE44CDC1B8406DC38440753A554228F602421488C940AA107941B0F3A8424FB1DC4010230341B91F2D413D8B50408B29464072122C403A10B43F5699AA3F351F8C41F08F5D40187C4041E3928942DC5F9E41363AD74035B81241595DDD41CAF8BE3F56B53941CC609341A8278A3FA318FA40B6C3C43FBAE2904041ED684066D3884181B98B3FF8712140A8E3B13F2744FB401C95863F1915893FC1ED8E40C3605C44DB8CC741086204436953E73FD38730412FDBAB3F4C6192412BE123421CBFC141340EFB3F8544A94000FB8E4147EB7641134E0741DCB4C13F2BF500418C47F73F21138A3FBA6E883F317912410C321442AE2708423E843B41D309803FC8FF00422599B73FDC28FE3FA2BD00425F86F03F"> : tensor<20x20xf32>
    return %0 : tensor<20x20xf32>
  }
}

