// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<4x4x3x3x4xf32>, tensor<4x4x3x4x2xf32>)
    %1 = call @expected() : () -> tensor<4x4x3x3x2xf32>
    %2 = "stablehlo.dot_general"(%0#0, %0#1) {dot_dimension_numbers = #stablehlo.dot<lhs_batching_dimensions = [0, 1, 2], rhs_batching_dimensions = [0, 1, 2], lhs_contracting_dimensions = [4], rhs_contracting_dimensions = [3]>} : (tensor<4x4x3x3x4xf32>, tensor<4x4x3x4x2xf32>) -> tensor<4x4x3x3x2xf32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<4x4x3x3x2xf32>, tensor<4x4x3x3x2xf32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<4x4x3x3x4xf32>, tensor<4x4x3x4x2xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<4x4x3x3x4xf32>
    %1 = stablehlo.constant dense<"0x4AFA57C0C5DAD8BFD5C028C08B555F40243C7140BDDFD9BFF8C008BFA943B5C0061F4E3FB1EC9AC05B8F983ED9351F4070090240EA443D40C0BA8BBFF2F24AC03DDCAEBD00D1B4BFFB95BD3E67C782C09103C8406DD4D43FCF0C0A3F855DDB3F538E944085752BC092423E408EFFB8BF5D0E36C000CE874022C982BF963CD9BFF47D99401E4016400571423E74AA2E40D4511B405122603F875E9C3F12F7B23FFD70A7BF03B9E13C4EE9574097CB70C01B3811BF71496BC0D291864098D196C0CE3F52BFD2DC9D3FE34886409E7CA9C02A4402C00E0F7C408892B1BF60E7F03ED5E3E0BF5826DBBEEBD97B3F0B2E133E6A5260C02BEDC3C03536114093B9C0C0FE2EFC3FF7757CBECC3DB4C0062BBCBF88F201C0F073F6C0B62BC13F70320DBF46DFC53F927088BFE3CABA3E55C7FBBF577D6A3D549B9340CB594040F37FB34052C36AC085AE47C088AC55BF597E4DC0DC01CD3EC20D303F2A0C8540191EFF3F4E559FBF4C6D61C0DED87E40FA5C9BC08C31B63F4FD881C0DD135F403CCF4D40C7B61BBFCAD3234091285EBFE2E1A44037A428C168B24A40F3F84F40673836BF6644EFBE7EB203BECB5E9E40D2457C40FAF8C83F08FBC94073B16F3E26DDE0BF14FF8D3FA3F1B0C05FCBC23E62C1BB3FE55711BF961F2BC0302BCEBEB78CD4BF96513B40077600C03FD545BF170DB9BFCD31AD4033FC0840C1668C40966B8D3F3C0B3640DC949B3FCC176EC0D23BDC3F7A6A28BEE25624C0D2982540D9704E4044D42AC056324840F3FDAF40A9AE9C3F9CA199C077FF11C05E700BC0FE2F15BFA332713FBB0A983F2BE005C111058240AEF31EC06BD402BFC4BD83C072AC2540164300BF41C94CC024C7A340E4030541623023C08EED9B40B2410C4115721DBF2946BFBFC265F73FAA84A4BF9D1BC83F72EC474030306E40B39BFA3FC882BEBF73EF32BE27A534C0654836BE828E9DBFF31F373F98AE4E40766093C0D66E533F6AA185BF04768740F0D3863FB3E2C3BF3ABC75BFF546673D7D7F3FC0B34E6DC04980EE3B3AE04AC023A3193E0BB11C4043DB38405F39FFBF55EB053F245465C023708A3F12A881407B3A81C08BA401C0FA640D400176F83EF3C8E3BF2FAF453F5CC9E53F9C49443F1887B13FAB3183BFA5E33440050A634037A728BE13DCAABEBAD5A7BF4A6862407CDD653F327353C0F897DEBF1EE573402F4F244096A771407CD4D9BD90F10640D016CA3E59506AC0BB46ABC0A6FA58C066C141C0F9B096C0BD8798C0E608E83FC81798BFA111E73F97FAB73F8965D9C0EDF672400FC6E13F84C308C024E582C0FC5A8FBE5FFC15C06CA7404011C8CCC0780F52408AED7BBEBF23723FDEF11EBF98B8D53D1AA9833E48BDB43E40BC86BF5C500BBE2465363E4FB373406950C13FF08A973F501C854084BE5940BDB284C052968CC090F7063F6C33C5408923A93FFCBD2DC0B80DBA3F193FC0BFA10B874088F7F1BFE06E48BD3E2ED5BF1508EE3E9AE71B3FADD882C06D0F04C0B142973FB159EA407EA29C3F413B11C00EDBC1BFF603A53F22037EBFA32F56C03247D0C078623140643123BFF63D83C0B95A1CC0AF87B2BFCF7995BF449245BF6B6EA84034E5AD3F776D31C03F2530BFFCE08FBFE12875BD943E283FEA32273F4337DD3FD960303E2B8F5840A9700BC0658F0B40EFFCBDBF7D92D33F9598B9400447B6BF05029F408EB5013FD724E33F8AED03BFD6077E40681198C0E8D261BF192AAD3E2DD71DC04342363F3EA9D6BE530020C067A15CC0E4C594BFB86701C1732E30BFA4C8F8BFBD1EBE400FAE1B402870663F1FB9B8C0A881D53F25EC9640023FC2BF6995793F6B1B473F678E573E3BC11BBFDCBC8DC0E37AE73F473D784013454940C2D2404087FD473F6AB380403D3DAE3DB0E15140F5FAD6BFA9C3A44099EBBDBFF5624CC0204805C09E3A10407702F8BFE5604EC0C6E13DC0D78922C0F634A4BF349E913F7F588440EB2251BFB988243FE89D8A40147CD540B01A263FDF1803C112E840BF6E32C43F6BF5F2BF6D7631BF678A00411A7C4A3FBA7B58C0232EB93F122EA53FB5CF1BC0C63DAC402CDC6CC04569B3BF815FA8BFB18598C0A56417C007E7D73FC3535D3FC828ECBF43CC79C05151003F3176D33F5B856840A26B63C0AA0D034035408ABF"> : tensor<4x4x3x4x2xf32>
    return %0, %1 : tensor<4x4x3x3x4xf32>, tensor<4x4x3x4x2xf32>
  }
  func.func private @expected() -> tensor<4x4x3x3x2xf32> {
    %0 = stablehlo.constant dense<"0xDD332E419D06E541CA0D804095D75C41BD75D5C016191F41100B96C072831EC195504A3F874A28C159190D40C70974C1126B1BC2E2B33E41813F28C0666209418C8DF2BE127DE340D4EB76C0BFA80A413639284097BBC0C0DF081A4234606FC1E5696EBFF29AC5BF648F964158213D41EBAAA2C1878FFCC03712E841D7BFCDC186C79BC1F5EDF04175DEFD40249E82C10AF973C101AE8A416D43214158D6FDC08D6D75C1D4BF84414CA52340BA50DFC18FCBF940C43101C2C5A7CF41CD3E9C405B4B8541C7922A42744601C018D080C166D38BC00B61B74150D52A418EDFFD4158695D41954CC3C0C2906E41034B9E41D5DAAFC049FF5CC174EAB3C0F63C8CC0FBA292C0722D5DC14C2E01C1D669B041438578C162099B41C8F4934011B52BC24446324237D0CAC15690CF41BB78FDBFD87AAEC1B030BDC0D43FDE3F8682F640994CF53E0057614159DEB74004ED994174DC3EBF45C2E940DFDC32C0A00D63C119468FBD1B815641E6D1CBC13E14613F7D04E0C0F20DA8C1BF54A5C1EE3455C163FFA940EA63DA3FB343C4C16F258140AF599DC0052CDE4044A35F4125CC43C02304E5C1CE545141055E87418FB1A3C11949BAC0BAB189BF69A45CC289D3F84110661B42B07C97C16B165442D344DA408AB48BC17D0FD5C0601A44C24ADC67C20EFAA43FE8B3214165DA394163B0C940FB9CAA40EB9BB940ABB3CB40FF86B8C1870F0A41F844C440368508C15F4FDC40BDA024C1ADFDD8C185D984BF9ECE7CBF2EEE2C3FB65EAFC15AC83441A17EEFC186295441E50EC2C0A9D810C117F94E41D0AA0A41445B003DAE6BC9C12277BEC1BFCB9640FC290DC184DAD6C0E21336C1B76C194096D8C5407DB9453C445B8C40E3772141F32821C2D7CF8BC0162285C09EB152C0470FF4BF9857EABFE7544CC1A4C74640C5B34BC1E4E264414470D7BFF13E65C14A55B240DF83A2C1017A70425E7010C2960D98C08CA402C166DDAC4112143C4204464CC2DC01853F67CEEEC141F11D3FEB5881C02AE846400D2A053FB53725BF4F62173E46DE78C1876593410C6CC840A81A26419D4BCA40B24FB8C1C06B07C2DC502D3F27AA84C0ADA0B141DD0D83BF0F45AAC00D2B9CC1B91FA0C1D313F13F8836C8C0EB2EF641748336405774C5C100D534C203E9C1C0F379D8C119EA9AC0FBEA5AC1B86F63BE03EF15C27DC7093F310ABAC17AB0CD41282610C1399EBF3F0559B9C04110423E1E2117402D5CE0BD8A1DAEC0BE12D440C2C7CE3FB7478541A4C595C1A564B4C1C004134122B0F8404FE26AC1A6ECDDC0ADFBBE40523847C14A826A41E2F4F5C13701CC41FDB63A41810C16C2AFA1E13FC3968F412EC43BC18A18C4BD413B8D3C4C0529C1EAB419C2519FEC3E501CC3C0FDAAD5406C845F4261ADB740D84916C1C4578CC0DDE227C1D02244BF33E192C18B393CC12E098941E3113EC1FA89D03F7BCE023EF229A1C180599E40EA7B3FC10E3B17C1AC650940AB520CC14B7183C121370DC29DE02DC2F8D077C2F0FDC9C058C4D4C029ABC8C19C80A7C0935B8DC17CEEDEBFF354D0402825EDC1A05D17C2A7D59B40D6EDDC40517453C1ED7D21C188C645C1FEC2AB40E6220340DE1808404F1B86C1"> : tensor<4x4x3x3x2xf32>
    return %0 : tensor<4x4x3x3x2xf32>
  }
}

