// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = call @inputs() : () -> tensor<20x30xbf16>
    %1 = call @expected() : () -> tensor<20x30xbf16>
    %2 = stablehlo.constant dense<1.000000e+00> : tensor<bf16>
    %3 = stablehlo.broadcast_in_dim %2, dims = [] : (tensor<bf16>) -> tensor<20x30xbf16>
    %4 = stablehlo.custom_call @check.eq(%3, %1) : (tensor<20x30xbf16>, tensor<20x30xbf16>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> tensor<20x30xbf16> {
    %0 = stablehlo.constant dense<"0xF9BEF5BFDC3C863F9B3F1B41D33F99BF3F407EBF78C0DE3F5D3FDCBF84C0D7BEE8BF303F0AC0D73FA53FA5C02CC0AEC056BEA240753FBEBF923F454089BF0CC0923F9F408CBFA43F983E98C045C0EEBF80C0233FAA405ABEB73FA2C0E1BF53C04EC08240E7BF23409AC006C0FBBF9040ADBEC53EB43FC93FF9BE2D4058409340D3BF3C40AFBF1F3FB3C010BF2F402F40274062C0DE3F913D9EBF2C3F133F93C0B9C0933F8F3F83C01140063FACC0214086C0B6BE91409B3F90C03B405840F53F1B3F9E405EC0B5C07B3E4CBF7CBEA6BF1DC035C0173FECBFA43F39BFC9BFF9BF6D4086BF05C08740973F874007C0474003405EC01ABE13C0C63F22C0BFBFB93F4FC004C0FCBF31C0803F2EBE11C0E74078BFFDBF6EC0CABFF040DDC0FD3FBBBF8F4047C04940B43B5740D6BEDCBFD53F1FC0AFBF9ABFD0BFF93F59BF2B40FFBE2E406A3FA040933FCB408ABF9340BCBF8240ABBE2D40F33E653F893FB14039BE7A40A440AEC074C09A3F3B4084C076BF77BF7CBF6C409BC063407B4079BF843FD93F58C0DEBF9BC050BEB0BFEEBF36C0DEBD91C08A3F1EC0803F95C0BB3F0FC02140C23F254034BF4F3B30BFB0405DBFE33D2F3F26BF1C402E40663F603ECA3FCF40D23F823F15C01740B8C099BFDBBF543FCF3F16C0F4C0AAC0743F2DC09240A9BFAE3E1A3F353E57C077C0183F38C0FDBE9E3F0A40813FF03FCC3EB5BF2F402BC0A6BE81C0DFC0723E353FB13FB640F1BF9ABF4B409A40DCC0BC3D8BC007C0BD404B40A3BF983FE83EA1C0FABF08413B3E3BBFECBFB4BF0240E43F0D3F3540244047C0533F39C0FCBF48C08D3FCFBF853FF4BF49BFDFC0573FEABF9ABD414096BF9840873F5F3E533F9DC0DA3FDDBF373F1040CABF67BF3740AB3F613E9340A13FB9BF723F6D3FC9BF0BBD9040D0BF92C04A3FF1BF79BD56BF353F593F3740DB3FED3F353F2EC03A408FC0413D644010400B4061400CC0ABBB7940B53D0EC0E63D36C0CEC08FBF684055BF50C085C0DE3EB23FCAC0D7BE1D403C3D1340B0C0FB3F573FB03F09C00D4081C0003F1D403BBF9D408F40B6BF2F401D4095C09ABF8A401D40AFBFC03F4C3F69BDF4BE054027408F40AFBFDCC0CCBF5B4011C07EBF5C40703FAABF13C00FC0A13FA5C0C83FC23FE03F2CC0313DD03FB1BEE13FE33FFBBF9DBCA73E0FC04CC0A83FD33F34C0D8BEA53F9440D63DB0C06740D53F9CBF7E3FB8C0084075C09940483F19C08AC00CC04AC0913F00C10AC0C1BF9CBFA33F0C404D40A740E5BFE8BF3940A9BF4A4069BE424080C07D406FC00CC00A4045C0B63FE4C0F3BF653E2EC07FC07FBF943F3E407E400A41B53F5740524027C03E4085C0D6BEC0BF8C3F82C0FABF9A3FDFC0D23EE9BE27C093C044407FBFA8BF6B40F03E5D400A40CF3FEFBFA13F17C05040F7BFB13F533FB9BEA5405DC04EBF09C00E3EA8BFB3C02440953F3F402EC03540663F8BBFA84008C070C092C09A3E26C05CC05BC007405240DDBD513F83BF56C0AFBD8440A03F273F383F773FCCC022409EBF8C400041A0BF2C3F984048C0A6C0EB3F05C051C09EC09940C4BFDDBFE1C0FA3F06C043C056C0C240454070406FBEFE3EF4BEC4BF5E40A54067C08940F63D26C074BFFABFC73F44C0AE3EAA3FA94009BFBC402C4032C08CC084409FBFB93F41C0D8BCB03FF23F1F404C409BBE1540"> : tensor<20x30xbf16>
    return %0 : tensor<20x30xbf16>
  }
  func.func private @expected() -> tensor<20x30xbf16> {
    %0 = stablehlo.constant dense<1.000000e+00> : tensor<20x30xbf16>
    return %0 : tensor<20x30xbf16>
  }
}
