// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = call @inputs() : () -> tensor<20x30xi8>
    %1 = call @expected() : () -> tensor<20x30xi8>
    %2 = stablehlo.multiply %0, %0 : tensor<20x30xi8>
    %3 = stablehlo.multiply %0, %2 : tensor<20x30xi8>
    %4 = stablehlo.custom_call @check.eq(%3, %1) : (tensor<20x30xi8>, tensor<20x30xi8>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> tensor<20x30xi8> {
    %0 = stablehlo.constant dense<"0x02FF000001FFFD030201FF0004FDFD0300FF000201FEFD00040500010003030003FEFE0200FEFFFD00FEFDFD03FE02010400FDFDFD04FA00FF01FE00FD00FAFF00010301FCFC0201FE06000407FF00FE03FD0003FEFC03FEFEFE06FF01FDFF01FC01000101FEFEFAFF0005FB02F90306020A010301010001040003FE000201FBFFFB01020100FCFBFAF80101FC01FD01020000FD01010302FD020000FDFE00FFFAFFFC01FAFDFFFE04FE0303FF01FE00000101070000FFFCFCFFFE0004FD00030101FF0400FC0306FD0203FDFEFF000500FF000401FFFE00FC020003FC030000FD0105FF0201FB0001FE000000000101FD02020801FDFD010105FFFD000502FF04FE02FD0000F9030000020001FFFEFD0000030101FE0003FFFFFAFBFE02FD00010102030202020200FEFF0003FF010101FDFF02040200FCFCFFFE050000020102FD02FE00FEFFFC07FF03FF020301040003FFFF0001FC000200FEFF0103FFFDFB0002010002020000FF0003FEFE020400010300FE06FEFEFE00FD00010000FDFCFE03010603FD0006FE000002FFFEFE0000FC00FC00FDFF02000600FA05FD00FB03FFFDFB0305FDFFFF00FF00FD040201FB0301FFFD0104FAFF00FEFFFE04FE000503020001010406000400000400010000FFFE01F800FE0101FD00FF0200FEFF010100FE00FF00050301FB0500050300FC00FEFFFBFF00FF01000108040000FE0002FFFBFFFD00FF00FEFF00020200030201000100020403FFFF00FE0200FD050003FE02FE02FF02FE020003FC0200FCFAFE020404FCFCFC00FE0300030406FF0000FB0500FFFFFEFFFD00FDFE0006000200F8000202FF"> : tensor<20x30xi8>
    return %0 : tensor<20x30xi8>
  }
  func.func private @expected() -> tensor<20x30xi8> {
    %0 = stablehlo.constant dense<"0xtensor<20x30xi8>
    return %0 : tensor<20x30xi8>
  }
}
