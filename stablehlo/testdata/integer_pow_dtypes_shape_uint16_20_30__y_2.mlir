// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = call @inputs() : () -> tensor<20x30xui16>
    %1 = call @expected() : () -> tensor<20x30xui16>
    %2 = stablehlo.multiply %0, %0 : tensor<20x30xui16>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x30xui16>, tensor<20x30xui16>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> tensor<20x30xui16> {
    %0 = stablehlo.constant dense<"0xtensor<20x30xui16>
    return %0 : tensor<20x30xui16>
  }
  func.func private @expected() -> tensor<20x30xui16> {
    %0 = stablehlo.constant dense<"0x190000000900040001000400000000001900040001000100090001000100010000001000100001000100000000004000040000001900040009000000100009000000090001000900040000001000040001000000000001001000100009000000010000000100090009001000010024000100190001000000000004001000000001000400000004000900040009001000040009000000010004000100090004000000040001001000000031000000010001000100010000000000040009000000190004000100090004000100040004000900090004000100100000000900040004000000040004000000040019000900000004000400010004000900010001000100040001001000090001000400000001000400190000000100240031000000000000000400240004000000000004003100010009000900240004000900000024000000010000000000010001001000190009000400010019000000000001003100000000000400000001000400090024001900040009000100090024000100100001000000000001000000040010000000100004000400040004000100190019000400010004000400100024003100090000000000090000000100010000000100040000001000100004000100000009000100000000000400000004000100000009000000040004000400010001000100010001000100000000000900010000000400040009001000100001000100000000000400040009000900090000000100010001000400040000000100010009000900040010001000040001000100040001001900010009000400000004000000190004000100010001000400010009000000240010000100010010000100000009000400000000000000100001000400190009000100000010000400010001000000090009000000000024000400010000000000010000000100040001000000100000000000090019000000010000000000040000000000000001000000000009000900190000000000240001000400000001000100090000000100010000000000090001000400040009001900310000001000310000001900190000003100000009000100010019000000040004001900010000000100000009000000040019000400000004000000000009000900040010000000010024003100240001000000010004001000090000000000000001000000000001000900100004000900010001001000040000000900040031000000040000000000240019000900040004000100010010000900040001000100010010000100040001000400000000001000040004001900190000002400040004003100010000000000100001000000010004000400010001000900190000000000000024000400090001000000010004000100040010000100090001000400240001000900010001000100000019001000010004000400000000001900010004000400090001000000010000000000010019006400100019000000090004000000010001000000040004001000090010000400000000000100040000000000000001000100040019000100090000000100000009000100100000000400000019000400000004000000000004001000010004000400000004000900040001000000010009000400010004000900"> : tensor<20x30xui16>
    return %0 : tensor<20x30xui16>
  }
}
