// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = call @inputs() : () -> tensor<20x30xbf16>
    %1 = call @expected() : () -> tensor<20x30xbf16>
    %2 = stablehlo.multiply %0, %0 : tensor<20x30xbf16>
    %3 = stablehlo.multiply %0, %2 : tensor<20x30xbf16>
    %4 = stablehlo.multiply %2, %2 : tensor<20x30xbf16>
    %5 = stablehlo.multiply %3, %4 : tensor<20x30xbf16>
    %6 = stablehlo.multiply %4, %4 : tensor<20x30xbf16>
    %7 = stablehlo.multiply %5, %6 : tensor<20x30xbf16>
    %8 = stablehlo.multiply %6, %6 : tensor<20x30xbf16>
    %9 = stablehlo.multiply %7, %8 : tensor<20x30xbf16>
    %10 = stablehlo.multiply %8, %8 : tensor<20x30xbf16>
    %11 = stablehlo.multiply %9, %10 : tensor<20x30xbf16>
    %12 = stablehlo.multiply %10, %10 : tensor<20x30xbf16>
    %13 = stablehlo.multiply %11, %12 : tensor<20x30xbf16>
    %14 = stablehlo.constant dense<1.000000e+00> : tensor<bf16>
    %15 = stablehlo.broadcast_in_dim %14, dims = [] : (tensor<bf16>) -> tensor<20x30xbf16>
    %16 = stablehlo.divide %15, %13 : tensor<20x30xbf16>
    %17 = stablehlo.custom_call @check.eq(%16, %1) : (tensor<20x30xbf16>, tensor<20x30xbf16>) -> tensor<i1>
    return %17 : tensor<i1>
  }
  func.func private @inputs() -> tensor<20x30xbf16> {
    %0 = stablehlo.constant dense<"0xtensor<20x30xbf16>
    return %0 : tensor<20x30xbf16>
  }
  func.func private @expected() -> tensor<20x30xbf16> {
    %0 = stablehlo.constant dense<"0xtensor<20x30xbf16>
    return %0 : tensor<20x30xbf16>
  }
}
