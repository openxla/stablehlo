// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = call @inputs() : () -> tensor<20x30xui32>
    %1 = call @expected() : () -> tensor<20x30xui32>
    %2 = call @integer_pow(%0) : (tensor<20x30xui32>) -> tensor<20x30xui32>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x30xui32>, tensor<20x30xui32>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> tensor<20x30xui32> {
    %0 = stablehlo.constant dense<"0xtensor<20x30xui32>
    return %0 : tensor<20x30xui32>
  }
  func.func private @expected() -> tensor<20x30xui32> {
    %0 = stablehlo.constant dense<"0xtensor<20x30xui32>
    return %0 : tensor<20x30xui32>
  }
  func.func private @integer_pow(%arg0: tensor<20x30xui32>) -> tensor<20x30xui32> {
    %0 = stablehlo.multiply %arg0, %arg0 : tensor<20x30xui32>
    %1 = stablehlo.multiply %arg0, %0 : tensor<20x30xui32>
    %2 = stablehlo.multiply %0, %0 : tensor<20x30xui32>
    %3 = stablehlo.multiply %1, %2 : tensor<20x30xui32>
    %4 = stablehlo.multiply %2, %2 : tensor<20x30xui32>
    %5 = stablehlo.multiply %3, %4 : tensor<20x30xui32>
    %6 = stablehlo.multiply %4, %4 : tensor<20x30xui32>
    %7 = stablehlo.multiply %5, %6 : tensor<20x30xui32>
    %8 = stablehlo.multiply %6, %6 : tensor<20x30xui32>
    %9 = stablehlo.multiply %7, %8 : tensor<20x30xui32>
    %10 = stablehlo.multiply %8, %8 : tensor<20x30xui32>
    %11 = stablehlo.multiply %9, %10 : tensor<20x30xui32>
    return %11 : tensor<20x30xui32>
  }
}
