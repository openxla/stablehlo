// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xi8>, tensor<20x20xi8>)
    %1 = call @expected() : () -> tensor<20x20xi8>
    %2 = stablehlo.minimum %0#0, %0#1 : tensor<20x20xi8>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x20xi8>, tensor<20x20xi8>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xi8>, tensor<20x20xi8>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xi8>
    %1 = stablehlo.constant dense<"0xtensor<20x20xi8>
    return %0, %1 : tensor<20x20xi8>, tensor<20x20xi8>
  }
  func.func private @expected() -> tensor<20x20xi8> {
    %0 = stablehlo.constant dense<"0xFEFF0000FE00010000FD00FEFEFF01FEFFFCFDFFFDFEFDFDFFFB0100FCFEFF01FA0200FFFC00FF00FB00FFFD02FEFB02FEFCFE0101FFFDFEFE00FFFC00FDFCFDFCFF01000000FEFFFF03FD00FF00000000FFFCFFFD000000FBFEFBFFFC01FBFC02FD00FFFDFEFDFDFCFEFC00FE00FFFF0000FD0000FAFE00FEFCFF00FCFD02FE02FDFBFEFE0300FD02020000FBFDFF0000FCFFFE00FDFFFD01FE01FE00FF00FEFE01FD01FAFAFDFD00FBFF00F9FDFDFFFEFCFE000000FAFF0000FDFB01FDFF02FEFF00FCFDFE00FEFEFF0200FF02FEFDFD00FEFFFD00FDFE00FB000001FFFFFCFE01FD01FEFD000001FFFFFFF900000100FE00FEFF00FFFEFFFEFCFFFAFD00FC02FFFCFCFFFEFF00FF0000FD0000FDFE00FFFEFC00FDFCFFFF00FC00FEFF00F9FFFBFC010000FF010100FF0000FAFDFE00FEFEFFFC02FA0402FDFEFAFCFE00FFFEFCFF00FD00000000FD01FCFB00FF00FD01FE01FEFEFF000000FCFFFCFDF903FF00FEFFFD00FEFB000101000100FEFB000000FF0000FDFB00FE01FD0000FDFD0001FFFFFFFFFBFDFFFE00F901010003"> : tensor<20x20xi8>
    return %0 : tensor<20x20xi8>
  }
}
