// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xui8>, tensor<20x20xui8>)
    %1 = call @expected() : () -> tensor<20x20xui8>
    %2 = stablehlo.multiply %0#0, %0#1 : tensor<20x20xui8>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x20xui8>, tensor<20x20xui8>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xui8>, tensor<20x20xui8>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xui8>
    %1 = stablehlo.constant dense<"0xtensor<20x20xui8>
    return %0, %1 : tensor<20x20xui8>, tensor<20x20xui8>
  }
  func.func private @expected() -> tensor<20x20xui8> {
    %0 = stablehlo.constant dense<"0x0000040009000600060004010512000000000005030401001204080300022A000306030000001402000500000F04040010011200000000000300000904092305000000000000000000000A090008000400091E000203060001010000000C00000000040008000002090C0000000302100602000000090C0010090A000000000F00020A00080605000800000200030104000202000A0318020006000F0004000C12060004000C01020C02000004031500060900010603030000050100000000060009090500000000000002081B01050009020A001C050003000202080115000000000403000000000E230600230000100000010004050401000000000108000400040009000018040000020104120504050600000003030002040008000401060002030C030004000F09000602000105000003000000190A0000000100060F10140000040300060801000F020001000802000A0500000000000200000000000C0A03000209040000050303020000000300000300000002060000000C03000020000004000801000002010C0000020004"> : tensor<20x20xui8>
    return %0 : tensor<20x20xui8>
  }
}
