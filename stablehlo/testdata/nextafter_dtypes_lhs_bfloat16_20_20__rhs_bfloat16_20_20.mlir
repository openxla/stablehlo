// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xbf16>, tensor<20x20xbf16>)
    %1 = call @expected() : () -> tensor<20x20xbf16>
    %2 = stablehlo.bitcast_convert %0#0 : (tensor<20x20xbf16>) -> tensor<20x20xi16>
    %3 = stablehlo.bitcast_convert %0#1 : (tensor<20x20xbf16>) -> tensor<20x20xi16>
    %4 = stablehlo.compare  NE, %0#0, %0#0 : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xi1>
    %5 = stablehlo.compare  NE, %0#1, %0#1 : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xi1>
    %6 = stablehlo.or %4, %5 : tensor<20x20xi1>
    %7 = stablehlo.constant dense<0x7FC0> : tensor<20x20xbf16>
    %8 = stablehlo.bitcast_convert %7 : (tensor<20x20xbf16>) -> tensor<20x20xi16>
    %9 = stablehlo.constant dense<-32768> : tensor<20x20xi16>
    %10 = stablehlo.constant dense<32767> : tensor<20x20xi16>
    %11 = stablehlo.and %2, %10 : tensor<20x20xi16>
    %12 = stablehlo.and %3, %10 : tensor<20x20xi16>
    %13 = stablehlo.compare  EQ, %0#0, %0#1 : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<20x20xi1>
    %14 = stablehlo.constant dense<0> : tensor<20x20xi16>
    %15 = stablehlo.compare  EQ, %11, %14 : (tensor<20x20xi16>, tensor<20x20xi16>) -> tensor<20x20xi1>
    %16 = stablehlo.compare  EQ, %12, %14 : (tensor<20x20xi16>, tensor<20x20xi16>) -> tensor<20x20xi1>
    %17 = stablehlo.and %2, %9 : tensor<20x20xi16>
    %18 = stablehlo.and %3, %9 : tensor<20x20xi16>
    %19 = stablehlo.constant dense<1> : tensor<20x20xi16>
    %20 = stablehlo.or %18, %19 : tensor<20x20xi16>
    %21 = stablehlo.compare  NE, %17, %18 : (tensor<20x20xi16>, tensor<20x20xi16>) -> tensor<20x20xi1>
    %22 = stablehlo.compare  GT, %11, %12 : (tensor<20x20xi16>, tensor<20x20xi16>) -> tensor<20x20xi1>
    %23 = stablehlo.or %22, %21 : tensor<20x20xi1>
    %24 = stablehlo.constant dense<-1> : tensor<20x20xi16>
    %25 = stablehlo.select %23, %24, %19 : tensor<20x20xi1>, tensor<20x20xi16>
    %26 = stablehlo.add %2, %25 : tensor<20x20xi16>
    %27 = stablehlo.select %16, %3, %20 : tensor<20x20xi1>, tensor<20x20xi16>
    %28 = stablehlo.select %15, %27, %26 : tensor<20x20xi1>, tensor<20x20xi16>
    %29 = stablehlo.select %13, %3, %28 : tensor<20x20xi1>, tensor<20x20xi16>
    %30 = stablehlo.select %6, %8, %29 : tensor<20x20xi1>, tensor<20x20xi16>
    %31 = stablehlo.bitcast_convert %30 : (tensor<20x20xi16>) -> tensor<20x20xbf16>
    %32 = stablehlo.custom_call @check.eq(%31, %1) : (tensor<20x20xbf16>, tensor<20x20xbf16>) -> tensor<i1>
    return %32 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xbf16>, tensor<20x20xbf16>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xbf16>
    %1 = stablehlo.constant dense<"0xtensor<20x20xbf16>
    return %0, %1 : tensor<20x20xbf16>, tensor<20x20xbf16>
  }
  func.func private @expected() -> tensor<20x20xbf16> {
    %0 = stablehlo.constant dense<"0xtensor<20x20xbf16>
    return %0 : tensor<20x20xbf16>
  }
}

