// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xf16>, tensor<20x20xf16>)
    %1 = call @expected() : () -> tensor<20x20xf16>
    %2 = stablehlo.bitcast_convert %0#0 : (tensor<20x20xf16>) -> tensor<20x20xi16>
    %3 = stablehlo.bitcast_convert %0#1 : (tensor<20x20xf16>) -> tensor<20x20xi16>
    %4 = stablehlo.compare  NE, %0#0, %0#0 : (tensor<20x20xf16>, tensor<20x20xf16>) -> tensor<20x20xi1>
    %5 = stablehlo.compare  NE, %0#1, %0#1 : (tensor<20x20xf16>, tensor<20x20xf16>) -> tensor<20x20xi1>
    %6 = stablehlo.or %4, %5 : tensor<20x20xi1>
    %7 = stablehlo.constant dense<0x7E00> : tensor<20x20xf16>
    %8 = stablehlo.bitcast_convert %7 : (tensor<20x20xf16>) -> tensor<20x20xi16>
    %9 = stablehlo.constant dense<-32768> : tensor<20x20xi16>
    %10 = stablehlo.constant dense<32767> : tensor<20x20xi16>
    %11 = stablehlo.and %2, %10 : tensor<20x20xi16>
    %12 = stablehlo.and %3, %10 : tensor<20x20xi16>
    %13 = stablehlo.compare  EQ, %0#0, %0#1 : (tensor<20x20xf16>, tensor<20x20xf16>) -> tensor<20x20xi1>
    %14 = stablehlo.constant dense<0> : tensor<20x20xi16>
    %15 = stablehlo.compare  EQ, %11, %14 : (tensor<20x20xi16>, tensor<20x20xi16>) -> tensor<20x20xi1>
    %16 = stablehlo.compare  EQ, %12, %14 : (tensor<20x20xi16>, tensor<20x20xi16>) -> tensor<20x20xi1>
    %17 = stablehlo.and %2, %9 : tensor<20x20xi16>
    %18 = stablehlo.and %3, %9 : tensor<20x20xi16>
    %19 = stablehlo.constant dense<1> : tensor<20x20xi16>
    %20 = stablehlo.or %18, %19 : tensor<20x20xi16>
    %21 = stablehlo.compare  NE, %17, %18 : (tensor<20x20xi16>, tensor<20x20xi16>) -> tensor<20x20xi1>
    %22 = stablehlo.compare  GT, %11, %12 : (tensor<20x20xi16>, tensor<20x20xi16>) -> tensor<20x20xi1>
    %23 = stablehlo.or %22, %21 : tensor<20x20xi1>
    %24 = stablehlo.constant dense<-1> : tensor<20x20xi16>
    %25 = stablehlo.select %23, %24, %19 : tensor<20x20xi1>, tensor<20x20xi16>
    %26 = stablehlo.add %2, %25 : tensor<20x20xi16>
    %27 = stablehlo.select %16, %3, %20 : tensor<20x20xi1>, tensor<20x20xi16>
    %28 = stablehlo.select %15, %27, %26 : tensor<20x20xi1>, tensor<20x20xi16>
    %29 = stablehlo.select %13, %3, %28 : tensor<20x20xi1>, tensor<20x20xi16>
    %30 = stablehlo.select %6, %8, %29 : tensor<20x20xi1>, tensor<20x20xi16>
    %31 = stablehlo.bitcast_convert %30 : (tensor<20x20xi16>) -> tensor<20x20xf16>
    %32 = stablehlo.custom_call @check.eq(%31, %1) : (tensor<20x20xf16>, tensor<20x20xf16>) -> tensor<i1>
    return %32 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xf16>, tensor<20x20xf16>) {
    %0 = stablehlo.constant dense<"0xC446AE3FDD3471C0EBBC07B8D54708A52C3FFD31EB372FC32FC1083A67ABF7B6CBB67B3E89BE4142F0C098ABF743BFC28A4579443EC4B745673E363C8A2E5A43AC38CDBD6344983CBF3A76C0B9B946451145E7C47EC23A4605C1CDB92745CE3E7441B43F58C148C47F40203C54B8EABD5646FE422242D7C3B9B8B4BD81BC934058B98DC370C49D3C49BD9235A8C46FBC573D00B8A8C4F1C01BC00A4069C132346DA955C1DAA59AC0DA437742F2BB12C102C39F3779429CBC354046C285C2D9442DC0CA3B083E8DB703BD073E9D44AEC04E44E33CC1BEA5C499C5D7C32D45B532FA3CFB3DD9BD0EC159B08E4600C01ABC833617B675421DB9AC3E90448D42984045B959BD35C30342AD3C20C293AF503C8DC2623A73AD9ABFA93CC0B6C2C66944A3C3043F58B96EC490402AC13B3E6E40933F0FC62645FC3CB0C36EC83FC6F5BB4D3C3F44CCC16EC5594421B8F0BFAABE7F4518C33044AE3D0F40B7C1EF38F4388AC8623C0EB6A8C32135E0BC0CBE3835431EEBC2D24705C11C48D1C21AC0A03851C159C60D45FBC21C412E4278C2F6B889B9B242363D0BC20E417B446DBE492B0C406DBFACC175BE2BC17FBD1B340341E84316C26E39C6371141A4B4AD3BD2426042863F10C36A3E50B6D6BBB6BC6DB26AC11741FBC0D238033285457E40CABCB73E27436744343FF244DA41FB401DC23D30ED43ACC1FF3DAD455FBC19BBDD346839CE4124C344437ABD4DBD5E44DCC491BD983D02361C41584010471143ACC265B5D9417DC5B9BA1DC4D83FF63E4E406D3E6A3C73B5B044D53C09C57643D6BE383EEC3436BACAC388BB03458E39A5C18628CBC3C2C0A6A400BE1BC0543990C2ADB55B39F5C1BBBC04421740733B4CBE2743E8BB59C46E3059BC703BED3764B83EC6AC3436BE503B8A3E853669C160C5B936CF3F9DB61D47464246C2613D0BB44D2DE63C7CAA1AC49641CA417FC11DC2D2C5F33C8B3D8CBFDE3D00BE89C0B0C127BC6F3BE4C0A74028B6F5419144B4C3B144EA27953D8FC211B8DD3C2CB4BA3839455C3E85C6CBC662C28541A43F29408543CCBDA3BF9F448734C23DDF37C4B90142253F38B48A44253D07401C412C3C3B44414183C11D9987B5E9B6903815C2"> : tensor<20x20xf16>
    %1 = stablehlo.constant dense<"0xtensor<20x20xf16>
    return %0, %1 : tensor<20x20xf16>, tensor<20x20xf16>
  }
  func.func private @expected() -> tensor<20x20xf16> {
    %0 = stablehlo.constant dense<"0xC346AF3FDE3470C0EABC06B8D44709A52D3FFE31EA372EC32EC1093A68ABF8B6CCB67A3E8ABE4042F1C099ABF643BEC2894578443DC4B645663E353C8B2E5943AB38CCBD6244973CC03A75C0B8B945451045E6C47FC2394604C1CEB92645CF3E7541B33F57C149C47E401F3C53B8E9BD5546FF422142D6C3BAB8B3BD82BC924059B98CC36FC49C3C4ABD9135A7C470BC563DFFB7A7C4F0C01AC00B406AC133346CA954C1DBA599C0D9437842F1BB11C101C3A03778429BBC344045C286C2D8442CC0C93B093E8CB702BD083E9C44ADC04D44E23CC2BEA4C498C5D6C32C45B632FB3CFC3DD8BD0FC158B08D46FFBF1BBC823616B674421CB9AD3E8F448C42994044B958BD36C30242AC3C1FC292AF4F3C8CC2613A74AD99BFAA3CC1B6C1C66A44A2C3053F57B96DC48F4029C13A3E6D40923F0EC62545FD3CAFC36DC83EC6F6BB4C3C3E44CBC16DC5584420B8EFBFA9BE7E4517C32F44AF3D0E40B6C1EE38F33889C8633C0FB6A7C32235DFBC0DBE3935421EEAC2D14704C11B48D0C219C09F3850C158C60C45FAC21B412D4279C2F5B888B9B142353D0CC20D417C446CBE482B0B406EBFABC174BE2AC17EBD1C340241E74315C26D39C5371041A5B4AE3BD1425F42853F11C36B3E51B6D7BBB5BC6EB26BC11641FAC0D338023284457D40CBBCB63E26436844333FF144D941FA401CC23C30EC43ABC1FE3DAC4560BC18BBDC346939CD4123C343437BBD4CBD5D44DBC490BD993D01361D4157400F471043ABC266B5D8417CC5B8BA1CC4D73FF53E4D406C3E6B3C74B5AF44D63C08C57543D5BE393EEB3437BAC9C389BB02458D39A4C18728CAC3C1C0A5A401BE1CC053398FC2ACB55C39F4C1BABC03421640723B4BBE2643E9BB58C46F3058BC6F3BEE3765B83DC6AD3437BE4F3B893E863668C15FC5BA36CE3F9CB61C47454245C2623D0CB44C2DE53C7BAA19C49541CB4180C11CC2D1C5F23C8A3D8BBFDF3DFFBD88C0AFC128BC6E3BE3C0A64027B6F6419044B3C3B044E927943D8EC210B8DC3C2BB4B93838455D3E84C6CAC661C28441A33F28408443CBBDA4BF9E448834C13DDE37C5B90242263F37B48944243D06401B412D3C3A44404182C11E9986B5E8B68F3816C2"> : tensor<20x20xf16>
    return %0 : tensor<20x20xf16>
  }
}

