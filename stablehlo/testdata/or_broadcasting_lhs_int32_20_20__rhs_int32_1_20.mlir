// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xi32>, tensor<1x20xi32>)
    %1 = call @expected() : () -> tensor<20x20xi32>
    %2 = stablehlo.broadcast_in_dim %0#1, dims = [0, 1] : (tensor<1x20xi32>) -> tensor<20x20xi32>
    %3 = stablehlo.or %0#0, %2 : tensor<20x20xi32>
    %4 = stablehlo.custom_call @check.eq(%3, %1) : (tensor<20x20xi32>, tensor<20x20xi32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xi32>, tensor<1x20xi32>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xi32>
    %1 = stablehlo.constant dense<[[-3, -1, 0, -2, -1, 0, 3, 3, -1, 1, -1, 1, 4, -3, -2, 1, 0, -3, -2, 0]]> : tensor<1x20xi32>
    return %0, %1 : tensor<20x20xi32>, tensor<1x20xi32>
  }
  func.func private @expected() -> tensor<20x20xi32> {
    %0 = stablehlo.constant dense<"0xFFFFFFFFFFFFFFFF02000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF01000000FFFFFFFFFFFFFFFF04000000FDFFFFFFFFFFFFFFFFFFFFFF01000000FDFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFF03000000FFFFFFFFFFFFFFFFFFFFFFFF0100000006000000FFFFFFFFFFFFFFFFFDFFFFFF00000000FDFFFFFFFEFFFFFF03000000FDFFFFFFFFFFFFFF01000000FEFFFFFFFFFFFFFF050000000300000003000000FFFFFFFF01000000FFFFFFFF05000000FEFFFFFFFDFFFFFFFEFFFFFF0100000000000000FDFFFFFFFEFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFF9FFFFFF03000000FFFFFFFFFFFFFFFFFBFFFFFFFFFFFFFF0300000004000000FDFFFFFFFEFFFFFFFDFFFFFF00000000FDFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF000000000300000003000000FFFFFFFF01000000FFFFFFFF0500000006000000FDFFFFFFFFFFFFFFFFFFFFFF04000000FFFFFFFFFEFFFFFFFCFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFF03000000FFFFFFFFFFFFFFFF01000000FFFFFFFF0100000004000000FFFFFFFFFEFFFFFFFBFFFFFF04000000FFFFFFFFFEFFFFFF00000000FDFFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF03000000FFFFFFFF01000000FFFFFFFF0100000005000000FDFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFF8FFFFFFFFFFFFFFFFFFFFFF04000000FFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF03000000FFFFFFFF01000000FFFFFFFF0300000005000000FDFFFFFFFFFFFFFF0100000002000000FFFFFFFFFFFFFFFF01000000FDFFFFFFFFFFFFFF02000000FEFFFFFFFFFFFFFFFFFFFFFFFBFFFFFF03000000FFFFFFFF01000000FFFFFFFFFFFFFFFF06000000FFFFFFFFFEFFFFFFFDFFFFFF01000000FDFFFFFFFEFFFFFF00000000FDFFFFFFFFFFFFFF04000000FEFFFFFFFFFFFFFFFDFFFFFF0300000003000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF04000000FDFFFFFFFEFFFFFFFFFFFFFF02000000FDFFFFFFFFFFFFFF03000000FDFFFFFFFFFFFFFF05000000FEFFFFFFFFFFFFFFFDFFFFFFFFFFFFFF03000000FFFFFFFFFFFFFFFFFFFFFFFF0100000007000000FDFFFFFFFFFFFFFF0100000002000000FDFFFFFFFFFFFFFF00000000FDFFFFFFFFFFFFFF02000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF07000000FFFFFFFF03000000FFFFFFFFFDFFFFFF05000000FFFFFFFFFFFFFFFF01000000FCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFFFFFFFFFFFFFF03000000FEFFFFFFFFFFFFFF02000000FFFFFFFF03000000FFFFFFFFFFFFFFFFFFFFFFFF0700000004000000FDFFFFFFFEFFFFFFFDFFFFFF02000000FFFFFFFFFFFFFFFF06000000FDFFFFFFFFFFFFFF04000000FFFFFFFFFFFFFFFFF7FFFFFF07000000FFFFFFFFFFFFFFFF03000000FFFFFFFF0100000007000000FDFFFFFFFEFFFFFF01000000FFFFFFFFFFFFFFFFFEFFFFFF01000000FDFFFFFFFFFFFFFF00000000FEFFFFFFFFFFFFFF00000000FBFFFFFFFFFFFFFFFFFFFFFF01000000FFFFFFFF01000000FDFFFFFFFFFFFFFFFEFFFFFF0100000001000000FDFFFFFFFEFFFFFF05000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFF03000000FFFFFFFF0300000004000000FFFFFFFFFEFFFFFF0100000001000000FFFFFFFFFEFFFFFF03000000FFFFFFFFFFFFFFFF01000000FFFFFFFFFFFFFFFFFEFFFFFF0300000003000000FFFFFFFF01000000FFFFFFFF01000000FDFFFFFFFFFFFFFFFEFFFFFF01000000FCFFFFFFFFFFFFFFFEFFFFFF01000000FDFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFF0100000003000000FFFFFFFFFFFFFFFFFBFFFFFFFFFFFFFF05000000FEFFFFFFFFFFFFFFFFFFFFFF03000000FFFFFFFFFFFFFFFFFEFFFFFF02000000FDFFFFFFFFFFFFFF01000000FFFFFFFFFFFFFFFF000000000300000003000000FFFFFFFF03000000FFFFFFFF01000000FDFFFFFFFDFFFFFFFEFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFDFFFFFFFDFFFFFFFFFFFFFFFCFFFFFFFEFFFFFFFFFFFFFFFDFFFFFF0B00000003000000FFFFFFFFFFFFFFFFFFFFFFFF01000000FFFFFFFFFFFFFFFFFFFFFFFF0300000003000000FDFFFFFFFFFFFFFF02000000"> : tensor<20x20xi32>
    return %0 : tensor<20x20xi32>
  }
}
