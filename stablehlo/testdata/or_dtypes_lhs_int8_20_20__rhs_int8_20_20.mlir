// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xi8>, tensor<20x20xi8>)
    %1 = call @expected() : () -> tensor<20x20xi8>
    %2 = stablehlo.or %0#0, %0#1 : tensor<20x20xi8>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x20xi8>, tensor<20x20xi8>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xi8>, tensor<20x20xi8>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xi8>
    %1 = stablehlo.constant dense<"0xtensor<20x20xi8>
    return %0, %1 : tensor<20x20xi8>, tensor<20x20xi8>
  }
  func.func private @expected() -> tensor<20x20xi8> {
    %0 = stablehlo.constant dense<"0x00FFFBFF00FF0103FF01FDFFFFFC04FF01FDFBFFFDFFFB05FFFFFFFF000200FDFDFF02FE03FF0105FE03FFFDFD05FFFF01FFFEFDFFFC04FEFFFFFF03FDFC03FFFFFF06FEFE0103FF01FE04FFF9FF02FE02FFFDFB0502FFFDFF00FFFEFFFF020300FBFFFF0302FD0206FEFFFF010102000105FF04FE030305FFFEFF020102FF000300FFFC0305FEFDFCFF06FFFFFF01FFFD00FDFF01FF01FBFDFDFE0503FFFFFFFE02F9FF00FFFF07FF0202FB0401FDFFFDFFFFFFFFFFFF03FD00FFFEFFFF00FFFF01FFFCFCFF030103FF0100FDFEFFFFFFFD02FFFFFFFE02FD03FFFD040000FFFF03FF060205FB03FDFFFFFDFEFF03FF05FFFDFF00FF00FF00FBFD0003FFFFFEFEFF01FCFD03FEFB02FB04FDFCFD04FF07FFFFFF03FA010303FFFFFFFF05FF05FBFFFBFA06FFFCFAFD0007FEFF000302FFFE0303FBFFFF01FD0704FD0000FFFD04FF05FF01FFFFFF03FFFFFEFFFB03FD09FFFFFDFEFF030402FFFFFF03FFFFFFFF05FD0204FBFDFE050506FDFDFFFF04FF0303FFFF01FDFFFFFDFFFF02FF02FC02FCFBFF0304FF0302FFFFFBFEFFFFFF"> : tensor<20x20xi8>
    return %0 : tensor<20x20xi8>
  }
}
