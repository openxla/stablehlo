// RUN: stablehlo-translate --interpret -split-input-file %s

module attributes {jax.uses_shape_polymorphism = true} {
  func.func @main() -> tensor<20x20xf32> {
    %cst = stablehlo.constant dense<"0xtensor<20x20xf32>
    %cst_0 = stablehlo.constant dense<"0xtensor<20x20xf32>
    %0 = stablehlo.uniform_quantize %cst : (tensor<20x20xf32>) -> tensor<20x20x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>
    %1 = stablehlo.exponential_minus_one %0 : (tensor<20x20x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>) -> tensor<20x20x!quant.uniform<i8:f32, 0.0067383046243705003:-128>>
    %2 = stablehlo.uniform_dequantize %1 : (tensor<20x20x!quant.uniform<i8:f32, 0.0067383046243705003:-128>>) -> tensor<20x20xf32>
    %3 = stablehlo.custom_call @check.eq(%cst_0, %2) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<i1>
    return %2 : tensor<20x20xf32>
  }
}
