// RUN: stablehlo-translate --interpret -split-input-file %s

module attributes {jax.uses_shape_polymorphism = true} {
  func.func @main() -> tensor<20x30xf32> {
    %cst = stablehlo.constant dense<"0xtensor<20x30xf32>
    %cst_0 = stablehlo.constant dense<"0xtensor<20x30xf32>
    %0 = stablehlo.uniform_quantize %cst : (tensor<20x30xf32>) -> tensor<20x30x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>
    %1 = stablehlo.multiply %0, %0 : (tensor<20x30x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>, tensor<20x30x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>) -> tensor<20x30x!quant.uniform<i8:f32, 0.00392152795604631:-128>>
    %2 = stablehlo.uniform_dequantize %1 : (tensor<20x30x!quant.uniform<i8:f32, 0.00392152795604631:-128>>) -> tensor<20x30xf32>
    %3 = stablehlo.custom_call @check.eq(%cst_0, %2) : (tensor<20x30xf32>, tensor<20x30xf32>) -> tensor<i1>
    return %2 : tensor<20x30xf32>
  }
}
