// RUN: stablehlo-translate --interpret -split-input-file %s

module attributes {jax.uses_shape_polymorphism = true} {
  func.func @main() -> tensor<20x30xf32> {
    %cst = stablehlo.constant dense<"0xtensor<20x30xf32>
    %cst_0 = stablehlo.constant dense<"0x0000000000000000FD94153F000000000000000000000000FAFE7F3FFAFE7F3FFAFE7F3F0000000000000000000000000000000000000000FAFE7F3F0000000000000000FAFE7F3FFAFE7F3FFCBFC03E00000000FAFE7F3FFAFE7F3FFAFE7F3F00000000FAFE7F3F0000000000000000FAFE7F3FFAFE7F3F00000000FAFE7F3F00000000FAFE7F3F00000000FAFE7F3F00000000FAFE7F3FFAFE7F3FFBCF503D00000000FBD4553F00000000FAFE7F3F0000000000000000FAFE7F3F00000000FAFE7F3F0000000000000000FAFE7F3F000000000000000000000000FAFE7F3F00000000FD7F003C0000000000000000000000000000000000000000FAFE7F3F00000000FAFE7F3FFAFE7F3FFAFE7F3F0000000000000000000000000000000000000000FAFE7F3FFAFE7F3F00000000000000000000000000000000FAFE7F3FFAFE7F3FFAFE7F3FFD7F803BFAFE7F3F000000000000000000000000FAFE7F3F0000000000000000FAFE7F3FFAFE7F3F0000000000000000FAFE7F3F00000000FAFE7F3F00000000FAFE7F3F0000000000000000FAFE7F3FFAFE7F3FFAFE7F3FFAFE7F3FFAFE7F3F000000000000000000000000FAFE7F3FFAFE7F3F00000000000000000000000000000000FAFE7F3FFAFE7F3F00000000FAFE7F3FFAFE7F3F000000000000000000000000FD7F003D00000000000000000000000000000000000000000000000000000000FAFE7F3F00000000000000000000000000000000FAFE7F3FFD7F803CFAFE7F3FFBDF603DFAFE7F3F00000000FAFE7F3FFAFE7F3F000000000000000000000000FAFE7F3FFCAC2D3FFAFE7F3F00000000FAFE7F3F0000000000000000FD7F803CFBC7C83DFAFE7F3FFAFE7F3F00000000FAEF703D00000000FAFE7F3FFAFE7F3FFAFE7F3FFAFE7F3F00000000FCB8393FFCBFC03C0000000000000000FCB5B63EFAFE7F3FFAFE7F3FFAFE7F3FFAFE7F3F00000000FD8F903DFC95963EFAFE7F3F0000000000000000FAFE7F3F00000000FAFE7F3F00000000000000000000000000000000FAFE7F3F000000000000000000000000000000000000000000000000FCA7283E000000000000000000000000FAFE7F3FFAFE7F3F000000000000000000000000FAFE7F3FFAFE7F3F00000000FAFE7F3FFAFE7F3F00000000FBCFD03DFAFE7F3F00000000FCAF303D000000000000000000000000FBC1C23E00000000FAFE7F3F0000000000000000FAFE7F3FFAFE7F3F00000000FD7F803B00000000FAFE7F3F000000000000000000000000FAFE7F3F00000000FCBF403CFAFE7F3FFAFE7F3F000000000000000000000000FAFE7F3F0000000000000000FAF7F83D000000000000000000000000FAFE7F3F0000000000000000000000000000000000000000FAFE7F3FFD8D0E3F00000000FAFE7F3FFAFE7F3F00000000FAFE7F3FFAFE7F3FFAFE7F3FFAFE7F3FFAFE7F3F00000000FCB0313F0000000000000000FAFE7F3F00000000FAFE7F3F0000000000000000FAFE7F3F00000000FAFE7F3F00000000FAFE7F3F00000000FAFE7F3FFAFE7F3F0000000000000000000000000000000000000000FAFE7F3FFAFE7F3FFAFE7F3F000000000000000000000000FAFE7F3FFAFE7F3F00000000000000000000000000000000000000000000000000000000FAFE7F3F00000000FCBF403DFAFE7F3F0000000000000000000000000000000000000000FD898A3E00000000FAFE7F3FFAFE7F3FFCBFC03C0000000000000000FAFE7F3F00000000FAFE7F3FFCB0313FFAFE7F3FFD83043E00000000FAFE7F3F00000000FAFE7F3F00000000000000000000000000000000FCA7A83E00000000FAFE7F3FFAFE7F3F000000000000000000000000FAFE7F3F00000000FAFE7F3FFBDF603D00000000FD7F803DFAFE7F3FFAFE7F3FFAFE7F3FFD7F803B000000000000000000000000FAFE7F3FFAFE7F3FFAFE7F3F0000000000000000FAFE7F3F000000000000000000000000FCAA2B3F0000000000000000FD7F803B0000000000000000FAFE7F3F0000000000000000FAFE7F3FFAFE7F3F00000000FBCF503DFAFE7F3F00000000FBE7E83D00000000FAFE7F3F0000000000000000FBD5D63E00000000FAFE7F3FFCBF403F00000000FAFE7F3F000000000000000000000000000000000000000000000000FCA1A23EFAFE7F3F000000000000000000000000000000000000000000000000FAFE7F3FFAFE7F3F00000000FAFE7F3FFBDFE03CFAFE7F3F00000000FAFE7F3F00000000FAFE7F3F00000000FAFE7F3FFD87883D0000000000000000FAFE7F3F0000000000000000000000000000000000000000FCB3343EFAFE7F3FFAFE7F3F00000000FAFE7F3F000000000000000000000000FAFE7F3FFAFE7F3F0000000000000000FAFE7F3F00000000FAFE7F3F0000000000000000FAFE7F3FFC9FA03C00000000FAFE7F3FFAFE7F3FFAFE7F3F00000000FC9FA03CFAFE7F3F0000000000000000FAFE7F3F00000000FAFE7F3F0000000000000000000000000000000000000000FAFE7F3F0000000000000000FAFE7F3FFAFE7F3FFAFE7F3F00000000FD81823EFCB3343EFAFE7F3F00000000FAFE7F3FFAFE7F3F00000000FC9F203EFAFE7F3F00000000FAFE7F3FFAFE7F3F00000000000000000000000000000000FAFE7F3F00000000FAFE7F3F000000000000000000000000FAFE7F3FFAFE7F3FFCA3243FFAFE7F3FFD7F803CFAFE7F3F00000000FAFE7F3F00000000FC9FA03C00000000FAFE7F3FFAFE7F3F0000000000000000000000000000000000000000FAFE7F3FFAFE7F3FFAFE7F3FFAFE7F3F0000000000000000FAFE7F3F0000000000000000FAFE7F3F000000000000000000000000000000000000000000000000FAFE7F3FFAFE7F3F000000000000000000000000FAEF703DFAFE7F3F0000000000000000000000000000000000000000FAFE7F3FFAFE7F3F0000000000000000FCB0313F0000000000000000FAFE7F3FFAFE7F3FFAFE7F3FFBDB5C3E00000000FAFE7F3F00000000000000000000000000000000FD7F803BFAFE7F3F00000000FAFE7F3FFAFE7F3FFAFB7C3E000000000000000000000000FAFE7F3FFAFE7F3F0000000000000000FD87083E00000000FAFE7F3FFAFE7F3FFAFE7F3F00000000FAFE7F3F00000000FAFE7F3FFAFE7F3F00000000FAFE7F3F00000000FAFE7F3F0000000000000000FAFE7F3F0000000000000000FD7F803C0000000000000000FCBF403DFAFE7F3FFAFE7F3FFAFE7F3FFAFE7F3F00000000FAFE7F3F00000000FAFE7F3F00000000FAFE7F3F000000000000000000000000FD8D0E3F0000000000000000"> : tensor<20x30xf32>
    %0 = stablehlo.uniform_quantize %cst : (tensor<20x30xf32>) -> tensor<20x30x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>
    %1 = stablehlo.multiply %0, %0 : (tensor<20x30x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>, tensor<20x30x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>) -> tensor<20x30x!quant.uniform<i8:f32, 0.00392152795604631:-128>>
    %2 = stablehlo.multiply %0, %1 : (tensor<20x30x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>, tensor<20x30x!quant.uniform<i8:f32, 0.00392152795604631:-128>>) -> tensor<20x30x!quant.uniform<i8:f32, 0.0039215076203439753:-128>>
    %3 = stablehlo.uniform_dequantize %2 : (tensor<20x30x!quant.uniform<i8:f32, 0.0039215076203439753:-128>>) -> tensor<20x30xf32>
    %4 = stablehlo.custom_call @check.eq(%cst_0, %3) : (tensor<20x30xf32>, tensor<20x30xf32>) -> tensor<i1>
    return %3 : tensor<20x30xf32>
  }
}
