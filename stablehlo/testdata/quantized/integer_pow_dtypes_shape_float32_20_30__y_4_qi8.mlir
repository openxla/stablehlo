// RUN: stablehlo-translate --interpret -split-input-file %s

module attributes {jax.uses_shape_polymorphism = true} {
  func.func @main() -> tensor<20x30xf32> {
    %cst = stablehlo.constant dense<"0xE30F5640220DFBC0774F2D400C2323C0207BEBBEBC5B24403AA5933DC8DA423FB1598B3E78E12DC0973403BFF01A8DBFF6299AC07DCCE03E137785BC6D73AFC0F44D6FC0E7E15E3FC06BECBFF40A264010586FC03CA17A3F970FF5BE4B36B7BE288646BC455C4BC0DCF8AFBDB84C9FC00742BA40622451C03C023140D471C13FACEA85BF56E996BF135444406A5925409346753FC272B9BF3E08D6BF8F582C3F6606E53FC314DA403D7EAFC06BA9A140FC6065BEA8921BC0270202406D8B2D40C64B34C0E99C1C4025DD34402348F140E40DABBF2385B03E359E8D3E5220BABFF9C9303FC549AE3F5F7C3F403761BE3FE975CBC09D75E93F38C071BE5CE95A40A9C57FC06FDD993FBC4B2440D84736401F243E4069C5523F4FE43E3FC154F4BFD2EE31BE6BB0E1C00CDC1040145CDFBE6384E63F8C37734012C12AC06AF82BC058246F3ED6503BC004E66540C39C01C0CE93A2C07E3782BF5FE889BF58C4F73F9B0D253EE8FBFABFCE972F405B156EBFCC9AEB3F3FDE62C001A349BF0AD7D5C0B3AD6A406CCE93C0D7384F40EE52213F849C74BF35D1713ECDB2D64024F6FABF51261140F2C7A9BF1C24EC3F01D1B4C059939CBF41B3594046934340DEEEDB3F52D32040B104AE3F1AB80440D92F63C0C2CC2F405275873F879A16C03AC4DABF8591CF400ACE233F153C57C0D7718DC03E9B6A40C04A78406C05A0BFB8B24DC0C6B0BE3F702AD9BFF0757B402F83C23EC77FFCBFC5566EBF166281BFDCB007409DEEA74085A74F3F45B7564049B30240788D56C03E1688C0C24BA3407387803E0F909FC056B63E408261BABDD33205403AA230401356C73E544DABC0FB1D984048918EC0485AA4BF3AEB003FF77F0940999F403FFEF9A1BE171566C056B4E43FD0892CC093449340D47007C08F69313FDBBCCBC0B711803E746FA4BF0CA4A0C08F1C51BF81627D400B0F07BF666DE44049CB4EC043CEF440AC11AC3E741EE03FF0EBA8C0D6DC8BBECADA1440C3F7D6BF70381440DF910D4087328340AF18E7BF06D413BF7DDA8BC01BFB46C0F76233C0F60D744005AF90C0D729B3C0B2FF73C0A1A6653F288352C0DBC8453F09A2A3BF102C0E403CCC3BBE10BE5F3F044118C06978943D1C029140C5D00440FA96943F99E83C3FC730923EFD0C6F3F6985C03FE0717940148C903F56AA4C400FD55EC0D9F8E5BF7F7D31C00A43F4BF63263540A6486C407B9D3B40C0BE2540534B41BF7F5F55C0630462BF62DC014005A582BF1C94903F02E0BDBE46A092C0A2765A4068A4D33FAC88823FE9A4793E4C3E5DC08F6CD13F92415EC02849AABFD1B817BE01256040565435C07A51224091AB88C040860740977E094068503DC0C3133A40142D23C07155D63F7F4356C0580E51C0C7DECEC00718563FA3C929BE834F29C01E8B523FCBF3DF3F2589DA40195360BF63761540D95752403D53973F5AB484C0A4202240E3595140F66F0441DA1AE2BF27C5F3BF0E2F78C0930DA4409837B83E772F9BBEB0F21F3E12C62A3C177833405406B13FB4CFFA401402D23E85BABD3EA8BED33F8A2F21C08AAD6C3C5DB3B53FFCDD54408EB1654039066840DEBB40C0AD870040468648407E5E22400F434CC087FB7C40E1DD10C0A4F818BFC05BE4BE78B9AEC0C8A0B03FA1A621BFA7DC2F409E57F0BF6720E9BFD054203FDAEDD23F19F30440CAE0FEBEDCC9F23F9480A1BEFC994AC015C9AF3F54FEDFBEDF3C4CC03BBFAF3FEE5E2EC08A395EC0E5CE92403C66A24091A42C406CEC3D408666A63FA4AEA63F2B340CBE6977FEC0D1579340809215C027F2ADBF2E978940E637363E89A2ABBF6FAEE73FD00D9A402B929F404FD89B40772597C0C3D28240D6A301414BF8133F2195D03E489A823F73EEB4C054D05FBFD0BF863F723E903ED366C1406F2231404981C63FFD00B73F9B1B8CBFAD4811405AC61DBF85684FC032C6AEBF85E619C0D28CB3BF92AF1BBFD1228AC0B3985ABFDFBC64C0F2F75EC0B1B4CA3F4A9F1A40FA8E2CC0EC17193F6C17DA40B23C84BFD06D5AC070A83EBD0A2385BFFF6323C0332EC53FAD8461BF7C6F94BF46613440ECAA32C06AE39ABEA650DCC0497CF3BFEFC8703F2891DD3FF0A7793E1F46C3BFAE0D52C0580EA9BFD39465BF8C84824056281FC0EBBC77C01ADE98C0369A09C0C1E5B8BF4504903E3C3295BDB00229C0A5B833BEBD1B13C0FA0701C0B08C24BF73182DBF58E9AE40FDDF4E406BDB4BC0271002408DC29D3F7F846CC08CF790BF567A4EBEE23F90BF7D397A401D015A405072C4BF0331BDBFA1800AC08D948FBF2B93D1BFD8D7F5BF75BA86BEB3ABC2BF9C596640A402A23E5FF094C0661F9C3F8F5A473FE8358D3F98F60FC0BF2326400F5D90C047C3F33F9D4BF2BDFC4E90401B3702C0EFFD82BF84BC7B408FAE2B40D77C9C3E91BE913DBF3F743FA383CCBF04AD25C0E87997C016FC99BF11F7A140041DB2BFB36DA83F0406BC40B5CFBA3FE11DD5BF2E9771BEBD7CF2BF634C04C0D60202C0F2EF0340AF9674C0163BD53F43FA8F3FFC90A5C005CED7402199383FC7E4C84064D6FBBE27F49CC059EBF2BF76C5C4C063994AC0F1D169408ECA5E408E890440435C08BFD7E2EB3FB5875BC0D00905C09E2F7C3F3BD30740641F30C0351F09407A3A0BC04CC5E8BFF0E313C0B14B94BF4EC829BD8774A0404289963F197CFF3F65F16DC0FCB7DB3DC2ED214040B52CC00FE435BFE844E9C0154002402797964020DE864068A138BDE77B6CBF5F10B2BFEFF7B2BF5DC36640B81035C024876F3F3AA9EFBFDC665AC0950B8E3FA67DB7BE5533F44058F4A440583AA93FD199B53E6C6D903FBA2CF43F135198BF52B451BF26C64CBFF048F63F5A0CB53FE8FD0340517483BE5F469F4038E58FBD4FE2A3409CDE81BF817690407450A1407E49B53F8D8251C03A598A400329B13E175FF43F8AD92ABF5FE04B3F072B813FEC124DC032EBC33F5A5EE1BF5D344FBE3D57FD3F5C9486BF2704A33F488F43C0F648ADBE4F1557401172DBC008BB8EBF6B3FA840CB908A3EAF51ECBF17689A3F83799BC0DF3DA6C0B24154405AA06540AE80E2C0F73A6D3EE25EB03F635A57BFA23F79C05F5F4D40154BD1C0309C1AC06BEC883F85247DC0BB673C3E6FAB59BF2138C1BDC3E39CBE353989C0BBE807403D0A80BF05BD1AC10B627B3EB29F353F035434C0AEA1C0BE7F0CD8BEC739574077FEFABFC03F0DC01E08DE3F8365FA3F1E1FFB3E7800484017BA35BF4CC12FC01BAB5FC02F9253C0E0A3FFBF9139FC40C7ACEE3FB05AC14060F62DC0049EFC3F5891683FB03D36BBA580A040AD16843F516A7EC0CD24A0C07D54F13F76DAF7BF721CD83FDC8430BFD2C8ECBE57BCFD3E545070BFFE5215C02D5EA5BF"> : tensor<20x30xf32>
    %cst_0 = stablehlo.constant dense<"0xtensor<20x30xf32>
    %0 = stablehlo.uniform_quantize %cst : (tensor<20x30xf32>) -> tensor<20x30x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>
    %1 = stablehlo.multiply %0, %0 : (tensor<20x30x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>, tensor<20x30x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>) -> tensor<20x30x!quant.uniform<i8:f32, 0.00392152795604631:-128>>
    %2 = stablehlo.uniform_dequantize %1 : (tensor<20x30x!quant.uniform<i8:f32, 0.00392152795604631:-128>>) -> tensor<20x30xf32>
    %3 = stablehlo.uniform_quantize %2 : (tensor<20x30xf32>) -> tensor<20x30x!quant.uniform<i8:f32, 0.00392152795604631:-128>>
    %4 = stablehlo.multiply %3, %3 : (tensor<20x30x!quant.uniform<i8:f32, 0.00392152795604631:-128>>, tensor<20x30x!quant.uniform<i8:f32, 0.00392152795604631:-128>>) -> tensor<20x30x!quant.uniform<i8:f32, 0.0039214872846416397:-128>>
    %5 = stablehlo.uniform_dequantize %4 : (tensor<20x30x!quant.uniform<i8:f32, 0.0039214872846416397:-128>>) -> tensor<20x30xf32>
    %6 = stablehlo.custom_call @check.eq(%cst_0, %5) : (tensor<20x30xf32>, tensor<20x30xf32>) -> tensor<i1>
    return %5 : tensor<20x30xf32>
  }
}
