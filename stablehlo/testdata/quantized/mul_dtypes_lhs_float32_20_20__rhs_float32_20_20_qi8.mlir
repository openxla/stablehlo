// RUN: stablehlo-translate --interpret -split-input-file %s

module attributes {jax.uses_shape_polymorphism = true} {
  func.func @main() -> tensor<20x20xf32> {
    %cst = stablehlo.constant dense<"0xEFDC1AC07C5B8DC018AF39BF74330C401344703EBDD17BBF6B9C1ABF4A7B2EC0D813A43FEA517B3FF9A2AAC00CB7393F01F4833FF1D46E406BA0C840657E7740244C9DC0BA8B99BD110F9EBF9261E2BF6B2AC03FF99643406B329FBF99B5AFBEDDD19EBF603929BFEF70C93F2537983F4CFCBD3E2CB871BF8C6E8C3FF5630D40C7BA29C05FF21DBF571EAB3FED78B9BF8F211FC0754308402F6DD1BF0FF740C04752A04065552A3E4580D93F3E34083F008485C0E82B5E409C508FC07A08923F476BBFBE7D026740EF9E7D401D682CC033E4B7BFB186AE3E98BFEC3EC9475840B5890940CEFB16C059AF9940E07F76C03E3AF03FD8CC5A4091A989C0E0F495C02A2958400D6829C04FE45740AD9A48C01DF8AE40D919F83FAFDDAFBE5FF4D2BE34124E40BC13F03D5AC83D4034FBDABE23D812C00785C5BF5F63E5BFC1041C40B18D0E404C77AA4082E96EC0EC550740BFDAC23FF78FD23EBCA33340FB935DC0CBE2F83E59787A3F1B2E81404AA6A23E6E15494050E3E83F31DF3AC03889C13FC93C4ABD24DFD040A4E7CE3EF6A703405B2F02C0D3181040B87B8CBF41EA41BC70FB8040A8802640CDEEBDBF6F04F63EE14A853F2BEEF7BF64E31DC0873C913F07659A4075F75BBEAC455840144AADC098CAA1BEFE73F1BEEC687EBFB7104540C3CB41BC08580CC0CB6775C05AA6613F04DD15C0212FCA3F31ABC13EABAAD13E65C304409ECE274143E8DCBE3209E5BF277C55BF3194E53F5139B03E26F7A13F4200D93F14F14740BE62D2BE4466E5407298B040E7BDCAC0E71E16C0F339AA4047FC87BFFBCDE8BF6FDF0140E6DEC4BE8B0EE4BF4BFDF0C0233E4640485EA24034971B3FA9360E40EEAFDE3FA996823FD312DB3F1419A340FF7078C031DD9340772E054097C35540255E8B4088779FC096C160409F308AC04B1349C0C5F38940C4522C40426781C08ECE44C00A525F40305588BEBEE70BBD7E75FE3EDC078C3ED1CABF401ED035BFAAB213BF5CDD55C02AEB87C0D1872F406BAFC53FE9692DBE0D3519C0C54CE04073B6DEBF02F25940E6F207BF3F6BE7BFE50DCE3FE6E5B740FC1337C0377306BFA3F96940A4F89EBDCEF3FAC0A33345C096ABF2BFFB452A403A1B453FDA1C9AC02FEC23C067EFCD3FACDC0DC0EB1F23C0E45185404E2BC33F5833B73FECBEDFBE56903340B81736C0850A0E40F23305C051E13B3E89A914402BB9B6C07D53694038108240D6356E407DC11F3F54E3A6C0AE5E0EC083E8A5406E6119BF7F8520C0941C61BEFD0DE2BF81CFC4C059C35EBE4F492B40EA9225C01FB7223E2D8FA7BF9B2896404689EB3EA41A15C0406D0DC09AD505406655D3BEF186B63FDFFF83403301A2BF68C1E63E812D1B40D553C43FABD7BDC0986012C0C56D04C15ACAC6405797733E6A37EEBF58F32FC0F40AFF3FB92F05C06EA06840E1E1153FFEAF3D3F8E2D2BC0A31F87BFAF3132C0F3AE8ABF5197B6C030D4D5BF45261EBF0D2BE03E9EA3AF405CAE363F814F93C0953D293F864D6940630F5BC00F2D32401D6F6EBEE9CC4A40A959D7BF828EADBFE8F3C23FD4666CC0252F70400FAFFABF14B6FF3F9E07E3BF04446FBFFC5C2B407F6B02BEC71DF73D45F99F40EBA20BC0857FDE3F65028EC0C023E4BEC450AD4063FE6BC0EF8AF8C0D8719C3F691EADBFF8E5183FA9372FBFD6E32FC0EBDBDF3F6E1488C0D66A10C0B564BD3F2F2BD5BFFE2D02BF1C2DDD3FB7DE28C099F534C05E71613FA2C1B1BFC4AFB2BF0229A73F228177C0F8AF843EDF86053E8214D13F99E300BF072CAB3F184646C06755713FAEE2ACBEFBFC41406E082BC0C52A193F72D456BF68D783C0FB9DE7408731A6BFCE4F3FC03EA0893EC401693F72E3CC4027CDF83F03AF08403AD8EBBF3077ACBD6FE59FBFD5D1C2BE40B2F1BF582CB6BFFD27183FA8151EC01C5F174070D9D13FE1B67ABF4BAE51C0E00FA43F66793F4099E30240561FC63D8313C6BFCBBEBFBF95D0563FC9EC6B40ACA70040E7A6ABC0751532C053F273BFD22FA53FF7CE62C098B3A4BF0C82ACC07B53A83F0D562440332CBDC0C8A924C0725EFD3F5DAEF1BF9940D8BF61C3A34009E9AA3F69CB83BFBC8AD43F3ECC014151E7B33FC2F219BF78CE1C402AD65AC0ECBB5F403D248B407E610540150FE8BFA7BFB3BF8C195840C413854035543C403447E9BE187333C0587DA43F98F5293F79C86FC06C114AC0A9B32C4026D76D40C11AF53F81C8024058EE72C0EF88254072B3583F"> : tensor<20x20xf32>
    %cst_0 = stablehlo.constant dense<"0xtensor<20x20xf32>
    %cst_1 = stablehlo.constant dense<"0xtensor<20x20xf32>
    %0 = stablehlo.uniform_quantize %cst_0 : (tensor<20x20xf32>) -> tensor<20x20x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>
    %1 = stablehlo.uniform_quantize %cst : (tensor<20x20xf32>) -> tensor<20x20x!quant.uniform<i8:f32, 0.0039213846711551445:-128>>
    %2 = stablehlo.multiply %1, %0 : (tensor<20x20x!quant.uniform<i8:f32, 0.0039213846711551445:-128>>, tensor<20x20x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>) -> tensor<20x20x!quant.uniform<i8:f32, 0.0038719677457622454:-128>>
    %3 = stablehlo.uniform_dequantize %2 : (tensor<20x20x!quant.uniform<i8:f32, 0.0038719677457622454:-128>>) -> tensor<20x20xf32>
    %4 = stablehlo.custom_call @check.eq(%cst_1, %3) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<i1>
    return %3 : tensor<20x20xf32>
  }
}
