// RUN: stablehlo-translate --interpret -split-input-file %s

module attributes {jax.uses_shape_polymorphism = true} {
  func.func @main() -> tensor<20x20xf32> {
    %cst = stablehlo.constant dense<"0x2F672D4004B95C401AB196BFBFD9C83F939C953ED1A92CC0F511F5BF33D8B6BEAE6D52C02C4AE2BF86D7A8C0213F96C0729B5CC0757ADBBFA2C104C03C924CBFB937C84080C53E409541464068F396C02C0218C056C7B840D23B5440E84D1640DB42D7BE8FD613401D8162C06689A73F5521A9401046F8BF2C27F5BFE759A0BF5A46BDBF908FBA3E43776EBF26C21D4008ED63C0DC7D13C0131271BE0E180ABF51D8C23F6B1B723F1E5D67C0BCDA214070208BBF1AF632C0140790BF4574DC3D367F25402BD92FC003DA42C0CE29A2C0E5D74CBC4E70463E99D19F401F1528403FADFABF6A5E8540C397A6BE94198740CC9A094051283C40F8723740901991C08FB066405FB336C028BD26401A3BE63FF52E4B405A751740E07C7FBF737137C00AE4AD4014B4B6BE42D14D40BABFE3403C0F14408A7AB13F946DA44045E016C08DE6DEBDB60E35C05105C53F4241443FE50A9E3F643A943F607F103EA0EC4ABFB8BEAC403EB6A23FEAC4A6C01B206D3FDD8B06C0E2DB4CC0E6F5A4C094CBAEBE1042C1C0DF3F7CBF3AB3A73FD18DD13FF087F2BFA08C303F0D295BC0789F833EF6FA34C06E828FC0478022C0793810C0FF2FD83E901A1EC0B11823404FF713C0357F92C01D8B35C075D312C0D35A873D8E6FC840949E6E4010009AC00FE4B03E44EDB9BE7CE667BF1B2C3DBF882237BCE00CBA3F45D429BFEDDA3CC0B4F44B407E4F873E0C37F33F1B690C4002A9693F261FBA408DB734C066925CBF358B51BF3507EEBE0CA3943FD8CB62BFD4D7DF3E17D64DC0AC46E63FE7BCB7BD95F102C0A24383C0548204407F0ABAC05B6511C08B6FA73F634B814005EAAE4034B3ACC03880DDC0653E9040F7625A4021068840ED103EBF3F5D12C0C7B647C028D39CBE0BEAD33F1F5F174015DA303FFBB4C4C00CDE42400DE87BC082642DC01AB396409907F23ED43045BFBD54B13FF6449240512B7AC03C56CDC01A3E93C0959A913F803CE7BF663A02C0574EC3403F04603F3254544008D2093E5B8CA4C039A68E401AD997C0620FE6BFDF5A8BBF6D71F63F62BC18C020A87040386516BF8B7897C0CBFC28406E228BBD1C4082C0471E933F2EF72CC011F43240718AAF3C0D9461C0493E8A3FE1FC573C45AA473ED6C60F40DB80A23F29C016C0C20782BF0A9814BFC68A9EBF040974C0DB461ABD8922A9BF1774CE3E47C6FEBF44B9FABFA5FFAB3EDE78BBBF165E213F2AD9903E28DD994046B39F40A5B086BF324832C0A776B4BF844D03C0A40216C00AB784C041207F40EF4CC7BE1838B83E43B69DC064B4E33ECCE91BC071F81BC07C7419403CA6A940B58598C0A9B0273ED9C6A240808CB4BD3A4EB03F1306F9BF07FA69BD3A9FCCBF0C369EBE8480FD3FA136A9C0E9E1D7BF64DA573F966217C07DB7074064B132C07CB383BFE5135D3FED9733C0AFA80E3F7ED385C0E99491C09DA35D40BFA3EEBFCC24963F19C06EBFBAF6AA3F41E84D3FA9359BC0D14F1BBFB98947C07D5DDABFC9A91C40CBF46C3E9D25D63F2881A8BE0BEA4DBFE333F93F615D843F13A938C0569B7F3E12A34EBEC8D97FC0D19576403DDFF9BFCA5A8DBF641D0ABE9395FE3E9638CE3FEF0C3A3F8B1B88C06DF651BF10052C40F8F654C02983C3402F0BE3BD1C4E03C1D7998D40A51640401D3B99BFDD2618BFE7B17740E705A140273C1040952789BFF9E3863F8A49513D49DCC2407190D74003E1653F72DE56C05F87D7C0E4C22B40473BB13C63CA03404D2659C06E9B083F744B5EBF2C60933ECB429EC03EB387403B9ED4BFA4829FC005DAFEBFB6C3D9BFDBE8A73FD99BFABFBA841140D68A12C0184557C0E0BFAAC040BCC33FCF3C9BC064202FC0305016C056430F40F4205C3EF15C4A405D4881BEA1F625401E60403E5F5EB13F76B0933FE91A0C40C4AA023EA6021AC0F96F4DC0D9C9D43F84493A40311A63BE448B473F180E0B40DC67A2BFEE8726408DA458C0BCCBE3BF379186C0D162434065B88FC0FE39D43F5EAD433FFD8E863E3988B33FD73A0A40B142913F0DF6AE3F2F7A3D405570A7C003F0623FB9147AC02407FFBEE03343C02DEBEB3FCB8EE43FA4C628C054D00F3FDACE9440669131C0A0C68C4024ADEDBEDC4E853F9D75C3400CD00D40792655C08132803F87E44B3FF686803F5E0C224040D182BF044E94BF841537C02CC8F5C09D99C4BFB8F992C0CEDF9CBF3EB66C3FF5A53AC02D6694BD1AA989C0CE0873C06C57F2BF44640FC02E79A140BBE6863F"> : tensor<20x20xf32>
    %cst_0 = stablehlo.constant dense<"0xtensor<20x20xf32>
    %cst_1 = stablehlo.constant dense<"0xtensor<20x20xf32>
    %0 = stablehlo.uniform_quantize %cst_0 : (tensor<20x20xf32>) -> tensor<20x20x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>
    %1 = stablehlo.uniform_quantize %cst : (tensor<20x20xf32>) -> tensor<20x20x!quant.uniform<i8:f32, 0.0039213846711551445:-128>>
    %2 = stablehlo.subtract %1, %0 : (tensor<20x20x!quant.uniform<i8:f32, 0.0039213846711551445:-128>>, tensor<20x20x!quant.uniform<i8:f32, 0.0039215482917486456:-128>>) -> tensor<20x20x!quant.uniform<i8:f32, 0.0077891749494216024:-1>>
    %3 = stablehlo.uniform_dequantize %2 : (tensor<20x20x!quant.uniform<i8:f32, 0.0077891749494216024:-1>>) -> tensor<20x20xf32>
    %4 = stablehlo.custom_call @check.eq(%cst_1, %3) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<i1>
    return %3 : tensor<20x20xf32>
  }
}
