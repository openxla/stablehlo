// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = call @inputs() : () -> tensor<12x12xf32>
    %1 = call @expected() : () -> tensor<12x12xf32>
    %2 = stablehlo.constant dense<0.000000e+00> : tensor<f32>
    %3 = stablehlo.broadcast_in_dim %2, dims = [] : (tensor<f32>) -> tensor<f32>
    %4 = "stablehlo.reduce_window"(%0, %3) ({
    ^bb0(%arg0: tensor<f32>, %arg1: tensor<f32>):
      %6 = stablehlo.add %arg0, %arg1 : tensor<f32>
      stablehlo.return %6 : tensor<f32>
    }) {padding = dense<[[0, 1], [0, 1]]> : tensor<2x2xi64>, window_dimensions = dense<2> : tensor<2xi64>} : (tensor<12x12xf32>, tensor<f32>) -> tensor<12x12xf32>
    %5 = stablehlo.custom_call @check.eq(%4, %1) : (tensor<12x12xf32>, tensor<12x12xf32>) -> tensor<i1>
    return %5 : tensor<i1>
  }
  func.func private @inputs() -> tensor<12x12xf32> {
    %0 = stablehlo.constant dense<"0xtensor<12x12xf32>
    return %0 : tensor<12x12xf32>
  }
  func.func private @expected() -> tensor<12x12xf32> {
    %0 = stablehlo.constant dense<"0x93AEEB40551C88403C0BFEC0F5C6BFC0702A9F3E07034FC0B6E999402C736D41E1B8C440B44581BE770EF03FB6620F40086788402D03014004D36BC1BB9FDFC068FC7C3FDAD0FCC07E55D43E7CC90D411CB3F5400A5382403D3F9CC079E687C054A1A23F7DAC41C0CA1AE8C0A506A0C0285297C07F17D2C0704F9FC0C24740C076ACEE3F7A4EC040821F9D3E0F3C32C0BEA7CD3F6866D73F43669640008EC740FF5D0F41848D0F403264FFC0985B56C085438E40E83B0341C9860441A862AC3F864A07C150259CBE7B2CAB40102038BFA2FE1C41B052EC402DA8B6C0DE82CF40542C8141FBDE4841E936FB40D82F463E1F4C84BF188AF3BFE89BB5C0B8571CC172EE6440709ED83F58B8AEBE2FF6C84001041441348722412E117F401687A1BE90A76A406AA7913F6E31EDC0F23108C128CA2D406826C240E8E2D63EE5FD8EC0D7180CC08062623D6D79D1BF75A611BFEC4C7840F1040DBF379C66BEA80655C1A8B418C18A5628416038CC4064873AC0244CBABF30BC58406639B4406AC11D4012D9DA4026E6A6C066E6D0C0F476A9C1161D85C18CED10BF2C159C40F06DA44042A58A40C8F43E413CAB00419029893F82CB103F46867BC0364C0CC1969885C1117810C1C2C0233F70DB9640889AB24090F80FBEF8254BC0AAF89CC088354CBFA8F199C01A1AC2BF986A0DBF838F60BF739512BF028F84BF5A88713F565FAB40B85AB4BF38A847C1CF5B24C168EA97BF2BC663C0E919F9BF5F4EC53FE1A922406620DABE20EB86C096F348C05FFE43401F660340015151C02EBAACC058703FC0"> : tensor<12x12xf32>
    return %0 : tensor<12x12xf32>
  }
}

