// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<[[0, 1], [2, 3]]> : tensor<2x2xi32>
    %1:2 = call @inputs() : () -> (tensor<5x6x7xi32>, tensor<2x7xi32>)
    %2 = call @expected() : () -> tensor<5x6x7xi32>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<i32>, %arg1: tensor<i32>):
      %5 = stablehlo.add %arg0, %arg1 : tensor<i32>
      stablehlo.return %5 : tensor<i32>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [1], inserted_window_dims = [0, 1], scatter_dims_to_operand_dims = [0, 1], index_vector_dim = 1>, unique_indices = true} : (tensor<5x6x7xi32>, tensor<2x2xi32>, tensor<2x7xi32>) -> tensor<5x6x7xi32>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<5x6x7xi32>, tensor<5x6x7xi32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<5x6x7xi32>, tensor<2x7xi32>) {
    %0 = stablehlo.constant dense<"0xFEFFFFFF030000000000000008000000FEFFFFFFFFFFFFFFFBFFFFFF050000000000000000000000FEFFFFFFFEFFFFFFFFFFFFFFFEFFFFFF00000000FDFFFFFF08000000050000000000000000000000FFFFFFFFFCFFFFFFFFFFFFFF00000000FFFFFFFFFDFFFFFF0000000001000000FFFFFFFF000000000200000005000000FCFFFFFFFFFFFFFF05000000040000000000000002000000FFFFFFFF000000000000000005000000FFFFFFFFFDFFFFFFFFFFFFFF0000000004000000FDFFFFFFFFFFFFFF00000000FEFFFFFFFDFFFFFFFCFFFFFF00000000FDFFFFFFFFFFFFFF0000000002000000FCFFFFFF0000000003000000FFFFFFFFFEFFFFFF0000000000000000030000000200000001000000FDFFFFFF03000000FEFFFFFF02000000FEFFFFFF0100000000000000000000000300000005000000FFFFFFFFFEFFFFFF00000000FEFFFFFF02000000FCFFFFFFFCFFFFFFFDFFFFFF07000000FFFFFFFFFDFFFFFFF9FFFFFF000000000000000000000000FFFFFFFF02000000FBFFFFFF0100000000000000FEFFFFFFFAFFFFFF0000000000000000000000000100000001000000090000000100000001000000080000000000000000000000FBFFFFFFFDFFFFFF0000000003000000FBFFFFFF00000000FDFFFFFFF8FFFFFF000000000300000004000000FFFFFFFFFCFFFFFF01000000FEFFFFFFFBFFFFFF0100000001000000FFFFFFFFFFFFFFFF01000000FFFFFFFF00000000FFFFFFFF0000000001000000FCFFFFFF01000000FFFFFFFF00000000FFFFFFFF01000000010000000400000000000000040000000200000002000000FEFFFFFFFFFFFFFF0000000002000000FEFFFFFFFEFFFFFFFFFFFFFF01000000FFFFFFFF0200000000000000FCFFFFFFFFFFFFFF050000000000000000000000FFFFFFFFFCFFFFFFFEFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFDFFFFFF00000000FFFFFFFF0000000001000000FEFFFFFFFEFFFFFF05000000FFFFFFFF05000000FFFFFFFFFEFFFFFF03000000FFFFFFFF0100000002000000FCFFFFFF00000000FFFFFFFF02000000010000000100000001000000010000000000000000000000FDFFFFFFFDFFFFFFFEFFFFFF02000000FFFFFFFF02000000FBFFFFFF01000000010000000100000000000000FFFFFFFF03000000"> : tensor<5x6x7xi32>
    %1 = stablehlo.constant dense<[[-2, -1, 1, -3, 0, -4, 2], [0, 1, 2, -3, 3, 0, 3]]> : tensor<2x7xi32>
    return %0, %1 : tensor<5x6x7xi32>, tensor<2x7xi32>
  }
  func.func private @expected() -> tensor<5x6x7xi32> {
    %0 = stablehlo.constant dense<"0xFEFFFFFF030000000000000008000000FEFFFFFFFFFFFFFFFBFFFFFF03000000FFFFFFFF01000000FBFFFFFFFEFFFFFFFBFFFFFF0000000000000000FDFFFFFF08000000050000000000000000000000FFFFFFFFFCFFFFFFFFFFFFFF00000000FFFFFFFFFDFFFFFF0000000001000000FFFFFFFF000000000200000005000000FCFFFFFFFFFFFFFF05000000040000000000000002000000FFFFFFFF000000000000000005000000FFFFFFFFFDFFFFFFFFFFFFFF0000000004000000FDFFFFFFFFFFFFFF00000000FEFFFFFFFDFFFFFFFCFFFFFF00000000FDFFFFFFFFFFFFFF0000000002000000FCFFFFFF0000000003000000FFFFFFFFFEFFFFFF0000000000000000030000000200000001000000FDFFFFFF03000000FEFFFFFF02000000FEFFFFFF0100000000000000000000000300000005000000FFFFFFFFFEFFFFFF00000000FEFFFFFF02000000FCFFFFFFFCFFFFFFFDFFFFFF07000000FFFFFFFFFDFFFFFFF9FFFFFF000000000000000000000000FFFFFFFF02000000FBFFFFFF0100000000000000FEFFFFFFFAFFFFFF0000000000000000000000000100000001000000090000000200000003000000050000000300000000000000FEFFFFFFFDFFFFFF0000000003000000FBFFFFFF00000000FDFFFFFFF8FFFFFF000000000300000004000000FFFFFFFFFCFFFFFF01000000FEFFFFFFFBFFFFFF0100000001000000FFFFFFFFFFFFFFFF01000000FFFFFFFF00000000FFFFFFFF0000000001000000FCFFFFFF01000000FFFFFFFF00000000FFFFFFFF01000000010000000400000000000000040000000200000002000000FEFFFFFFFFFFFFFF0000000002000000FEFFFFFFFEFFFFFFFFFFFFFF01000000FFFFFFFF0200000000000000FCFFFFFFFFFFFFFF050000000000000000000000FFFFFFFFFCFFFFFFFEFFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFDFFFFFF00000000FFFFFFFF0000000001000000FEFFFFFFFEFFFFFF05000000FFFFFFFF05000000FFFFFFFFFEFFFFFF03000000FFFFFFFF0100000002000000FCFFFFFF00000000FFFFFFFF02000000010000000100000001000000010000000000000000000000FDFFFFFFFDFFFFFFFEFFFFFF02000000FFFFFFFF02000000FBFFFFFF01000000010000000100000000000000FFFFFFFF03000000"> : tensor<5x6x7xi32>
    return %0 : tensor<5x6x7xi32>
  }
}

