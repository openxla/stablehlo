// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<32> : tensor<1xi32>
    %1:2 = call @inputs() : () -> (tensor<1x50x3xf32>, tensor<1x3xf32>)
    %2 = call @expected() : () -> tensor<1x50x3xf32>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<f32>, %arg1: tensor<f32>):
      %5 = stablehlo.maximum %arg0, %arg1 : tensor<f32>
      stablehlo.return %5 : tensor<f32>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0, 1], inserted_window_dims = [1], scatter_dims_to_operand_dims = [1]>, unique_indices = true} : (tensor<1x50x3xf32>, tensor<1xi32>, tensor<1x3xf32>) -> tensor<1x50x3xf32>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<1x50x3xf32>, tensor<1x50x3xf32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<1x50x3xf32>, tensor<1x3xf32>) {
    %0 = stablehlo.constant dense<"0xF4FE90BFDA2F0F40F97923C0E917BD3FA83993C0E414F3BF522E54407F90C540D0A8ADC069C37F40F9965D402AD6763F94AC03C03F2BA83FE91D8FC0848885BFF73FC2BF921750C09FFC2340341E22C0E2331FC08F1FD6C0EB5884BF04615BC0447739C060E52AC03C4AC73FCD4004C0A5DBA83FEB710D3F5444DE3F569ADCBF5AB484404AA0FBBFAE334B40EC8DFF3F30A57BC08CEE643D2294184096E2254017FB61402D9A9840684327C0329197BF81D0FEBFF241CABEA81CAE3F13B59BBF7575DFBDDD392F40BB20243F633DA240E206C4C0AE3F8C3F9AFBEE3F71DE0BC01D943E40C41A59C0DE7ED1BFBC9BE44042E7E9BFC835A1BFCBB153BF1ED0A4C0218401C0A8EAA33F99D56D3FD28290C0DF715B40B28358BF5BEFD73F5D2C09C0A55646C0D87433C06FE726BF7C451FC0460E86BE0FB127C006F00EC06CC5BCC006D621BD86ED463E34BC09402CD42AC038B9124030D4BABEF2EE1E40638E104001C865C0530CD640EEEE29BFB9BFBFBF5C7CBDBFDC4018BFE85654BC5E1233BEB46004402E1A29BFD0192940252A7540ABDD35408DD02FC0A20128BF23BC0440D2398240E289F4BD6744C63E95E226C07CD73D40D4293540BB6BDC408F5E91C000EA87C0788394409C725440810E063F368749BFF105933F29C330406C6A7440A5DAE23F8361DEC0263332BEFBF7CBBF0DE50F40E82AA6BF8FEBEF3C13FCAC3E3856813F424DCABFB7FC3BC0ECAF83BEA7D92ABFB9D1EABFAC842D409A1D264094EA973F7D2C10C0B7DF82C0690C3CC0CA28E93F6C1761408A35B0C0854866BF97CD1E40DC31CB3F88E1A9BF775F853FE1E7294045E95D40"> : tensor<1x50x3xf32>
    %1 = stablehlo.constant dense<[[-6.24909114, -1.36162674, 8.875460e-01]]> : tensor<1x3xf32>
    return %0, %1 : tensor<1x50x3xf32>, tensor<1x3xf32>
  }
  func.func private @expected() -> tensor<1x50x3xf32> {
    %0 = stablehlo.constant dense<"0xF4FE90BFDA2F0F40F97923C0E917BD3FA83993C0E414F3BF522E54407F90C540D0A8ADC069C37F40F9965D402AD6763F94AC03C03F2BA83FE91D8FC0848885BFF73FC2BF921750C09FFC2340341E22C0E2331FC08F1FD6C0EB5884BF04615BC0447739C060E52AC03C4AC73FCD4004C0A5DBA83FEB710D3F5444DE3F569ADCBF5AB484404AA0FBBFAE334B40EC8DFF3F30A57BC08CEE643D2294184096E2254017FB61402D9A9840684327C0329197BF81D0FEBFF241CABEA81CAE3F13B59BBF7575DFBDDD392F40BB20243F633DA240E206C4C0AE3F8C3F9AFBEE3F71DE0BC01D943E40C41A59C0DE7ED1BFBC9BE44042E7E9BFC835A1BFCBB153BF1ED0A4C0218401C0A8EAA33F99D56D3FD28290C0DF715B40B28358BF5BEFD73F5D2C09C0A55646C0D87433C06FE726BF7C451FC0460E86BE0FB127C006F00EC06CC5BCC006D621BD86ED463E34BC09402CD42AC038B9124030D4BABEF2EE1E40638E104001C865C0530CD640EEEE29BFB9BFBFBF5C7CBDBFDC4018BFE85654BC5E1233BEB46004402E1A29BFD0192940252A7540ABDD35408DD02FC0A20128BF23BC0440D2398240E289F4BD6744C63E95E226C07CD73D40D4293540BB6BDC408F5E91C000EA87C0788394409C725440810E063F368749BFF105933F29C330406C6A7440A5DAE23F8361DEC0263332BEFBF7CBBF0DE50F40E82AA6BF8FEBEF3C13FCAC3E3856813F424DCABFB7FC3BC0ECAF83BEA7D92ABFB9D1EABFAC842D409A1D264094EA973F7D2C10C0B7DF82C0690C3CC0CA28E93F6C1761408A35B0C0854866BF97CD1E40DC31CB3F88E1A9BF775F853FE1E7294045E95D40"> : tensor<1x50x3xf32>
    return %0 : tensor<1x50x3xf32>
  }
}

