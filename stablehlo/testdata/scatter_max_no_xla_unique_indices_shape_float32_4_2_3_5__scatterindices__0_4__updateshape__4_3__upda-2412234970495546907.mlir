// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<[0, 4]> : tensor<2xi32>
    %1:2 = call @inputs() : () -> (tensor<4x2x3x5xf32>, tensor<4x3xf32>)
    %2 = call @expected() : () -> tensor<4x2x3x5xf32>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<f32>, %arg1: tensor<f32>):
      %5 = stablehlo.maximum %arg0, %arg1 : tensor<f32>
      stablehlo.return %5 : tensor<f32>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0, 1], inserted_window_dims = [1, 3], scatter_dims_to_operand_dims = [1, 3]>, unique_indices = true} : (tensor<4x2x3x5xf32>, tensor<2xi32>, tensor<4x3xf32>) -> tensor<4x2x3x5xf32>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<4x2x3x5xf32>, tensor<4x2x3x5xf32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<4x2x3x5xf32>, tensor<4x3xf32>) {
    %0 = stablehlo.constant dense<"0xD87DE7BEC9E120407DFA6DC0D57E99C055FE0B40E89228BF9590F5BF52FFF43FD748D93EC03798C0D7F77EC0A2B8913F938114C0B4C5B8BF7FDADCBE82F562C0E9C240C040AA21C03CCDE9BE30CE11400596ACC055B2C83E2F6384C08563C6C0D65C773FCEDB85C0E2B487BF6CAE07407ECCB240C8878D40031D8BBD22FA4EBFF50FB440F09B1F3FCA049A4098DE96C000B437C0C735ECC0208E5CBF02386040FC4FDD3FAA3E2140CF43833F8672A8C061FC9E400C0DCB3E295E8E3C572599C0DA988EBF6E76964034E78D407996363F54911B40F851B84007799D4084FADDBF2CBC90C033D11AC0FBE5E7BDA2161440F7B72E401F2258407B27A3BF7A07EE3FC80999BFCBFF8EBF76CB2F409A13F73FFF4F8F400816C0C029DB39C06A8C2240C52BB93DC0CA863F3D45483ED408E5BF62399FC00D8421C051F392C0D61EF4BF873F0DC07E1EF03E3F4071BEE60A9C3FD74225BE5399DEBFE54F46BF3B152EBF4A57BA3F31E54A40229FCB3F33DB97BF60BCA93FC16DE9C02346D4BFC05F49C082B77D408EEDA1BEBBC90FC0BC5B68400EEFAEBF17FF68C02FA9AABF7C64BEC00302673D8C037040679D813FB1BADDBFAC170F40215741C0DCC73F40773351C020978FBEBA4683C0B088953F93F083C0F7095AC026993C3F00ABCA3FA04D2740"> : tensor<4x2x3x5xf32>
    %1 = stablehlo.constant dense<[[3.31266069, -3.28743863, 2.20256543], [-2.94863749, 2.30117917, -2.440630e+00], [-0.514029086, -1.67975485, 1.42150891], [3.14068985, 3.09973431, 0.814430773]]> : tensor<4x3xf32>
    return %0, %1 : tensor<4x2x3x5xf32>, tensor<4x3xf32>
  }
  func.func private @expected() -> tensor<4x2x3x5xf32> {
    %0 = stablehlo.constant dense<"0xD87DE7BEC9E120407DFA6DC0D57E99C0A2025440E89228BF9590F5BF52FFF43FD748D93E656552C0D7F77EC0A2B8913F938114C0B4C5B8BFD5F60C4082F562C0E9C240C040AA21C03CCDE9BE30CE11400596ACC055B2C83E2F6384C08563C6C0D65C773FCEDB85C0E2B487BF6CAE07407ECCB240C8878D40031D8BBD22FA4EBFF50FB440F09B1F3FCA049A4098DE96C000B437C0C735ECC0208E5CBF02386040FC4FDD3FAA3E2140CF43833F8672A8C061FC9E400C0DCB3E295E8E3C572599C0DA988EBF6E76964034E78D407996363F54911B40F851B84007799D4084FADDBF2CBC90C033D11AC0FBE5E7BDA2161440F7B72E401F2258407B27A3BF7A07EE3F699703BFCBFF8EBF76CB2F409A13F73FFF4F8F403502D7BF29DB39C06A8C2240C52BB93DC0CA863F01F4B53FD408E5BF62399FC00D8421C051F392C0D61EF4BF873F0DC07E1EF03E3F4071BEE60A9C3FD74225BE5399DEBFE54F46BF3B152EBF4A57BA3F31E54A40229FCB3F33DB97BF60BCA93FC16DE9C010014940C05F49C082B77D408EEDA1BEBBC90FC0BC5B68400EEFAEBF17FF68C02FA9AABF7C64BEC0897E503F8C037040679D813FB1BADDBFAC170F40215741C0DCC73F40773351C020978FBEBA4683C0B088953F93F083C0F7095AC026993C3F00ABCA3FA04D2740"> : tensor<4x2x3x5xf32>
    return %0 : tensor<4x2x3x5xf32>
  }
}

