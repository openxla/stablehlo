// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<[0, 4]> : tensor<2xi32>
    %1:2 = call @inputs() : () -> (tensor<4x2x3x5xf32>, tensor<4x3xf32>)
    %2 = call @expected() : () -> tensor<4x2x3x5xf32>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<f32>, %arg1: tensor<f32>):
      %5 = stablehlo.maximum %arg0, %arg1 : tensor<f32>
      stablehlo.return %5 : tensor<f32>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0, 1], inserted_window_dims = [1, 3], scatter_dims_to_operand_dims = [1, 3]>, unique_indices = true} : (tensor<4x2x3x5xf32>, tensor<2xi32>, tensor<4x3xf32>) -> tensor<4x2x3x5xf32>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<4x2x3x5xf32>, tensor<4x2x3x5xf32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<4x2x3x5xf32>, tensor<4x3xf32>) {
    %0 = stablehlo.constant dense<"0xBC267EBFBEFCFEBE39A48AC0F8311E41D285F6BE278338403CF9DA3F7C5167C0521E0E4177DCB5BF6C8DDBBF05B1F8404269653E2AE223C0BF235D3FDBA711406E13BB3E1F34683D2FDC9AC071C0AABFA4FE85BF5D0790BF26CB2F400AB005BE3A3A04C07FB6BBBE9788A2C06F61A13F55DCE0BF9677FFBFCBCC25C012BF4AC03C01EB3EE687B93F2BD381401316944015668340334CABBF549EBB3FD23D97BF162ED33FBF05B8C063BC8740B42722C0B7AADA3F2BD361C0080FDABDA59787C0BCB9F03FE47E5EBF985E13C0FA43DC3FB93C1D3F8AECA93F7B5BDAC03DE39CBFFC7388402970B4BF5AE5C840684B83402F21C23F6708AE3F4E9BF93FEFDD9FC093DE433FACA928C08BD97D3F4818634055B5DE3FDDD339C07CF7A1BFA07D10C0AB40BC3F4F2E313FE9E2A6BFA380A1BF0F53303F9C9AFBBFFAF5CFBF6CA230C0D13D70C0F4813E406AEE0E406F6865C050DCBA3F2CB129C011AA3BBD2E21A540BD5F6F40C2731CC04B203A40026968C04316BD3FF8E9CABE879DCD406AB71DBF6A0354C0D974BCBFD6FC1CBF263A2B4073736EC0F1011F3F6DC99440057400C04AC03040106C794057BEF03F864C93403FFF4F4074E252C0160018BFA2BE004022F06EC0895BA640FF623A40C1090FC05A43693D508AB4BFF78F264058F9A9BE"> : tensor<4x2x3x5xf32>
    %1 = stablehlo.constant dense<[[-1.06306028, 1.33106041, 7.33008194], [4.33711863, -1.18755329, 0.0263335928], [0.16067861, 2.59477305, -5.32672405], [1.16731179, 2.75425696, 0.118498988]]> : tensor<4x3xf32>
    return %0, %1 : tensor<4x2x3x5xf32>, tensor<4x3xf32>
  }
  func.func private @expected() -> tensor<4x2x3x5xf32> {
    %0 = stablehlo.constant dense<"0xtensor<4x2x3x5xf32>
    return %0 : tensor<4x2x3x5xf32>
  }
}

