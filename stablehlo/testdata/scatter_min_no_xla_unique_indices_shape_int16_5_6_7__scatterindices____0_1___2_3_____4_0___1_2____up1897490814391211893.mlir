// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<[[[0, 1], [2, 3]], [[4, 0], [1, 2]]]> : tensor<2x2x2xi32>
    %1:2 = call @inputs() : () -> (tensor<5x6x7xi16>, tensor<5x2x2xi16>)
    %2 = call @expected() : () -> tensor<5x6x7xi16>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<i16>, %arg1: tensor<i16>):
      %5 = stablehlo.minimum %arg0, %arg1 : tensor<i16>
      stablehlo.return %5 : tensor<i16>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0], inserted_window_dims = [1, 2], scatter_dims_to_operand_dims = [1, 2], index_vector_dim = 2>, unique_indices = true} : (tensor<5x6x7xi16>, tensor<2x2x2xi32>, tensor<5x2x2xi16>) -> tensor<5x6x7xi16>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<5x6x7xi16>, tensor<5x6x7xi16>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<5x6x7xi16>, tensor<5x2x2xi16>) {
    %0 = stablehlo.constant dense<"0xFEFF00000000FDFF0200F9FFFCFF05000300FDFF010001000000FDFF0200FCFF0000FBFF0000FDFF0000FCFF01000100020000000100FFFF020002000300FFFFFDFF010000000000FEFFFDFF0500FDFF030000000000FEFF0100000001000100F6FF0200FFFFFEFFF7FF000000000000FDFFFFFFFDFF000000000300010001000100040001000600FDFF040000000100FEFF0000020001000000000003000500FEFF00000200FEFFFCFF03000400010006000000FDFFFEFF0000020001000100020000000000FEFF010004000100000000000300000002000100FDFFFFFF0000FBFFFCFFFBFF0000FBFF0100FBFFFFFF0400FDFF000003000100FEFF070001000100FEFFFCFF0000FEFFFDFF0300FDFF010003000000010000000000FBFF0200FDFFFEFF010000000200000003000100FFFF0000FBFFFEFFFBFF010000000000FFFFFEFF0500040000000300000000000100FDFF0000FCFFFFFF040002000000FCFF0600000001000100020000000100FAFF00000000FFFFFFFFFFFF01000000030007000100010001000100010006000000FEFF0100FEFFFDFF0000FDFFFFFF0100FCFF"> : tensor<5x6x7xi16>
    %1 = stablehlo.constant dense<[[[-2, 4], [-3, -1]], [[0, 0], [0, -3]], [[0, -1], [0, 7]], [[4, 0], [1, -1]], [[-2, -1], [0, 1]]]> : tensor<5x2x2xi16>
    return %0, %1 : tensor<5x6x7xi16>, tensor<5x2x2xi16>
  }
  func.func private @expected() -> tensor<5x6x7xi16> {
    %0 = stablehlo.constant dense<"0xtensor<5x6x7xi16>
    return %0 : tensor<5x6x7xi16>
  }
}

