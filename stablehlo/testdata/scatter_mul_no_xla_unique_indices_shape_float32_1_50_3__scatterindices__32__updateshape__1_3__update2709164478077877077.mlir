// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<32> : tensor<1xi32>
    %1:2 = call @inputs() : () -> (tensor<1x50x3xf32>, tensor<1x3xf32>)
    %2 = call @expected() : () -> tensor<1x50x3xf32>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<f32>, %arg1: tensor<f32>):
      %5 = stablehlo.multiply %arg0, %arg1 : tensor<f32>
      stablehlo.return %5 : tensor<f32>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0, 1], inserted_window_dims = [1], scatter_dims_to_operand_dims = [1]>, unique_indices = true} : (tensor<1x50x3xf32>, tensor<1xi32>, tensor<1x3xf32>) -> tensor<1x50x3xf32>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<1x50x3xf32>, tensor<1x50x3xf32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<1x50x3xf32>, tensor<1x3xf32>) {
    %0 = stablehlo.constant dense<"0x6BB62440774362BF97C236400C17A93F11AC35C0695E904072A68D40ABAA3940906385BFAAB0B43FBE960F4083B1AC3FF65126C025324740256E5CC0927320C0861ECEBE8DA8F4BCD491CB3E9F6C1AC04BE0B9BF20E90CBF8C322B4051170FBF058FDF405FA568BF8E0019C0D081CCBF658A5140E10B67408D401840D68F8EC01FC4724016D24640F970243F02B00540A50DADC0B944023FA9168FC0083D36C071D056406DB43440F41C00C00903CB3FF7D5B840BBAD61C08DB675C026A78EBE16FD993F639651C02182913DBD96CB40661F873E9C54D83F259469C0955668BE173C2DC09CC6B340B8E222BF4FB20DC01A2C76C09E0405C0C12855C01449A1406DCF853F442EAEBEB859D6BF381FB7BD593C04C143F20AC0246B13C082797240A6AF403F1EB475C01599574059E3E0BE8A0640C045E79A402CD825BF6BBD234039250A4003AA963FDDEDB4C0A6D59840CABF0D3F8C9DA2BF40A3D8403FB9A03F8D96B9BF2E922F3F7FA52F40401A6840530315C00F56C53F23285ABE12C30C3F891487C0C5DE88BF5484B2C0B08B733FFB86CEBE9AA1493F07A697C050055140B94EE03ECA23F03F3FBAB0BFEA660B3F7DAE0BC0732B80C0D009D7BE6C7E0A40E1D7853D06E923403DB75B40AAD805C0367CB03F786D09C01C026DC00C580DC0640C2C406DAB0F40D7697540C66BF93FE4BB01404EB7984087BBFCBF822DBA3FE4B30ABF4E5F23403FBAD2BF6B96054169EAC5BF0B443BBE6920DCBF974B8EC06AB550C0F72D373E0CD6873E399EABBFFC1E49C0298C443F3B67913FFFB2DB3FDDB619C0A813CE3E427F2D404C8A5EBFB30FDBBD571580C0"> : tensor<1x50x3xf32>
    %1 = stablehlo.constant dense<[[4.56681967, 0.279080808, 0.50340426]]> : tensor<1x3xf32>
    return %0, %1 : tensor<1x50x3xf32>, tensor<1x3xf32>
  }
  func.func private @expected() -> tensor<1x50x3xf32> {
    %0 = stablehlo.constant dense<"0x6BB62440774362BF97C236400C17A93F11AC35C0695E904072A68D40ABAA3940906385BFAAB0B43FBE960F4083B1AC3FF65126C025324740256E5CC0927320C0861ECEBE8DA8F4BCD491CB3E9F6C1AC04BE0B9BF20E90CBF8C322B4051170FBF058FDF405FA568BF8E0019C0D081CCBF658A5140E10B67408D401840D68F8EC01FC4724016D24640F970243F02B00540A50DADC0B944023FA9168FC0083D36C071D056406DB43440F41C00C00903CB3FF7D5B840BBAD61C08DB675C026A78EBE16FD993F639651C02182913DBD96CB40661F873E9C54D83F259469C0955668BE173C2DC09CC6B340B8E222BF4FB20DC01A2C76C09E0405C0C12855C01449A1406DCF853F442EAEBEB859D6BF381FB7BD593C04C143F20AC0246B13C082797240A6AF403F1EB475C01599574059E3E0BE8A0640C045E79A402CD825BF6BBD234039250A4003AA963FDDEDB4C0A6D59840CABF0D3F8C9DA2BF40A3D8403FB9A03F8D96B9BF2E922F3F7FA52F40401A6840530315C00F56C53F23285ABE12C30C3FC4389AC198CA98BE7BBB33C0B08B733FFB86CEBE9AA1493F07A697C050055140B94EE03ECA23F03F3FBAB0BFEA660B3F7DAE0BC0732B80C0D009D7BE6C7E0A40E1D7853D06E923403DB75B40AAD805C0367CB03F786D09C01C026DC00C580DC0640C2C406DAB0F40D7697540C66BF93FE4BB01404EB7984087BBFCBF822DBA3FE4B30ABF4E5F23403FBAD2BF6B96054169EAC5BF0B443BBE6920DCBF974B8EC06AB550C0F72D373E0CD6873E399EABBFFC1E49C0298C443F3B67913FFFB2DB3FDDB619C0A813CE3E427F2D404C8A5EBFB30FDBBD571580C0"> : tensor<1x50x3xf32>
    return %0 : tensor<1x50x3xf32>
  }
}

