// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<32> : tensor<1xi32>
    %1:2 = call @inputs() : () -> (tensor<1x50x3xf32>, tensor<1x3xf32>)
    %2 = call @expected() : () -> tensor<1x50x3xf32>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<f32>, %arg1: tensor<f32>):
      %5 = stablehlo.multiply %arg0, %arg1 : tensor<f32>
      stablehlo.return %5 : tensor<f32>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0, 1], inserted_window_dims = [1], scatter_dims_to_operand_dims = [1]>, unique_indices = true} : (tensor<1x50x3xf32>, tensor<1xi32>, tensor<1x3xf32>) -> tensor<1x50x3xf32>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<1x50x3xf32>, tensor<1x50x3xf32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<1x50x3xf32>, tensor<1x3xf32>) {
    %0 = stablehlo.constant dense<"0x80A7B03F038D57C028D5C93F9B881EC071E4A73FAEFCFA3E247AC93F0B7109C0E748253FA49EE73F754FB53F8514253F5B7F333EBBB7FE3D19859440A7A36D402A7A9BC00E339740B21142C0DA5246BF2758C3BFD0D6AB3FFE31F6C0106B92402074544066174C3F571417C0009DA6C0401433C03689083FC581863F628DE2BF0DFD15C0D2E341C03BA0FFC05ACF083E9757A94032ED313F48FF7B40D581C2BF5F812440DDD67440C8B7D34061EF1241B86B9B3F106696C013590CC0E062EF40B8AEB8400BF7A1C062CB6040D616853FC3A4863F71F1E13F2BE837401A44EF3F2181B5BE73D7CD4075318940FDAE903E0558353FA2E10E4037C1674040DDE7401B9EF4BFDBD2C0406906B53D455A5E40955239401AA5EB3E86734FC0DCB84ABFBDCA2EC0D9FB1F3F12383CC0DEE1A23FF6B5753E5EAA183FFAD97AC082623440390390404DB0803FE51E54C057215B3FD0F8D540D9D849C00F269340A71380C099C882407B7BB43F332376401621E83F20FEBBBF256191402DFD99C0D0A79CBF1DDD04C0A5C606402F0544C0D885DCBEF1EF60C0B4B98EBF4D2252C05420C33F73733C3EDF048F3FDA303ABDA3EB32C0432EA13EA86C86BEFE581041958E5E403667BB3FB400E0BF7D39AC3F1DA8613FAC01D2C03C46C1C037963DC003C33ABE034861C022FD4F3FA2D86A408570623F13A51EC02FF6A640395467C07D28F1BFAE833540CA88D9C0DAA35240E0BA39BF40EF00C0F248AB40A93CA5BF30612FBF20702C3E49831EC0EE5758C0C64577C0C5A945BEC27F4D408D6356405CC6CFC0D5EA5E403E5EA2BFD626BFBF6AB0DEBEDF3542C084B64540"> : tensor<1x50x3xf32>
    %1 = stablehlo.constant dense<[[0.892897129, -1.60477984, 1.76027668]]> : tensor<1x3xf32>
    return %0, %1 : tensor<1x50x3xf32>, tensor<1x3xf32>
  }
  func.func private @expected() -> tensor<1x50x3xf32> {
    %0 = stablehlo.constant dense<"0x80A7B03F038D57C028D5C93F9B881EC071E4A73FAEFCFA3E247AC93F0B7109C0E748253FA49EE73F754FB53F8514253F5B7F333EBBB7FE3D19859440A7A36D402A7A9BC00E339740B21142C0DA5246BF2758C3BFD0D6AB3FFE31F6C0106B92402074544066174C3F571417C0009DA6C0401433C03689083FC581863F628DE2BF0DFD15C0D2E341C03BA0FFC05ACF083E9757A94032ED313F48FF7B40D581C2BF5F812440DDD67440C8B7D34061EF1241B86B9B3F106696C013590CC0E062EF40B8AEB8400BF7A1C062CB6040D616853FC3A4863F71F1E13F2BE837401A44EF3F2181B5BE73D7CD4075318940FDAE903E0558353FA2E10E4037C1674040DDE7401B9EF4BFDBD2C0406906B53D455A5E40955239401AA5EB3E86734FC0DCB84ABFBDCA2EC0D9FB1F3F12383CC0DEE1A23FF6B5753E5EAA183FFAD97AC082623440390390404DB0803FE51E54C057215B3FD0F8D540D9D849C00F269340A71380C099C882407B7BB43F332376401621E83F20FEBBBF256191402DFD99C0D0A79CBF6C44EDBF264958C06286ACC0D885DCBEF1EF60C0B4B98EBF4D2252C05420C33F73733C3EDF048F3FDA303ABDA3EB32C0432EA13EA86C86BEFE581041958E5E403667BB3FB400E0BF7D39AC3F1DA8613FAC01D2C03C46C1C037963DC003C33ABE034861C022FD4F3FA2D86A408570623F13A51EC02FF6A640395467C07D28F1BFAE833540CA88D9C0DAA35240E0BA39BF40EF00C0F248AB40A93CA5BF30612FBF20702C3E49831EC0EE5758C0C64577C0C5A945BEC27F4D408D6356405CC6CFC0D5EA5E403E5EA2BFD626BFBF6AB0DEBEDF3542C084B64540"> : tensor<1x50x3xf32>
    return %0 : tensor<1x50x3xf32>
  }
}

