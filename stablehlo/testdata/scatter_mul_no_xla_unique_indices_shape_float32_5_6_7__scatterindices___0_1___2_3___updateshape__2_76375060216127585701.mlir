// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<[[0, 1], [2, 3]]> : tensor<2x2xi32>
    %1:2 = call @inputs() : () -> (tensor<5x6x7xf32>, tensor<2x7xf32>)
    %2 = call @expected() : () -> tensor<5x6x7xf32>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<f32>, %arg1: tensor<f32>):
      %5 = stablehlo.multiply %arg0, %arg1 : tensor<f32>
      stablehlo.return %5 : tensor<f32>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [1], inserted_window_dims = [0, 1], scatter_dims_to_operand_dims = [0, 1], index_vector_dim = 1>, unique_indices = true} : (tensor<5x6x7xf32>, tensor<2x2xi32>, tensor<2x7xf32>) -> tensor<5x6x7xf32>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<5x6x7xf32>, tensor<5x6x7xf32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<5x6x7xf32>, tensor<2x7xf32>) {
    %0 = stablehlo.constant dense<"0xF2B3EBBFF7870F3F569DCABFB9E646C05B4997C08E70E2BF6337D63ED78AE5BFDAF1B13E211284BF2C86803CDA80E53EF1A7DBC0343153C09C3E34C0F085A7BD2F52A8BED0D7353F62ECBA3F150D73C0864810404B77EB3F2FB01FBF2BF86640FD85473F11E6164028E8E2BF646A1D40EF2FC3408F35ACBFEE890E407DECC1BF40B12240A7DC70C07F8640C04FA9D63F17BD94C0C14CC83F3EA83DC088081FC06B2B67C0EA6E9FC0629F2640BED1923F8958E0BEB062C7BEC6A469C009D2B53D765B3BBFA28708C0850948C093D62F405021C33F2335CCBF2AB8EB3F99CE11C01586CD3E4F6A7FC09E7DFDBACF6506C0A514A83D907F5BC0D7FA05C136CA2840C0958D3FE43085BFA560B8BE03C080BF9D0154C0B87F0E40C1F90C4051D4FB3FEC8B07418F2C79C0B80CAABF86D68F40D67D34C0DB6218BF8F43A63FD8FB88C072CF49C0A0C1B93F89085B3EB53B163FD1B32FC03F3064C09873614093EB4F4078DF10BF8B6D38C08411083E59679A4055CC07BFEB7B05C06471C940C9626C3FA60858C0AD3563C0701682407C9718C0421B4F404324CA3F5EB15DC0F40BC3BF8F4C7740EBCA0940F1EEA6C0E60116C0DC782A40F415513F4C2CFF3EA812614051E7D1BF29E8BCC06CE5F5BF8E37333F997F8F40C5D777C0B8CC7EC0C023FE3EC4FD883F76D3BCBF366701C0AA503940125E95C0F4AC834003AC0DC0D59D40BF0D00453EA4A44B4009703640CC7543C0D9F8C0BD95DB90BE589E324008A56E404D3DB8BFCC62DDBF3B6545BF49008EBE5F39A0C0B5C824C063C8C9BE8F8F0B402EE81EBEFB112440F19510400A347FBF812F30C0F9623E4004B6133E15D6CFBE3B110F4019F037C037F0AFC0BE5D56C0409973C017A17B3F0FEC9BC0124A44BFEEE7283F4564A8C02CE34240446A913ECE692CC00E056C40C4FBD23F437283C0DC63F33D10E5934006BFAEBF971AE3BE52B523C0BCAD95C05FB52CBF611937405636AA40CC0D87C08D435E3F92B7F8BFDF057940775242C0F37806BEECE805BFD3A62840FA83AC406C2D93404590903F6E748140F33ECCBF869CF6BE87A553C092A2BE3FCBBCEA3FA98761C0BD8E833F49C44DC02D763F3F0FDF9040ADD582BEB4DA0B408F2579BFE203CEC06E75FB3F2F9A03C0E99BCBBE6F464A402EA8A0BFA61619BF19B942BF"> : tensor<5x6x7xf32>
    %1 = stablehlo.constant dense<[[-5.71607447, -5.85860968, 1.99600971, 3.9259913, -0.491788179, 1.41071045, -0.756365776], [-8.4351778, -7.9426794, -3.41409612, 1.50559688, 1.94015896, 4.15228176, -2.82223272]]> : tensor<2x7xf32>
    return %0, %1 : tensor<5x6x7xf32>, tensor<2x7xf32>
  }
  func.func private @expected() -> tensor<5x6x7xf32> {
    %0 = stablehlo.constant dense<"0xtensor<5x6x7xf32>
    return %0 : tensor<5x6x7xf32>
  }
}

