// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<[[0, 1], [2, 3]]> : tensor<2x2xi32>
    %1:2 = call @inputs() : () -> (tensor<5x6x7xi32>, tensor<2x7xi32>)
    %2 = call @expected() : () -> tensor<5x6x7xi32>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<i32>, %arg1: tensor<i32>):
      %5 = stablehlo.multiply %arg0, %arg1 : tensor<i32>
      stablehlo.return %5 : tensor<i32>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [1], inserted_window_dims = [0, 1], scatter_dims_to_operand_dims = [0, 1], index_vector_dim = 1>, unique_indices = true} : (tensor<5x6x7xi32>, tensor<2x2xi32>, tensor<2x7xi32>) -> tensor<5x6x7xi32>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<5x6x7xi32>, tensor<5x6x7xi32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<5x6x7xi32>, tensor<2x7xi32>) {
    %0 = stablehlo.constant dense<"0xFDFFFFFFFDFFFFFF00000000FDFFFFFFFEFFFFFF01000000030000000400000003000000000000000500000000000000FFFFFFFF000000000400000000000000FFFFFFFFFEFFFFFFFEFFFFFF01000000FEFFFFFFFFFFFFFF000000000000000000000000FCFFFFFF07000000FCFFFFFFFFFFFFFF0100000000000000FCFFFFFF0700000003000000FEFFFFFFFDFFFFFF0000000001000000FFFFFFFF000000000500000001000000FFFFFFFFFEFFFFFF010000000300000000000000FEFFFFFFFEFFFFFFFFFFFFFFFEFFFFFF02000000FCFFFFFF010000000500000000000000FFFFFFFF020000000100000006000000FCFFFFFFFEFFFFFFFCFFFFFF000000000000000001000000FEFFFFFF01000000FFFFFFFF0600000000000000F9FFFFFF01000000F8FFFFFFFFFFFFFFFEFFFFFFFCFFFFFFFFFFFFFF03000000FBFFFFFF0000000000000000FFFFFFFF03000000FDFFFFFF00000000FFFFFFFF02000000F9FFFFFFFFFFFFFFFDFFFFFF0100000000000000FDFFFFFFFEFFFFFF0100000003000000FEFFFFFF0300000004000000FCFFFFFFFEFFFFFF0200000000000000FDFFFFFFFFFFFFFF01000000010000000100000000000000FFFFFFFFFEFFFFFFFFFFFFFFFCFFFFFF03000000FCFFFFFFFFFFFFFFFCFFFFFF02000000020000000000000004000000FEFFFFFF06000000FCFFFFFFFEFFFFFFFDFFFFFF00000000FDFFFFFF03000000FDFFFFFF00000000000000000100000000000000FDFFFFFF0300000000000000FDFFFFFF00000000FDFFFFFF03000000F9FFFFFF00000000FEFFFFFFFFFFFFFF030000000300000004000000030000000200000000000000FEFFFFFF03000000FFFFFFFFFFFFFFFF00000000FFFFFFFF02000000FCFFFFFF03000000FDFFFFFF01000000FEFFFFFF000000000200000003000000FFFFFFFFFDFFFFFF010000000600000000000000FFFFFFFF030000000100000004000000FEFFFFFF03000000FDFFFFFF0200000007000000FDFFFFFF01000000020000000300000002000000010000000100000003000000FFFFFFFFFEFFFFFF02000000FEFFFFFF00000000000000000000000005000000FFFFFFFFFFFFFFFFFAFFFFFFFDFFFFFF0100000001000000FEFFFFFFFAFFFFFF01000000FDFFFFFF00000000FDFFFFFF00000000"> : tensor<5x6x7xi32>
    %1 = stablehlo.constant dense<[[-1, 2, -2, 3, -5, 1, 0], [-2, -4, -1, 0, 0, 2, 3]]> : tensor<2x7xi32>
    return %0, %1 : tensor<5x6x7xi32>, tensor<2x7xi32>
  }
  func.func private @expected() -> tensor<5x6x7xi32> {
    %0 = stablehlo.constant dense<"0xFDFFFFFFFDFFFFFF00000000FDFFFFFFFEFFFFFF0100000003000000FCFFFFFF06000000000000000F00000000000000FFFFFFFF000000000400000000000000FFFFFFFFFEFFFFFFFEFFFFFF01000000FEFFFFFFFFFFFFFF000000000000000000000000FCFFFFFF07000000FCFFFFFFFFFFFFFF0100000000000000FCFFFFFF0700000003000000FEFFFFFFFDFFFFFF0000000001000000FFFFFFFF000000000500000001000000FFFFFFFFFEFFFFFF010000000300000000000000FEFFFFFFFEFFFFFFFFFFFFFFFEFFFFFF02000000FCFFFFFF010000000500000000000000FFFFFFFF020000000100000006000000FCFFFFFFFEFFFFFFFCFFFFFF000000000000000001000000FEFFFFFF01000000FFFFFFFF0600000000000000F9FFFFFF01000000F8FFFFFFFFFFFFFFFEFFFFFFFCFFFFFFFFFFFFFF03000000FBFFFFFF0000000000000000FFFFFFFF03000000FDFFFFFF00000000FFFFFFFF02000000F9FFFFFFFFFFFFFFFDFFFFFF0100000000000000FDFFFFFFFEFFFFFF0100000003000000FEFFFFFF0300000004000000FCFFFFFFFEFFFFFF0200000000000000FDFFFFFF02000000FCFFFFFFFFFFFFFF0000000000000000FEFFFFFFFAFFFFFFFFFFFFFFFCFFFFFF03000000FCFFFFFFFFFFFFFFFCFFFFFF02000000020000000000000004000000FEFFFFFF06000000FCFFFFFFFEFFFFFFFDFFFFFF00000000FDFFFFFF03000000FDFFFFFF00000000000000000100000000000000FDFFFFFF0300000000000000FDFFFFFF00000000FDFFFFFF03000000F9FFFFFF00000000FEFFFFFFFFFFFFFF030000000300000004000000030000000200000000000000FEFFFFFF03000000FFFFFFFFFFFFFFFF00000000FFFFFFFF02000000FCFFFFFF03000000FDFFFFFF01000000FEFFFFFF000000000200000003000000FFFFFFFFFDFFFFFF010000000600000000000000FFFFFFFF030000000100000004000000FEFFFFFF03000000FDFFFFFF0200000007000000FDFFFFFF01000000020000000300000002000000010000000100000003000000FFFFFFFFFEFFFFFF02000000FEFFFFFF00000000000000000000000005000000FFFFFFFFFFFFFFFFFAFFFFFFFDFFFFFF0100000001000000FEFFFFFFFAFFFFFF01000000FDFFFFFF00000000FDFFFFFF00000000"> : tensor<5x6x7xi32>
    return %0 : tensor<5x6x7xi32>
  }
}

