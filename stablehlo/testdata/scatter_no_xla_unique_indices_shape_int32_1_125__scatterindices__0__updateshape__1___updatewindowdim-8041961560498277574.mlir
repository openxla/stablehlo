// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<0> : tensor<1xi32>
    %1:2 = call @inputs() : () -> (tensor<1x125xi32>, tensor<1xi32>)
    %2 = call @expected() : () -> tensor<1x125xi32>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<i32>, %arg1: tensor<i32>):
      stablehlo.return %arg1 : tensor<i32>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0], inserted_window_dims = [1], scatter_dims_to_operand_dims = [1]>, unique_indices = true} : (tensor<1x125xi32>, tensor<1xi32>, tensor<1xi32>) -> tensor<1x125xi32>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<1x125xi32>, tensor<1x125xi32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<1x125xi32>, tensor<1xi32>) {
    %0 = stablehlo.constant dense<"0xFCFFFFFF00000000FEFFFFFFFDFFFFFFFEFFFFFFFFFFFFFF05000000010000000100000000000000FFFFFFFF01000000FFFFFFFF040000000400000002000000FDFFFFFF00000000020000000200000001000000FDFFFFFFFEFFFFFFFEFFFFFF00000000FFFFFFFFFDFFFFFF0000000000000000FFFFFFFF03000000000000000400000002000000FDFFFFFF01000000FCFFFFFF000000000000000002000000FFFFFFFF0400000000000000000000000100000005000000FEFFFFFF04000000FFFFFFFF04000000FEFFFFFF010000000400000000000000000000000100000000000000FFFFFFFFFEFFFFFF03000000FBFFFFFF00000000FCFFFFFF03000000FDFFFFFF03000000FFFFFFFF01000000FAFFFFFFFDFFFFFF000000000000000000000000FFFFFFFFFCFFFFFFFFFFFFFF02000000FFFFFFFFFEFFFFFFFEFFFFFF020000000100000000000000FBFFFFFFFFFFFFFF02000000060000000000000000000000FCFFFFFF0000000000000000FEFFFFFF02000000FCFFFFFF00000000000000000000000002000000030000000200000000000000FEFFFFFFF9FFFFFF02000000FCFFFFFF0000000000000000FDFFFFFF02000000000000000400000000000000030000000400000000000000FEFFFFFF02000000FFFFFFFF0400000003000000FEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"> : tensor<1x125xi32>
    %1 = stablehlo.constant dense<-2> : tensor<1xi32>
    return %0, %1 : tensor<1x125xi32>, tensor<1xi32>
  }
  func.func private @expected() -> tensor<1x125xi32> {
    %0 = stablehlo.constant dense<"0xtensor<1x125xi32>
    return %0 : tensor<1x125xi32>
  }
}

