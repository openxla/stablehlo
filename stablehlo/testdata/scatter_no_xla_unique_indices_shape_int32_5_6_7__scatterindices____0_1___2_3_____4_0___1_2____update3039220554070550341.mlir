// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<[[[0, 1], [2, 3]], [[4, 0], [1, 2]]]> : tensor<2x2x2xi32>
    %1:2 = call @inputs() : () -> (tensor<5x6x7xi32>, tensor<5x2x2xi32>)
    %2 = call @expected() : () -> tensor<5x6x7xi32>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<i32>, %arg1: tensor<i32>):
      stablehlo.return %arg1 : tensor<i32>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0], inserted_window_dims = [1, 2], scatter_dims_to_operand_dims = [1, 2], index_vector_dim = 2>, unique_indices = true} : (tensor<5x6x7xi32>, tensor<2x2x2xi32>, tensor<5x2x2xi32>) -> tensor<5x6x7xi32>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<5x6x7xi32>, tensor<5x6x7xi32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<5x6x7xi32>, tensor<5x2x2xi32>) {
    %0 = stablehlo.constant dense<"0xtensor<5x6x7xi32>
    %1 = stablehlo.constant dense<[[[-4, 3], [0, 1]], [[0, 3], [-1, 0]], [[6, 0], [0, 0]], [[1, 2], [1, 4]], [[-1, 3], [5, -1]]]> : tensor<5x2x2xi32>
    return %0, %1 : tensor<5x6x7xi32>, tensor<5x2x2xi32>
  }
  func.func private @expected() -> tensor<5x6x7xi32> {
    %0 = stablehlo.constant dense<"0x01000000FCFFFFFF020000000000000000000000000000000000000003000000FDFFFFFF0100000007000000050000000000000005000000FCFFFFFF00000000FCFFFFFF03000000FCFFFFFF020000000200000001000000FDFFFFFFFDFFFFFFFDFFFFFF00000000FCFFFFFF01000000000000000100000002000000FFFFFFFF0400000001000000FDFFFFFF0200000001000000000000000000000000000000FFFFFFFFFFFFFFFFFDFFFFFF0000000001000000FEFFFFFFFEFFFFFFFCFFFFFF0200000003000000FFFFFFFF00000000FBFFFFFF0100000000000000FEFFFFFF02000000FCFFFFFF04000000030000000300000001000000010000000100000001000000010000000300000000000000FEFFFFFF06000000FFFFFFFF00000000FCFFFFFFFEFFFFFF040000000000000000000000010000000100000001000000FAFFFFFF0000000002000000FEFFFFFF0100000006000000FEFFFFFFFEFFFFFFFFFFFFFFFEFFFFFF00000000040000000100000000000000FFFFFFFFFFFFFFFF0600000000000000FDFFFFFFFDFFFFFF0500000000000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFEFFFFFF000000000000000000000000FDFFFFFF0100000000000000F9FFFFFFFDFFFFFF00000000FFFFFFFF050000000000000001000000FFFFFFFF050000000000000000000000050000000700000001000000010000000300000001000000000000000000000001000000FFFFFFFF010000000400000000000000FBFFFFFF02000000FFFFFFFF00000000010000000100000002000000FEFFFFFF00000000000000000500000002000000030000000100000000000000FCFFFFFF010000000100000002000000FFFFFFFFFDFFFFFFFEFFFFFF00000000FFFFFFFFFDFFFFFF0700000002000000F8FFFFFF00000000FEFFFFFF0700000003000000FFFFFFFFFEFFFFFF00000000FEFFFFFF0000000000000000FDFFFFFF01000000FFFFFFFFFEFFFFFF010000000100000000000000FBFFFFFF00000000FBFFFFFF03000000FDFFFFFFFDFFFFFFFFFFFFFFFEFFFFFF0100000001000000FFFFFFFF00000000FEFFFFFFFBFFFFFF05000000010000000400000002000000020000000000000005000000020000000400000000000000FCFFFFFF010000000000000000000000"> : tensor<5x6x7xi32>
    return %0 : tensor<5x6x7xi32>
  }
}

