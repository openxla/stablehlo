// RUN-DISABLED: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0 = stablehlo.constant dense<[[[0], [1]], [[2], [3]]]> : tensor<2x2x1xi32>
    %1:2 = call @inputs() : () -> (tensor<5x6x7xui16>, tensor<5x2x2x7xui16>)
    %2 = call @expected() : () -> tensor<5x6x7xui16>
    %3 = "stablehlo.scatter"(%1#0, %0, %1#1) ({
    ^bb0(%arg0: tensor<ui16>, %arg1: tensor<ui16>):
      stablehlo.return %arg1 : tensor<ui16>
    }) {scatter_dimension_numbers = #stablehlo.scatter<update_window_dims = [0, 3], inserted_window_dims = [1], scatter_dims_to_operand_dims = [1], index_vector_dim = 2>, unique_indices = true} : (tensor<5x6x7xui16>, tensor<2x2x1xi32>, tensor<5x2x2x7xui16>) -> tensor<5x6x7xui16>
    %4 = stablehlo.custom_call @check.eq(%3, %2) : (tensor<5x6x7xui16>, tensor<5x6x7xui16>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<5x6x7xui16>, tensor<5x2x2x7xui16>) {
    %0 = stablehlo.constant dense<"0x000002000200010000000600040002000000010003000000000005000300000000000100030001000100020002000000030001000300000005000000010000000400070002000100000008000000020000000300000003000100000000000100000002000300030005000000000002000100020000000100010001000000010003000200040000000500050000000100010002000300040000000300020005000100010002000400010000000100000000000000010002000100020001000400020001000300000000000100030000000000000000000000060005000600000001000200030007000000000003000300020000000000020001000000050001000300030000000300000000000400010000000100030001000100070001000200020000000300020001000000030001000100040000000100000001000000030001000300000000000000070003000000010001000000030000000000010000000200010000000100000004000000010001000100050008000000020000000100010002000300020003000100010001000100020004000300010002000600000000000200"> : tensor<5x6x7xui16>
    %1 = stablehlo.constant dense<"0xtensor<5x2x2x7xui16>
    return %0, %1 : tensor<5x6x7xui16>, tensor<5x2x2x7xui16>
  }
  func.func private @expected() -> tensor<5x6x7xui16> {
    %0 = stablehlo.constant dense<"0x010002000700000001000800010004000400000001000000000005000000000001000400000000000300000004000200010002000000040005000000010000000400070002000100000008000000020000000300030000000500000002000400050001000200040002000300040003000300010000000300030004000400010000000200030000000100020000000100010002000300040000000300020005000100010002000400080001000100020000000300010002000100020000000100060001000200060004000000000002000200010005000300000002000100040001000200030007000000000003000300020000000000020001000000000001000000000004000400000000000200050005000200030006000500000003000000000001000200020001000200040001000300030000000100000001000000030001000300000000000000070003000000080000000200020006000000000006000100010005000600000002000200020004000100040001000100030000000500030002000000010003000100010001000100020004000300010002000600000000000200"> : tensor<5x6x7xui16>
    return %0 : tensor<5x6x7xui16>
  }
}

