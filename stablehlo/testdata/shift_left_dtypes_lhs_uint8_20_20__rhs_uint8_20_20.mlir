// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xui8>, tensor<20x20xui8>)
    %1 = call @expected() : () -> tensor<20x20xui8>
    %2 = stablehlo.shift_left %0#0, %0#1 : tensor<20x20xui8>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x20xui8>, tensor<20x20xui8>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xui8>, tensor<20x20xui8>) {
    %0 = stablehlo.constant dense<"0x06050502020104020200020008000502010100040100020201040302040600000104000202010402060101060000020204020102020600010000020801010102020007030006030500010106020100010102000001000502050000010102010102060103020301030404040704010002000300000300040101010403040101010002050101020200000006010106020000050201000105000201020300080002010001030003000003040203050400030402040302020503000300020101000001020302040003010003010001020301000101020204000402020104000202000100080200000201000300030102020701030006010001010000010502010200020401030103010000010006000105010206010000020100030003060300060103010204000503020200020300020701010003000402030200010300000302030104010301000002010000020202010306040103020002020300010003050001010101010104040101000002050004000200010201000201010202020001000001000000020401050005000200030503"> : tensor<20x20xui8>
    %1 = stablehlo.constant dense<"0xtensor<20x20xui8>
    return %0, %1 : tensor<20x20xui8>, tensor<20x20xui8>
  }
  func.func private @expected() -> tensor<20x20xui8> {
    %0 = stablehlo.constant dense<"0xtensor<20x20xui8>
    return %0 : tensor<20x20xui8>
  }
}
