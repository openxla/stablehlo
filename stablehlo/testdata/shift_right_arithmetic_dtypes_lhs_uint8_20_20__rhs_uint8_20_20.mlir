// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xui8>, tensor<20x20xui8>)
    %1 = call @expected() : () -> tensor<20x20xui8>
    %2 = stablehlo.shift_right_arithmetic %0#0, %0#1 : tensor<20x20xui8>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x20xui8>, tensor<20x20xui8>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xui8>, tensor<20x20xui8>) {
    %0 = stablehlo.constant dense<"0x00010104010001020001030001000603030104010200010003020102050206000402040100020302020304010105020004020305000000010100030201000201020100000100010402010501020103050301010403000403030002020102030007010204000507000103060101010000030407000303010100050706020102010003000202000000030004000001000002000400000102040300000000000000030401020103000108040302030601010201020101010100040001060303010101000101000501000203020300020407020000040007030100030500060601030201010203040004000003050000050004040206010400020701000500040401000104040103000100030201030002050400010503010400000100020406000203000100020203010303000002010100000501020005050006000000070300030401010202000204050307010300050501060601070001050600050101020702000102020105000002010101000002030402000001010001010201030200030606010004050304000102020007010201"> : tensor<20x20xui8>
    %1 = stablehlo.constant dense<"0xtensor<20x20xui8>
    return %0, %1 : tensor<20x20xui8>, tensor<20x20xui8>
  }
  func.func private @expected() -> tensor<20x20xui8> {
    %0 = stablehlo.constant dense<"0xtensor<20x20xui8>
    return %0 : tensor<20x20xui8>
  }
}
