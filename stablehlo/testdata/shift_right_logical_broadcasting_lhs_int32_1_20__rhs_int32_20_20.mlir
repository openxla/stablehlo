// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<1x20xi32>, tensor<20x20xi32>)
    %1 = call @expected() : () -> tensor<20x20xi32>
    %2 = stablehlo.broadcast_in_dim %0#0, dims = [0, 1] : (tensor<1x20xi32>) -> tensor<20x20xi32>
    %3 = stablehlo.shift_right_logical %2, %0#1 : tensor<20x20xi32>
    %4 = stablehlo.custom_call @check.eq(%3, %1) : (tensor<20x20xi32>, tensor<20x20xi32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<1x20xi32>, tensor<20x20xi32>) {
    %0 = stablehlo.constant dense<[[0, 0, 0, 5, 1, 2, 0, -3, 1, 0, 0, 0, 1, -3, 3, 0, -2, 0, 4, -2]]> : tensor<1x20xi32>
    %1 = stablehlo.constant dense<"0xtensor<20x20xi32>
    return %0, %1 : tensor<1x20xi32>, tensor<20x20xi32>
  }
  func.func private @expected() -> tensor<20x20xi32> {
    %0 = stablehlo.constant dense<"0x00000000000000000000000005000000000000000200000000000000FEFFFF7F0100000000000000000000000000000000000000FFFFFF3F0000000000000000FEFFFFFF0000000002000000FFFFFF3F00000000000000000000000000000000000000000000000000000000FDFFFFFF0000000000000000000000000000000001000000000000000300000000000000000000000000000004000000FEFFFFFF00000000000000000000000000000000000000000100000000000000FDFFFFFF0100000000000000000000000000000000000000FDFFFFFF0000000000000000FFFFFF7F0000000000000000FEFFFFFF00000000000000000000000000000000000000000200000000000000FFFFFF1F0000000000000000000000000000000001000000FEFFFF7F0100000000000000FFFFFF3F00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FDFFFFFF0000000000000000FFFFFF1F00000000000000000000000000000000000000000000000005000000000000000200000000000000FFFFFF1F0000000000000000000000000000000000000000FFFFFF1F0000000000000000FEFFFFFF00000000000000000000000000000000000000000000000000000000000000000000000000000000FDFFFFFF0100000000000000000000000000000000000000FFFFFF3F0300000000000000FEFFFFFF00000000040000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FEFFFFFF00000000000000000000000002000000000000000200000000000000000000000000000000000000000000000000000000000000FFFFFF1F0100000000000000000000000000000001000000FFFFFF3F00000000000000000000000000000000010000000000000000000000FDFFFFFF0000000000000000000000000000000000000000000000000000000000000000FEFFFFFF0000000000000000FEFFFFFF00000000000000000000000001000000000000000000000000000000FDFFFFFF0000000000000000000000000000000000000000FFFFFF1F0000000000000000FFFFFF7F0000000000000000FEFFFFFF00000000000000000000000000000000010000000100000000000000000000000100000000000000000000000000000000000000000000000000000000000000FEFFFFFF00000000040000000000000000000000000000000000000002000000000000000000000000000000FDFFFFFF0000000000000000000000000000000001000000FDFFFFFF0000000000000000000000000000000000000000FEFFFFFF00000000000000000000000000000000000000000000000000000000FFFFFF070000000000000000000000000000000000000000FFFFFF0F0000000000000000000000000000000004000000FEFFFFFF00000000000000000000000005000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFF0F00000000000000000000000000000000000000000000000000000000000000000200000000000000000000000100000000000000000000000000000000000000000000000000000000000000FFFFFF3F0000000004000000FEFFFFFF00000000000000000000000000000000010000000000000000000000FDFFFFFF0100000000000000000000000000000000000000000000000000000000000000FEFFFFFF0000000000000000FFFFFF1F00000000000000000000000000000000010000000000000000000000FEFFFF7F0000000000000000000000000000000000000000FEFFFF7F0300000000000000FFFFFF1F0000000000000000FEFFFFFF00000000000000000000000001000000000000000200000000000000FFFFFF0F0000000000000000000000000000000001000000FDFFFFFF0000000000000000FEFFFFFF00000000000000000000000000000000000000000000000005000000000000000200000000000000FEFFFF7F0000000000000000000000000000000000000000000000000000000000000000FEFFFFFF0000000000000000FFFFFF3F"> : tensor<20x20xi32>
    return %0 : tensor<20x20xi32>
  }
}
