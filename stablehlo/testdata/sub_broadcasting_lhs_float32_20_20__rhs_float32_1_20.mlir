// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xf32>, tensor<1x20xf32>)
    %1 = call @expected() : () -> tensor<20x20xf32>
    %2 = stablehlo.broadcast_in_dim %0#1, dims = [0, 1] : (tensor<1x20xf32>) -> tensor<20x20xf32>
    %3 = stablehlo.subtract %0#0, %2 : tensor<20x20xf32>
    %4 = stablehlo.custom_call @check.eq(%3, %1) : (tensor<20x20xf32>, tensor<20x20xf32>) -> tensor<i1>
    return %4 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xf32>, tensor<1x20xf32>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xf32>
    %1 = stablehlo.constant dense<[[-2.10213423, 3.14236474, -0.0476996601, 0.71378225, -4.99376202, 0.689282119, 0.699026227, -1.59163511, -2.67922258, 1.23341644, 6.93745899, -3.13493466, -4.67826796, 0.196232349, 2.13258815, 3.22118735, -0.994539916, 2.27659726, -4.68295956, 0.286352873]]> : tensor<1x20xf32>
    return %0, %1 : tensor<20x20xf32>, tensor<1x20xf32>
  }
  func.func private @expected() -> tensor<20x20xf32> {
    %0 = stablehlo.constant dense<"0xC4492640FA6C99C094FFE5BE83C466C0040AD240B062543E0864D6BF68483F402E0B1741E0DD95BD08DFA9C0106DFB40E5B59F40E760964097307240A479EDBF2839943F62833CBF717B8B401B2201C039CDA53FFBBCD7BF0E85283F199448C0344B4F40E4916EBFCCF920C06AE01FC0F6DA0B41254489BF452D09C124AD833F001127BDBCDD48C0AD4B1FC04D2BD5C0E4B9B64072CC5EC0C0BA6ABE086C4C3F606A6CBEFDB4A8C07A482ABF71C8023FFCE0CD4022B51A40638633BFBBE4B53FEE09F040005D0E3C782EF1C0DAD6F73FB3A9C640280242BE44F7F5C0B21715C0602A0B3F177B0A40C888AB4034F78A40426AB5BF0C5C97C0690AD9BF02E51EC054CBD64012F3B3BEDCA8D7C091DEC63F8CE0A4407B35EA3FA8FFA8C06885EFBE43BA06416E34EFBFD8E08E3ED0D0113E6BA132C0CC0E563F1DA47E401C4E40C04277914078AB3B3F0C154D3C4452A64052EC92408ADB86BFC3ED8BBFEA2D2B4092BDAF4018232340F8D242C164ACCB40DE10A540159555405639AEC002B3BEC02F0712C0AE8280C0E134D24052FB8D40E8DBC23F38F98ABE9316A5C0977C6BC0AC17044168CC9CC0627023C07974F7C0D8054EBFA417BAC0D64011C0E4C045BF1E5DFA3F959312C0746963C0600799BFD0606CBDE5C82EC010264B400A41323FCC156D4039BF87C020BCB7BEE08ED93FF726D04043521840A57376BFF6334140F08522C034B91FC0385291C070BE0041DE848740D5F31740D8B2ABC0B9A802C0E471AB3FB3ED48C09C0AE540D0A084C06687B940019C1FC007037FC06CC5923F4A6EC240C233C23EEB4B32BF98022EBE40ED9FBEA695BABFD0B30CC116EC69408744804022DD5EBF6020E3C0990C4CC033AA8C3FC009CBC022980140EC6DDBBFE8F4BF404E1AB03FD587A43FA458B93FCEBB4D405AD69BC0023C22C1E188FCBF1806F13F54BE9EC08A1883C04839E9405FF10540D62A94C03D603EC0BA66DE3FF22F8EBFD5FC36C05294944060A46DC05FD02D400458ECC00BA8F63FDEBD1F4011BB1240D889BA3FF0499E3E8D085540EE51EB3FFB9E89BF65C0FDC07D9EBF40DE69E040A2434540604C36C06901A7C0260F10C00014D4BDAB6E0F41A3DD36BF098D1A405A4BD23FB7F6543EB71B30C03811B0406E3ADFBF4016CA3DC6B654BF5A726940C5F6974043D624C188AFAB4081C09540D5DFD7BE1691E53F65F61DC1C0BCF43E29D971C038E3FE3FB6D32A4030139FBFEDC099C04B1A684000436BBFC1D0EB40439B5A3FDFB615BFF87B674069538240EC40CBBF3D094AC1FE368CBF36F3DA406EE9CAC0FD6882BF256879C0854E923F0C986FC094B6B240A91201C0407A6EBE34EC2DC0DA820DBF211E22C0F00D41BF6421443E29C205BF9F2BE5BF9BCA1940464D80BF5311E6C00A5B64409EF1F33FD3655EBE306584C00CEC01C1DCF866401C17DC3F3793EC40DE6099408C14C93FFF10DDC026E4703F09439440D1D46C40AF563840042331C031359D400422833FD0965BC0CE37E9C0E5531540CC433A3F310485C018E0C2BE460D9AC0436D77BF50F58E40501A823F88B8373E26ABB0BF840FD5C0F1B595C0FA6280C0BB132F418BF1263F6CB1F6C05B28593F9640564026F78F406F49E7C0BE38734060E8204148A0163F181B7BC0EEFCE2C0999053BFE47396C0DC1F4C401A15ADBFDC5D30C049C749C07EFA9FC0E8ABD6BFB82DCF40D15863C06EA770BFD798C8407CEB1A40787E76C06EBFDDC00845153FDE2402417F47154096CCB33F3C77D7BF78279CBD162E28C0D6DEFF3FAFF076C0C715F340377CA2BFA555D83F1B9336C0380A2F4076450F40D023A2BF47D5114088384A4071A587C0DAF557C114A07B3F758EE9406F623B40E60D96C0B5F411C0433B2B40730F92BF0058D33FD597BE3F3CFC4640F42C03BF5035D1BF251172C0724AC940E08548C01A6A2EC0B488C5408F5ADC406A346B3F21BC0EC1F2940A4090156840D9238CBF61710E40F379A0C0D7C5AC3F6F26CCBFF53FD34065B6C2BF04275A3FD0CCDFC0D474AFBF576331C0661709409ABE10C0C418BEBFAE85AD40AEC5A63FF8DFE73E400608C19ED58EBF2F028A4086C5754025BFDCBF88F367BF753E53C090FBFF3E0CF63341F2F515BF9D6828400D1B73C0596899BE55B11F3F7861E540BE479E3F0CF412C028DA11C08E1E9840415385C01A7D22C1FEF8A1BF7646B84041BAB54077509FC02EE49FC03A73EA3FF6931FC0F44E4240AC270FBF"> : tensor<20x20xf32>
    return %0 : tensor<20x20xf32>
  }
}
