// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xi8>, tensor<20x20xi8>)
    %1 = call @expected() : () -> tensor<20x20xi8>
    %2 = stablehlo.xor %0#0, %0#1 : tensor<20x20xi8>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x20xi8>, tensor<20x20xi8>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xi8>, tensor<20x20xi8>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xi8>
    %1 = stablehlo.constant dense<"0xtensor<20x20xi8>
    return %0, %1 : tensor<20x20xi8>, tensor<20x20xi8>
  }
  func.func private @expected() -> tensor<20x20xi8> {
    %0 = stablehlo.constant dense<"0xFF050600FF05FEFFFF02FDFD02010002FE000102FD02FF00FAFFFD0B0105FA02FD02FAFF02FBFEFFFE02FB02FCFDFFFFFEFEFCFF0002FDFC0003FDFDFEFF04FE00FF0603FFFD03030105FCFD00000200FC02F805FFF5FC04FCFF01050707FFFAFEFCFF05000102FCFEFD0200040101F9FF0305FF01010205FBFC05FBFF00FBFD03FFFFFF000309FFFEFDFF03F901FF00FDFD0201FCFEFF0401FC00FC05FFFB000003FD050300FDFB01010103FAFC010002FCFFFEFE0102FFFEFEF901FEFEFC01FA05FF0100FFFF030401FCFBFC02FFFFFE0203010006FF02FC00FD0201FC0203000404FCFFFC000501FDFEFB01FC0002FFFFFF07FB000302FBFB01FE03FD0101FEFFFD000400F9FC02F1FF00030200FE02FC00FD01FF03FEFDF805F8FD0105020004FF010300FF020403FF00020202FCFD00FC030501FCFEFF0000FF0201FF0008010505FC0303FE00FFFE0200FCFB0002030304FB05FC000201030307FEF90101FD0600F8FE01FCFC00FFF90004010205FC03FFFFFFFEFA00FFFEFEFEFBFE0300FF06FEFFFAFB000305FFFEF8020403"> : tensor<20x20xi8>
    return %0 : tensor<20x20xi8>
  }
}
