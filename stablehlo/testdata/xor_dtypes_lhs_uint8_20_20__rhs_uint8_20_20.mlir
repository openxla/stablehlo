// RUN: stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt -inline | stablehlo-translate --interpret
// RUN: diff <(stablehlo-translate --deserialize %s.0_9_0.bc | stablehlo-opt) <(stablehlo-opt %s)
// RUN: diff <(stablehlo-translate --serialize --target=current %s | stablehlo-translate --deserialize | stablehlo-opt) <(stablehlo-opt %s)

module @jit_testcase {
  func.func public @main() -> tensor<i1> {
    %0:2 = call @inputs() : () -> (tensor<20x20xui8>, tensor<20x20xui8>)
    %1 = call @expected() : () -> tensor<20x20xui8>
    %2 = stablehlo.xor %0#0, %0#1 : tensor<20x20xui8>
    %3 = stablehlo.custom_call @check.eq(%2, %1) : (tensor<20x20xui8>, tensor<20x20xui8>) -> tensor<i1>
    return %3 : tensor<i1>
  }
  func.func private @inputs() -> (tensor<20x20xui8>, tensor<20x20xui8>) {
    %0 = stablehlo.constant dense<"0xtensor<20x20xui8>
    %1 = stablehlo.constant dense<"0xtensor<20x20xui8>
    return %0, %1 : tensor<20x20xui8>, tensor<20x20xui8>
  }
  func.func private @expected() -> tensor<20x20xui8> {
    %0 = stablehlo.constant dense<"0x0200010100020205040000030005050005040603030005030205030502010002030600060104030106030003030503010D04010600000701060302030300000203020300030200000302050705010102020106020500060703080402040402030001000207000703050602020200020102020100060000060101000300010200000602030000000401010002000101020505080101000602030401070701030203020703020207000503040603050104010106000600000704000403060102040303020503030303060003050202030403010200010407000303030002000304030400000101060605000501010507000002030101010B0000070202000707000303000302020203020C030102010403070302000405000001000201020008000303040203060000000303020200010302010000020207060001000206020304000602070401010402020507010002000701000B000305010306020303080001030101010201010401030604000003020304010004000106020303020204020104060007020201030406010006050206"> : tensor<20x20xui8>
    return %0 : tensor<20x20xui8>
  }
}
