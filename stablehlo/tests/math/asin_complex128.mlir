// RUN: stablehlo-opt --chlo-legalize-to-stablehlo %s | stablehlo-translate --interpret
// This file is generated, see build_tools/math/README.md for more information
module @asin_complex128 {
  func.func private @samples() -> tensor<169xcomplex<f64>> {
    %0 = stablehlo.constant dense<"0xtensor<169xcomplex<f64>>
    return %0 : tensor<169xcomplex<f64>>
  }
  func.func private @expected() -> tensor<169xcomplex<f64>> {
    %0 = stablehlo.constant dense<"0xtensor<169xcomplex<f64>>
    return %0 : tensor<169xcomplex<f64>>
  }
  func.func public @main() {
    %0 = call @samples() : () -> tensor<169xcomplex<f64>>
    %1 = "chlo.asin"(%0) : (tensor<169xcomplex<f64>>) -> tensor<169xcomplex<f64>>
    %2 = call @expected() : () -> tensor<169xcomplex<f64>>
    check.expect_close %1, %2, max_ulp_difference = 3 : tensor<169xcomplex<f64>>, tensor<169xcomplex<f64>>
    func.return
  }
}
